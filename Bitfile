VERSION = %(git describe --tags --always --dirty)%
DEST = build
RELEASE = %{DEST}/release

GO_SOURCES = **/*.go

SCHEMA_IN = backend/schema/schema.go backend/schema/protobuf.go \
    cmd/ftl/cmd_schema.go
SCHEMA_OUT = protos/xyz/block/ftl/v1/schema/schema.proto

PROTO_IN = **/*.proto **/buf.* protos/xyz/block/ftl/v1/schema/schema.proto
PROTO_OUT = protos/xyz/block/ftl/v1/ftlv1connect/ftl.connect.go \
    protos/xyz/block/ftl/v1/schema/schema.pb.go \
    protos/xyz/block/ftl/v1/console/console.pb.go \
    protos/xyz/block/ftl/v1/schema/runtime.pb.go \
    protos/xyz/block/ftl/v1/ftl.pb.go \
    console/client/src/protos/xyz/block/ftl/v1/ftl_connect.ts \
    console/client/src/protos/xyz/block/ftl/v1/schema/schema_pb.ts \
    console/client/src/protos/xyz/block/ftl/v1/schema/runtime_pb.ts \
    console/client/src/protos/xyz/block/ftl/v1/ftl_pb.ts \
    console/client/src/protos/xyz/block/ftl/v1/console/console_pb.ts

COMMON_LOG_IN = backend/common/log/api.go
COMMON_LOG_OUT = backend/common/log/log_level_string.go

KT_RUNTIME_IN = kotlin-runtime/ftl-runtime/**/*.{kt,kts} pom.xml kotlin-runtime/**/pom.xml
KT_MVN_OUT = kotlin-runtime/ftl-runtime/target/ftl-runtime-1.0-SNAPSHOT-jar-with-dependencies.jar
KT_RUNTIME_OUT = build/template/ftl/jars/ftl-runtime.jar

CLIENT_OUT = console/client/dist/index.html
CLIENT_IN = console/client/**/*

#virtual release:
#  inputs: %{RELEASE}/ftl %{RELEASE}/ftl-controller %{RELEASE}/ftl-runner

%{RELEASE}:
  build: install -m 0700 -d %{OUT}

# Build all binaries
implicit %{RELEASE}/%{1}: cmd/*
  inputs: %{RELEASE} %{GO_SOURCES}
  build: go build -o %{OUT} -tags release -ldflags "-X main.version=%{VERSION}" ./cmd/%{1}

#%{RELEASE}/ftl-controller: %{RELEASE} %{GO_SOURCES} #%{CLIENT_OUT}
#  build: go build -o %{OUT} -tags release -ldflags "-X main.version=%{VERSION}" ./cmd/ftl-controller

%{SCHEMA_OUT}: %{SCHEMA_IN}
  build:
    ftl-schema > %{OUT}
    buf format -w

%{PROTO_OUT}: %{PROTO_IN}
  build:
    buf format -w
    buf lint
    (cd protos && buf generate)
    (cd backend/common/3rdparty/protos && buf generate)
  -clean

%{KT_MVN_OUT}: %{KT_RUNTIME_IN} %{PROTO_IN}
  build: mvn -pl :ftl-runtime package
  +clean: mvn -pl :ftl-runtime clean

%(dirname %{KT_RUNTIME_OUT})%:
  build: install -m 0700 -d %{OUT}

%{KT_RUNTIME_OUT}: %{KT_MVN_OUT} %(dirname %{KT_RUNTIME_OUT})%
  build: install -m 0600 %{KT_MVN_OUT} %{OUT}

%{COMMON_LOG_OUT}: %{COMMON_LOG_IN}
  build: go generate %{IN}

#%{CLIENT_OUT}: %{CLIENT_IN}
#  cd console/client
#  build:
#    npm install
#    npm run build
