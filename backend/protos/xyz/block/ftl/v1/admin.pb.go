// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        (unknown)
// source: xyz/block/ftl/v1/admin.proto

package ftlv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ConfigProvider int32

const (
	ConfigProvider_CONFIG_PROVIDER_UNSPECIFIED ConfigProvider = 0
	// Write values inline in the configuration file.
	ConfigProvider_CONFIG_PROVIDER_INLINE ConfigProvider = 1
	// Print configuration as environment variables.
	ConfigProvider_CONFIG_PROVIDER_ENVAR ConfigProvider = 2
)

// Enum value maps for ConfigProvider.
var (
	ConfigProvider_name = map[int32]string{
		0: "CONFIG_PROVIDER_UNSPECIFIED",
		1: "CONFIG_PROVIDER_INLINE",
		2: "CONFIG_PROVIDER_ENVAR",
	}
	ConfigProvider_value = map[string]int32{
		"CONFIG_PROVIDER_UNSPECIFIED": 0,
		"CONFIG_PROVIDER_INLINE":      1,
		"CONFIG_PROVIDER_ENVAR":       2,
	}
)

func (x ConfigProvider) Enum() *ConfigProvider {
	p := new(ConfigProvider)
	*p = x
	return p
}

func (x ConfigProvider) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ConfigProvider) Descriptor() protoreflect.EnumDescriptor {
	return file_xyz_block_ftl_v1_admin_proto_enumTypes[0].Descriptor()
}

func (ConfigProvider) Type() protoreflect.EnumType {
	return &file_xyz_block_ftl_v1_admin_proto_enumTypes[0]
}

func (x ConfigProvider) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ConfigProvider.Descriptor instead.
func (ConfigProvider) EnumDescriptor() ([]byte, []int) {
	return file_xyz_block_ftl_v1_admin_proto_rawDescGZIP(), []int{0}
}

type SecretProvider int32

const (
	SecretProvider_SECRET_PROVIDER_UNSPECIFIED SecretProvider = 0
	// Write values inline in the configuration file.
	SecretProvider_SECRET_PROVIDER_INLINE SecretProvider = 1
	// Print configuration as environment variables.
	SecretProvider_SECRET_PROVIDER_ENVAR SecretProvider = 2
	// Write to the system keychain.
	SecretProvider_SECRET_PROVIDER_KEYCHAIN SecretProvider = 3
	// Store a secret in the 1Password vault.
	SecretProvider_SECRET_PROVIDER_OP SecretProvider = 4
	// Store a secret in the AWS Secrets Manager.
	SecretProvider_SECRET_PROVIDER_ASM SecretProvider = 5
)

// Enum value maps for SecretProvider.
var (
	SecretProvider_name = map[int32]string{
		0: "SECRET_PROVIDER_UNSPECIFIED",
		1: "SECRET_PROVIDER_INLINE",
		2: "SECRET_PROVIDER_ENVAR",
		3: "SECRET_PROVIDER_KEYCHAIN",
		4: "SECRET_PROVIDER_OP",
		5: "SECRET_PROVIDER_ASM",
	}
	SecretProvider_value = map[string]int32{
		"SECRET_PROVIDER_UNSPECIFIED": 0,
		"SECRET_PROVIDER_INLINE":      1,
		"SECRET_PROVIDER_ENVAR":       2,
		"SECRET_PROVIDER_KEYCHAIN":    3,
		"SECRET_PROVIDER_OP":          4,
		"SECRET_PROVIDER_ASM":         5,
	}
)

func (x SecretProvider) Enum() *SecretProvider {
	p := new(SecretProvider)
	*p = x
	return p
}

func (x SecretProvider) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SecretProvider) Descriptor() protoreflect.EnumDescriptor {
	return file_xyz_block_ftl_v1_admin_proto_enumTypes[1].Descriptor()
}

func (SecretProvider) Type() protoreflect.EnumType {
	return &file_xyz_block_ftl_v1_admin_proto_enumTypes[1]
}

func (x SecretProvider) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SecretProvider.Descriptor instead.
func (SecretProvider) EnumDescriptor() ([]byte, []int) {
	return file_xyz_block_ftl_v1_admin_proto_rawDescGZIP(), []int{1}
}

type ConfigRef struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Module *string `protobuf:"bytes,1,opt,name=module,proto3,oneof" json:"module,omitempty"`
	Name   string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *ConfigRef) Reset() {
	*x = ConfigRef{}
	mi := &file_xyz_block_ftl_v1_admin_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigRef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigRef) ProtoMessage() {}

func (x *ConfigRef) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_v1_admin_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigRef.ProtoReflect.Descriptor instead.
func (*ConfigRef) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_v1_admin_proto_rawDescGZIP(), []int{0}
}

func (x *ConfigRef) GetModule() string {
	if x != nil && x.Module != nil {
		return *x.Module
	}
	return ""
}

func (x *ConfigRef) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ConfigListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Module        *string         `protobuf:"bytes,1,opt,name=module,proto3,oneof" json:"module,omitempty"`
	IncludeValues *bool           `protobuf:"varint,2,opt,name=include_values,json=includeValues,proto3,oneof" json:"include_values,omitempty"`
	Provider      *ConfigProvider `protobuf:"varint,3,opt,name=provider,proto3,enum=xyz.block.ftl.v1.ConfigProvider,oneof" json:"provider,omitempty"`
}

func (x *ConfigListRequest) Reset() {
	*x = ConfigListRequest{}
	mi := &file_xyz_block_ftl_v1_admin_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigListRequest) ProtoMessage() {}

func (x *ConfigListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_v1_admin_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigListRequest.ProtoReflect.Descriptor instead.
func (*ConfigListRequest) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_v1_admin_proto_rawDescGZIP(), []int{1}
}

func (x *ConfigListRequest) GetModule() string {
	if x != nil && x.Module != nil {
		return *x.Module
	}
	return ""
}

func (x *ConfigListRequest) GetIncludeValues() bool {
	if x != nil && x.IncludeValues != nil {
		return *x.IncludeValues
	}
	return false
}

func (x *ConfigListRequest) GetProvider() ConfigProvider {
	if x != nil && x.Provider != nil {
		return *x.Provider
	}
	return ConfigProvider_CONFIG_PROVIDER_UNSPECIFIED
}

type ConfigListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Configs []*ConfigListResponse_Config `protobuf:"bytes,1,rep,name=configs,proto3" json:"configs,omitempty"`
}

func (x *ConfigListResponse) Reset() {
	*x = ConfigListResponse{}
	mi := &file_xyz_block_ftl_v1_admin_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigListResponse) ProtoMessage() {}

func (x *ConfigListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_v1_admin_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigListResponse.ProtoReflect.Descriptor instead.
func (*ConfigListResponse) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_v1_admin_proto_rawDescGZIP(), []int{2}
}

func (x *ConfigListResponse) GetConfigs() []*ConfigListResponse_Config {
	if x != nil {
		return x.Configs
	}
	return nil
}

type ConfigGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ref *ConfigRef `protobuf:"bytes,1,opt,name=ref,proto3" json:"ref,omitempty"`
}

func (x *ConfigGetRequest) Reset() {
	*x = ConfigGetRequest{}
	mi := &file_xyz_block_ftl_v1_admin_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigGetRequest) ProtoMessage() {}

func (x *ConfigGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_v1_admin_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigGetRequest.ProtoReflect.Descriptor instead.
func (*ConfigGetRequest) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_v1_admin_proto_rawDescGZIP(), []int{3}
}

func (x *ConfigGetRequest) GetRef() *ConfigRef {
	if x != nil {
		return x.Ref
	}
	return nil
}

type ConfigGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []byte `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *ConfigGetResponse) Reset() {
	*x = ConfigGetResponse{}
	mi := &file_xyz_block_ftl_v1_admin_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigGetResponse) ProtoMessage() {}

func (x *ConfigGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_v1_admin_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigGetResponse.ProtoReflect.Descriptor instead.
func (*ConfigGetResponse) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_v1_admin_proto_rawDescGZIP(), []int{4}
}

func (x *ConfigGetResponse) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type ConfigSetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Provider *ConfigProvider `protobuf:"varint,1,opt,name=provider,proto3,enum=xyz.block.ftl.v1.ConfigProvider,oneof" json:"provider,omitempty"`
	Ref      *ConfigRef      `protobuf:"bytes,2,opt,name=ref,proto3" json:"ref,omitempty"`
	Value    []byte          `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *ConfigSetRequest) Reset() {
	*x = ConfigSetRequest{}
	mi := &file_xyz_block_ftl_v1_admin_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigSetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigSetRequest) ProtoMessage() {}

func (x *ConfigSetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_v1_admin_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigSetRequest.ProtoReflect.Descriptor instead.
func (*ConfigSetRequest) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_v1_admin_proto_rawDescGZIP(), []int{5}
}

func (x *ConfigSetRequest) GetProvider() ConfigProvider {
	if x != nil && x.Provider != nil {
		return *x.Provider
	}
	return ConfigProvider_CONFIG_PROVIDER_UNSPECIFIED
}

func (x *ConfigSetRequest) GetRef() *ConfigRef {
	if x != nil {
		return x.Ref
	}
	return nil
}

func (x *ConfigSetRequest) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type ConfigSetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ConfigSetResponse) Reset() {
	*x = ConfigSetResponse{}
	mi := &file_xyz_block_ftl_v1_admin_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigSetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigSetResponse) ProtoMessage() {}

func (x *ConfigSetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_v1_admin_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigSetResponse.ProtoReflect.Descriptor instead.
func (*ConfigSetResponse) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_v1_admin_proto_rawDescGZIP(), []int{6}
}

type ConfigUnsetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Provider *ConfigProvider `protobuf:"varint,1,opt,name=provider,proto3,enum=xyz.block.ftl.v1.ConfigProvider,oneof" json:"provider,omitempty"`
	Ref      *ConfigRef      `protobuf:"bytes,2,opt,name=ref,proto3" json:"ref,omitempty"`
}

func (x *ConfigUnsetRequest) Reset() {
	*x = ConfigUnsetRequest{}
	mi := &file_xyz_block_ftl_v1_admin_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigUnsetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigUnsetRequest) ProtoMessage() {}

func (x *ConfigUnsetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_v1_admin_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigUnsetRequest.ProtoReflect.Descriptor instead.
func (*ConfigUnsetRequest) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_v1_admin_proto_rawDescGZIP(), []int{7}
}

func (x *ConfigUnsetRequest) GetProvider() ConfigProvider {
	if x != nil && x.Provider != nil {
		return *x.Provider
	}
	return ConfigProvider_CONFIG_PROVIDER_UNSPECIFIED
}

func (x *ConfigUnsetRequest) GetRef() *ConfigRef {
	if x != nil {
		return x.Ref
	}
	return nil
}

type ConfigUnsetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ConfigUnsetResponse) Reset() {
	*x = ConfigUnsetResponse{}
	mi := &file_xyz_block_ftl_v1_admin_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigUnsetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigUnsetResponse) ProtoMessage() {}

func (x *ConfigUnsetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_v1_admin_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigUnsetResponse.ProtoReflect.Descriptor instead.
func (*ConfigUnsetResponse) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_v1_admin_proto_rawDescGZIP(), []int{8}
}

type SecretsListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Module        *string         `protobuf:"bytes,1,opt,name=module,proto3,oneof" json:"module,omitempty"`
	IncludeValues *bool           `protobuf:"varint,2,opt,name=include_values,json=includeValues,proto3,oneof" json:"include_values,omitempty"`
	Provider      *SecretProvider `protobuf:"varint,3,opt,name=provider,proto3,enum=xyz.block.ftl.v1.SecretProvider,oneof" json:"provider,omitempty"`
}

func (x *SecretsListRequest) Reset() {
	*x = SecretsListRequest{}
	mi := &file_xyz_block_ftl_v1_admin_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SecretsListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecretsListRequest) ProtoMessage() {}

func (x *SecretsListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_v1_admin_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecretsListRequest.ProtoReflect.Descriptor instead.
func (*SecretsListRequest) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_v1_admin_proto_rawDescGZIP(), []int{9}
}

func (x *SecretsListRequest) GetModule() string {
	if x != nil && x.Module != nil {
		return *x.Module
	}
	return ""
}

func (x *SecretsListRequest) GetIncludeValues() bool {
	if x != nil && x.IncludeValues != nil {
		return *x.IncludeValues
	}
	return false
}

func (x *SecretsListRequest) GetProvider() SecretProvider {
	if x != nil && x.Provider != nil {
		return *x.Provider
	}
	return SecretProvider_SECRET_PROVIDER_UNSPECIFIED
}

type SecretsListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Secrets []*SecretsListResponse_Secret `protobuf:"bytes,1,rep,name=secrets,proto3" json:"secrets,omitempty"`
}

func (x *SecretsListResponse) Reset() {
	*x = SecretsListResponse{}
	mi := &file_xyz_block_ftl_v1_admin_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SecretsListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecretsListResponse) ProtoMessage() {}

func (x *SecretsListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_v1_admin_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecretsListResponse.ProtoReflect.Descriptor instead.
func (*SecretsListResponse) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_v1_admin_proto_rawDescGZIP(), []int{10}
}

func (x *SecretsListResponse) GetSecrets() []*SecretsListResponse_Secret {
	if x != nil {
		return x.Secrets
	}
	return nil
}

type SecretGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ref *ConfigRef `protobuf:"bytes,1,opt,name=ref,proto3" json:"ref,omitempty"`
}

func (x *SecretGetRequest) Reset() {
	*x = SecretGetRequest{}
	mi := &file_xyz_block_ftl_v1_admin_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SecretGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecretGetRequest) ProtoMessage() {}

func (x *SecretGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_v1_admin_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecretGetRequest.ProtoReflect.Descriptor instead.
func (*SecretGetRequest) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_v1_admin_proto_rawDescGZIP(), []int{11}
}

func (x *SecretGetRequest) GetRef() *ConfigRef {
	if x != nil {
		return x.Ref
	}
	return nil
}

type SecretGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []byte `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *SecretGetResponse) Reset() {
	*x = SecretGetResponse{}
	mi := &file_xyz_block_ftl_v1_admin_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SecretGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecretGetResponse) ProtoMessage() {}

func (x *SecretGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_v1_admin_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecretGetResponse.ProtoReflect.Descriptor instead.
func (*SecretGetResponse) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_v1_admin_proto_rawDescGZIP(), []int{12}
}

func (x *SecretGetResponse) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type SecretSetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Provider *SecretProvider `protobuf:"varint,1,opt,name=provider,proto3,enum=xyz.block.ftl.v1.SecretProvider,oneof" json:"provider,omitempty"`
	Ref      *ConfigRef      `protobuf:"bytes,2,opt,name=ref,proto3" json:"ref,omitempty"`
	Value    []byte          `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *SecretSetRequest) Reset() {
	*x = SecretSetRequest{}
	mi := &file_xyz_block_ftl_v1_admin_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SecretSetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecretSetRequest) ProtoMessage() {}

func (x *SecretSetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_v1_admin_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecretSetRequest.ProtoReflect.Descriptor instead.
func (*SecretSetRequest) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_v1_admin_proto_rawDescGZIP(), []int{13}
}

func (x *SecretSetRequest) GetProvider() SecretProvider {
	if x != nil && x.Provider != nil {
		return *x.Provider
	}
	return SecretProvider_SECRET_PROVIDER_UNSPECIFIED
}

func (x *SecretSetRequest) GetRef() *ConfigRef {
	if x != nil {
		return x.Ref
	}
	return nil
}

func (x *SecretSetRequest) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type SecretSetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SecretSetResponse) Reset() {
	*x = SecretSetResponse{}
	mi := &file_xyz_block_ftl_v1_admin_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SecretSetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecretSetResponse) ProtoMessage() {}

func (x *SecretSetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_v1_admin_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecretSetResponse.ProtoReflect.Descriptor instead.
func (*SecretSetResponse) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_v1_admin_proto_rawDescGZIP(), []int{14}
}

type SecretUnsetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Provider *SecretProvider `protobuf:"varint,1,opt,name=provider,proto3,enum=xyz.block.ftl.v1.SecretProvider,oneof" json:"provider,omitempty"`
	Ref      *ConfigRef      `protobuf:"bytes,2,opt,name=ref,proto3" json:"ref,omitempty"`
}

func (x *SecretUnsetRequest) Reset() {
	*x = SecretUnsetRequest{}
	mi := &file_xyz_block_ftl_v1_admin_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SecretUnsetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecretUnsetRequest) ProtoMessage() {}

func (x *SecretUnsetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_v1_admin_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecretUnsetRequest.ProtoReflect.Descriptor instead.
func (*SecretUnsetRequest) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_v1_admin_proto_rawDescGZIP(), []int{15}
}

func (x *SecretUnsetRequest) GetProvider() SecretProvider {
	if x != nil && x.Provider != nil {
		return *x.Provider
	}
	return SecretProvider_SECRET_PROVIDER_UNSPECIFIED
}

func (x *SecretUnsetRequest) GetRef() *ConfigRef {
	if x != nil {
		return x.Ref
	}
	return nil
}

type SecretUnsetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SecretUnsetResponse) Reset() {
	*x = SecretUnsetResponse{}
	mi := &file_xyz_block_ftl_v1_admin_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SecretUnsetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecretUnsetResponse) ProtoMessage() {}

func (x *SecretUnsetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_v1_admin_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecretUnsetResponse.ProtoReflect.Descriptor instead.
func (*SecretUnsetResponse) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_v1_admin_proto_rawDescGZIP(), []int{16}
}

type MapConfigsForModuleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Module string `protobuf:"bytes,1,opt,name=module,proto3" json:"module,omitempty"`
}

func (x *MapConfigsForModuleRequest) Reset() {
	*x = MapConfigsForModuleRequest{}
	mi := &file_xyz_block_ftl_v1_admin_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MapConfigsForModuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapConfigsForModuleRequest) ProtoMessage() {}

func (x *MapConfigsForModuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_v1_admin_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MapConfigsForModuleRequest.ProtoReflect.Descriptor instead.
func (*MapConfigsForModuleRequest) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_v1_admin_proto_rawDescGZIP(), []int{17}
}

func (x *MapConfigsForModuleRequest) GetModule() string {
	if x != nil {
		return x.Module
	}
	return ""
}

type MapConfigsForModuleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Values map[string][]byte `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *MapConfigsForModuleResponse) Reset() {
	*x = MapConfigsForModuleResponse{}
	mi := &file_xyz_block_ftl_v1_admin_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MapConfigsForModuleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapConfigsForModuleResponse) ProtoMessage() {}

func (x *MapConfigsForModuleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_v1_admin_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MapConfigsForModuleResponse.ProtoReflect.Descriptor instead.
func (*MapConfigsForModuleResponse) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_v1_admin_proto_rawDescGZIP(), []int{18}
}

func (x *MapConfigsForModuleResponse) GetValues() map[string][]byte {
	if x != nil {
		return x.Values
	}
	return nil
}

type MapSecretsForModuleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Module string `protobuf:"bytes,1,opt,name=module,proto3" json:"module,omitempty"`
}

func (x *MapSecretsForModuleRequest) Reset() {
	*x = MapSecretsForModuleRequest{}
	mi := &file_xyz_block_ftl_v1_admin_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MapSecretsForModuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapSecretsForModuleRequest) ProtoMessage() {}

func (x *MapSecretsForModuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_v1_admin_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MapSecretsForModuleRequest.ProtoReflect.Descriptor instead.
func (*MapSecretsForModuleRequest) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_v1_admin_proto_rawDescGZIP(), []int{19}
}

func (x *MapSecretsForModuleRequest) GetModule() string {
	if x != nil {
		return x.Module
	}
	return ""
}

type MapSecretsForModuleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Values map[string][]byte `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *MapSecretsForModuleResponse) Reset() {
	*x = MapSecretsForModuleResponse{}
	mi := &file_xyz_block_ftl_v1_admin_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MapSecretsForModuleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapSecretsForModuleResponse) ProtoMessage() {}

func (x *MapSecretsForModuleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_v1_admin_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MapSecretsForModuleResponse.ProtoReflect.Descriptor instead.
func (*MapSecretsForModuleResponse) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_v1_admin_proto_rawDescGZIP(), []int{20}
}

func (x *MapSecretsForModuleResponse) GetValues() map[string][]byte {
	if x != nil {
		return x.Values
	}
	return nil
}

type ConfigListResponse_Config struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RefPath string `protobuf:"bytes,1,opt,name=ref_path,json=refPath,proto3" json:"ref_path,omitempty"`
	Value   []byte `protobuf:"bytes,2,opt,name=value,proto3,oneof" json:"value,omitempty"`
}

func (x *ConfigListResponse_Config) Reset() {
	*x = ConfigListResponse_Config{}
	mi := &file_xyz_block_ftl_v1_admin_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigListResponse_Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigListResponse_Config) ProtoMessage() {}

func (x *ConfigListResponse_Config) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_v1_admin_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigListResponse_Config.ProtoReflect.Descriptor instead.
func (*ConfigListResponse_Config) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_v1_admin_proto_rawDescGZIP(), []int{2, 0}
}

func (x *ConfigListResponse_Config) GetRefPath() string {
	if x != nil {
		return x.RefPath
	}
	return ""
}

func (x *ConfigListResponse_Config) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type SecretsListResponse_Secret struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RefPath string `protobuf:"bytes,1,opt,name=ref_path,json=refPath,proto3" json:"ref_path,omitempty"`
	Value   []byte `protobuf:"bytes,2,opt,name=value,proto3,oneof" json:"value,omitempty"`
}

func (x *SecretsListResponse_Secret) Reset() {
	*x = SecretsListResponse_Secret{}
	mi := &file_xyz_block_ftl_v1_admin_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SecretsListResponse_Secret) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecretsListResponse_Secret) ProtoMessage() {}

func (x *SecretsListResponse_Secret) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_v1_admin_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecretsListResponse_Secret.ProtoReflect.Descriptor instead.
func (*SecretsListResponse_Secret) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_v1_admin_proto_rawDescGZIP(), []int{10, 0}
}

func (x *SecretsListResponse_Secret) GetRefPath() string {
	if x != nil {
		return x.RefPath
	}
	return ""
}

func (x *SecretsListResponse_Secret) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

var File_xyz_block_ftl_v1_admin_proto protoreflect.FileDescriptor

var file_xyz_block_ftl_v1_admin_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x78, 0x79, 0x7a, 0x2f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2f, 0x66, 0x74, 0x6c, 0x2f,
	0x76, 0x31, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10,
	0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x76, 0x31,
	0x1a, 0x1a, 0x78, 0x79, 0x7a, 0x2f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2f, 0x66, 0x74, 0x6c, 0x2f,
	0x76, 0x31, 0x2f, 0x66, 0x74, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x47, 0x0a, 0x09,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x66, 0x12, 0x1b, 0x0a, 0x06, 0x6d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x6d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x6d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x22, 0xca, 0x01, 0x0a, 0x11, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x06, 0x6d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x6d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x69, 0x6e, 0x63, 0x6c,
	0x75, 0x64, 0x65, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x48, 0x01, 0x52, 0x0d, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x73, 0x88, 0x01, 0x01, 0x12, 0x41, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x48, 0x02, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x6d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x73, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x22, 0xa5, 0x01, 0x0a, 0x12, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x07, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x78, 0x79, 0x7a,
	0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73,
	0x1a, 0x48, 0x0a, 0x06, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x65,
	0x66, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65,
	0x66, 0x50, 0x61, 0x74, 0x68, 0x12, 0x19, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x88, 0x01, 0x01,
	0x42, 0x08, 0x0a, 0x06, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x41, 0x0a, 0x10, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d,
	0x0a, 0x03, 0x72, 0x65, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x78, 0x79,
	0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x66, 0x52, 0x03, 0x72, 0x65, 0x66, 0x22, 0x29, 0x0a,
	0x11, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xa7, 0x01, 0x0a, 0x10, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x41, 0x0a,
	0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x20, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x48, 0x00, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x88, 0x01, 0x01,
	0x12, 0x2d, 0x0a, 0x03, 0x72, 0x65, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x66, 0x52, 0x03, 0x72, 0x65, 0x66, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x22, 0x13, 0x0a, 0x11, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x65, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x93, 0x01, 0x0a, 0x12, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x55, 0x6e, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x41,
	0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x20, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x48, 0x00, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x88, 0x01,
	0x01, 0x12, 0x2d, 0x0a, 0x03, 0x72, 0x65, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x66, 0x52, 0x03, 0x72, 0x65, 0x66,
	0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x22, 0x15, 0x0a,
	0x13, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x55, 0x6e, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0xcb, 0x01, 0x0a, 0x12, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x06, 0x6d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x6d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x69, 0x6e, 0x63, 0x6c,
	0x75, 0x64, 0x65, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x48, 0x01, 0x52, 0x0d, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x73, 0x88, 0x01, 0x01, 0x12, 0x41, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x48, 0x02, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x6d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x73, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x22, 0xa7, 0x01, 0x0a, 0x13, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x07, 0x73, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x78, 0x79,
	0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x07, 0x73, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x73, 0x1a, 0x48, 0x0a, 0x06, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x19, 0x0a, 0x08,
	0x72, 0x65, 0x66, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x72, 0x65, 0x66, 0x50, 0x61, 0x74, 0x68, 0x12, 0x19, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x88,
	0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x41, 0x0a, 0x10,
	0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x2d, 0x0a, 0x03, 0x72, 0x65, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x66, 0x52, 0x03, 0x72, 0x65, 0x66, 0x22,
	0x29, 0x0a, 0x11, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xa7, 0x01, 0x0a, 0x10, 0x53,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x41, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x20, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74,
	0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x48, 0x00, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x88,
	0x01, 0x01, 0x12, 0x2d, 0x0a, 0x03, 0x72, 0x65, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x66, 0x52, 0x03, 0x72, 0x65,
	0x66, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x22, 0x13, 0x0a, 0x11, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x53, 0x65,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x93, 0x01, 0x0a, 0x12, 0x53, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x55, 0x6e, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x41, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x20, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66,
	0x74, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x48, 0x00, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x88, 0x01, 0x01, 0x12, 0x2d, 0x0a, 0x03, 0x72, 0x65, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x66, 0x52, 0x03, 0x72,
	0x65, 0x66, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x22,
	0x15, 0x0a, 0x13, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x55, 0x6e, 0x73, 0x65, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x34, 0x0a, 0x1a, 0x4d, 0x61, 0x70, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x73, 0x46, 0x6f, 0x72, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x22, 0xab, 0x01, 0x0a,
	0x1b, 0x4d, 0x61, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x46, 0x6f, 0x72, 0x4d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a, 0x06,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x78,
	0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x76, 0x31, 0x2e,
	0x4d, 0x61, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x46, 0x6f, 0x72, 0x4d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x1a,
	0x39, 0x0a, 0x0b, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x34, 0x0a, 0x1a, 0x4d, 0x61,
	0x70, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x46, 0x6f, 0x72, 0x4d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x22, 0xab, 0x01, 0x0a, 0x1b, 0x4d, 0x61, 0x70, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x46,
	0x6f, 0x72, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x51, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x39, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c,
	0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x70, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x46, 0x6f,
	0x72, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x73, 0x1a, 0x39, 0x0a, 0x0b, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x2a, 0x68,
	0x0a, 0x0e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x12, 0x1f, 0x0a, 0x1b, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x5f, 0x50, 0x52, 0x4f, 0x56, 0x49,
	0x44, 0x45, 0x52, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x1a, 0x0a, 0x16, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x5f, 0x50, 0x52, 0x4f, 0x56,
	0x49, 0x44, 0x45, 0x52, 0x5f, 0x49, 0x4e, 0x4c, 0x49, 0x4e, 0x45, 0x10, 0x01, 0x12, 0x19, 0x0a,
	0x15, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x5f, 0x50, 0x52, 0x4f, 0x56, 0x49, 0x44, 0x45, 0x52,
	0x5f, 0x45, 0x4e, 0x56, 0x41, 0x52, 0x10, 0x02, 0x2a, 0xb7, 0x01, 0x0a, 0x0e, 0x53, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x1b, 0x53,
	0x45, 0x43, 0x52, 0x45, 0x54, 0x5f, 0x50, 0x52, 0x4f, 0x56, 0x49, 0x44, 0x45, 0x52, 0x5f, 0x55,
	0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1a, 0x0a, 0x16,
	0x53, 0x45, 0x43, 0x52, 0x45, 0x54, 0x5f, 0x50, 0x52, 0x4f, 0x56, 0x49, 0x44, 0x45, 0x52, 0x5f,
	0x49, 0x4e, 0x4c, 0x49, 0x4e, 0x45, 0x10, 0x01, 0x12, 0x19, 0x0a, 0x15, 0x53, 0x45, 0x43, 0x52,
	0x45, 0x54, 0x5f, 0x50, 0x52, 0x4f, 0x56, 0x49, 0x44, 0x45, 0x52, 0x5f, 0x45, 0x4e, 0x56, 0x41,
	0x52, 0x10, 0x02, 0x12, 0x1c, 0x0a, 0x18, 0x53, 0x45, 0x43, 0x52, 0x45, 0x54, 0x5f, 0x50, 0x52,
	0x4f, 0x56, 0x49, 0x44, 0x45, 0x52, 0x5f, 0x4b, 0x45, 0x59, 0x43, 0x48, 0x41, 0x49, 0x4e, 0x10,
	0x03, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x45, 0x43, 0x52, 0x45, 0x54, 0x5f, 0x50, 0x52, 0x4f, 0x56,
	0x49, 0x44, 0x45, 0x52, 0x5f, 0x4f, 0x50, 0x10, 0x04, 0x12, 0x17, 0x0a, 0x13, 0x53, 0x45, 0x43,
	0x52, 0x45, 0x54, 0x5f, 0x50, 0x52, 0x4f, 0x56, 0x49, 0x44, 0x45, 0x52, 0x5f, 0x41, 0x53, 0x4d,
	0x10, 0x05, 0x32, 0x87, 0x08, 0x0a, 0x0c, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x4a, 0x0a, 0x04, 0x50, 0x69, 0x6e, 0x67, 0x12, 0x1d, 0x2e, 0x78, 0x79,
	0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x78, 0x79, 0x7a,
	0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x03, 0x90, 0x02, 0x01, 0x12,
	0x57, 0x0a, 0x0a, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x23, 0x2e,
	0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x24, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66,
	0x74, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x47, 0x65, 0x74, 0x12, 0x22, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x78, 0x79, 0x7a, 0x2e,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54,
	0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x65, 0x74, 0x12, 0x22, 0x2e, 0x78, 0x79,
	0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x23, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a, 0x0b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x55, 0x6e,
	0x73, 0x65, 0x74, 0x12, 0x24, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e,
	0x66, 0x74, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x55, 0x6e, 0x73,
	0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x78, 0x79, 0x7a, 0x2e,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x55, 0x6e, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x5a, 0x0a, 0x0b, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x24, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x09,
	0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x47, 0x65, 0x74, 0x12, 0x22, 0x2e, 0x78, 0x79, 0x7a, 0x2e,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e,
	0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x54, 0x0a, 0x09, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x53, 0x65, 0x74, 0x12,
	0x22, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e,
	0x66, 0x74, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x53, 0x65, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a, 0x0b, 0x53, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x55, 0x6e, 0x73, 0x65, 0x74, 0x12, 0x24, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x55, 0x6e, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e,
	0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x55, 0x6e, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x72, 0x0a, 0x13, 0x4d, 0x61, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x73, 0x46, 0x6f, 0x72, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x2c, 0x2e, 0x78, 0x79,
	0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4d,
	0x61, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x46, 0x6f, 0x72, 0x4d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x78, 0x79, 0x7a, 0x2e,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x70,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x46, 0x6f, 0x72, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x72, 0x0a, 0x13, 0x4d, 0x61, 0x70, 0x53,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x46, 0x6f, 0x72, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12,
	0x2c, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e,
	0x76, 0x31, 0x2e, 0x4d, 0x61, 0x70, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x46, 0x6f, 0x72,
	0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e,
	0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x76, 0x31,
	0x2e, 0x4d, 0x61, 0x70, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x46, 0x6f, 0x72, 0x4d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x44, 0x50, 0x01,
	0x5a, 0x40, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x54, 0x42, 0x44,
	0x35, 0x34, 0x35, 0x36, 0x36, 0x39, 0x37, 0x35, 0x2f, 0x66, 0x74, 0x6c, 0x2f, 0x62, 0x61, 0x63,
	0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x78, 0x79, 0x7a, 0x2f,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2f, 0x66, 0x74, 0x6c, 0x2f, 0x76, 0x31, 0x3b, 0x66, 0x74, 0x6c,
	0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_xyz_block_ftl_v1_admin_proto_rawDescOnce sync.Once
	file_xyz_block_ftl_v1_admin_proto_rawDescData = file_xyz_block_ftl_v1_admin_proto_rawDesc
)

func file_xyz_block_ftl_v1_admin_proto_rawDescGZIP() []byte {
	file_xyz_block_ftl_v1_admin_proto_rawDescOnce.Do(func() {
		file_xyz_block_ftl_v1_admin_proto_rawDescData = protoimpl.X.CompressGZIP(file_xyz_block_ftl_v1_admin_proto_rawDescData)
	})
	return file_xyz_block_ftl_v1_admin_proto_rawDescData
}

var file_xyz_block_ftl_v1_admin_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_xyz_block_ftl_v1_admin_proto_msgTypes = make([]protoimpl.MessageInfo, 25)
var file_xyz_block_ftl_v1_admin_proto_goTypes = []any{
	(ConfigProvider)(0),                 // 0: xyz.block.ftl.v1.ConfigProvider
	(SecretProvider)(0),                 // 1: xyz.block.ftl.v1.SecretProvider
	(*ConfigRef)(nil),                   // 2: xyz.block.ftl.v1.ConfigRef
	(*ConfigListRequest)(nil),           // 3: xyz.block.ftl.v1.ConfigListRequest
	(*ConfigListResponse)(nil),          // 4: xyz.block.ftl.v1.ConfigListResponse
	(*ConfigGetRequest)(nil),            // 5: xyz.block.ftl.v1.ConfigGetRequest
	(*ConfigGetResponse)(nil),           // 6: xyz.block.ftl.v1.ConfigGetResponse
	(*ConfigSetRequest)(nil),            // 7: xyz.block.ftl.v1.ConfigSetRequest
	(*ConfigSetResponse)(nil),           // 8: xyz.block.ftl.v1.ConfigSetResponse
	(*ConfigUnsetRequest)(nil),          // 9: xyz.block.ftl.v1.ConfigUnsetRequest
	(*ConfigUnsetResponse)(nil),         // 10: xyz.block.ftl.v1.ConfigUnsetResponse
	(*SecretsListRequest)(nil),          // 11: xyz.block.ftl.v1.SecretsListRequest
	(*SecretsListResponse)(nil),         // 12: xyz.block.ftl.v1.SecretsListResponse
	(*SecretGetRequest)(nil),            // 13: xyz.block.ftl.v1.SecretGetRequest
	(*SecretGetResponse)(nil),           // 14: xyz.block.ftl.v1.SecretGetResponse
	(*SecretSetRequest)(nil),            // 15: xyz.block.ftl.v1.SecretSetRequest
	(*SecretSetResponse)(nil),           // 16: xyz.block.ftl.v1.SecretSetResponse
	(*SecretUnsetRequest)(nil),          // 17: xyz.block.ftl.v1.SecretUnsetRequest
	(*SecretUnsetResponse)(nil),         // 18: xyz.block.ftl.v1.SecretUnsetResponse
	(*MapConfigsForModuleRequest)(nil),  // 19: xyz.block.ftl.v1.MapConfigsForModuleRequest
	(*MapConfigsForModuleResponse)(nil), // 20: xyz.block.ftl.v1.MapConfigsForModuleResponse
	(*MapSecretsForModuleRequest)(nil),  // 21: xyz.block.ftl.v1.MapSecretsForModuleRequest
	(*MapSecretsForModuleResponse)(nil), // 22: xyz.block.ftl.v1.MapSecretsForModuleResponse
	(*ConfigListResponse_Config)(nil),   // 23: xyz.block.ftl.v1.ConfigListResponse.Config
	(*SecretsListResponse_Secret)(nil),  // 24: xyz.block.ftl.v1.SecretsListResponse.Secret
	nil,                                 // 25: xyz.block.ftl.v1.MapConfigsForModuleResponse.ValuesEntry
	nil,                                 // 26: xyz.block.ftl.v1.MapSecretsForModuleResponse.ValuesEntry
	(*PingRequest)(nil),                 // 27: xyz.block.ftl.v1.PingRequest
	(*PingResponse)(nil),                // 28: xyz.block.ftl.v1.PingResponse
}
var file_xyz_block_ftl_v1_admin_proto_depIdxs = []int32{
	0,  // 0: xyz.block.ftl.v1.ConfigListRequest.provider:type_name -> xyz.block.ftl.v1.ConfigProvider
	23, // 1: xyz.block.ftl.v1.ConfigListResponse.configs:type_name -> xyz.block.ftl.v1.ConfigListResponse.Config
	2,  // 2: xyz.block.ftl.v1.ConfigGetRequest.ref:type_name -> xyz.block.ftl.v1.ConfigRef
	0,  // 3: xyz.block.ftl.v1.ConfigSetRequest.provider:type_name -> xyz.block.ftl.v1.ConfigProvider
	2,  // 4: xyz.block.ftl.v1.ConfigSetRequest.ref:type_name -> xyz.block.ftl.v1.ConfigRef
	0,  // 5: xyz.block.ftl.v1.ConfigUnsetRequest.provider:type_name -> xyz.block.ftl.v1.ConfigProvider
	2,  // 6: xyz.block.ftl.v1.ConfigUnsetRequest.ref:type_name -> xyz.block.ftl.v1.ConfigRef
	1,  // 7: xyz.block.ftl.v1.SecretsListRequest.provider:type_name -> xyz.block.ftl.v1.SecretProvider
	24, // 8: xyz.block.ftl.v1.SecretsListResponse.secrets:type_name -> xyz.block.ftl.v1.SecretsListResponse.Secret
	2,  // 9: xyz.block.ftl.v1.SecretGetRequest.ref:type_name -> xyz.block.ftl.v1.ConfigRef
	1,  // 10: xyz.block.ftl.v1.SecretSetRequest.provider:type_name -> xyz.block.ftl.v1.SecretProvider
	2,  // 11: xyz.block.ftl.v1.SecretSetRequest.ref:type_name -> xyz.block.ftl.v1.ConfigRef
	1,  // 12: xyz.block.ftl.v1.SecretUnsetRequest.provider:type_name -> xyz.block.ftl.v1.SecretProvider
	2,  // 13: xyz.block.ftl.v1.SecretUnsetRequest.ref:type_name -> xyz.block.ftl.v1.ConfigRef
	25, // 14: xyz.block.ftl.v1.MapConfigsForModuleResponse.values:type_name -> xyz.block.ftl.v1.MapConfigsForModuleResponse.ValuesEntry
	26, // 15: xyz.block.ftl.v1.MapSecretsForModuleResponse.values:type_name -> xyz.block.ftl.v1.MapSecretsForModuleResponse.ValuesEntry
	27, // 16: xyz.block.ftl.v1.AdminService.Ping:input_type -> xyz.block.ftl.v1.PingRequest
	3,  // 17: xyz.block.ftl.v1.AdminService.ConfigList:input_type -> xyz.block.ftl.v1.ConfigListRequest
	5,  // 18: xyz.block.ftl.v1.AdminService.ConfigGet:input_type -> xyz.block.ftl.v1.ConfigGetRequest
	7,  // 19: xyz.block.ftl.v1.AdminService.ConfigSet:input_type -> xyz.block.ftl.v1.ConfigSetRequest
	9,  // 20: xyz.block.ftl.v1.AdminService.ConfigUnset:input_type -> xyz.block.ftl.v1.ConfigUnsetRequest
	11, // 21: xyz.block.ftl.v1.AdminService.SecretsList:input_type -> xyz.block.ftl.v1.SecretsListRequest
	13, // 22: xyz.block.ftl.v1.AdminService.SecretGet:input_type -> xyz.block.ftl.v1.SecretGetRequest
	15, // 23: xyz.block.ftl.v1.AdminService.SecretSet:input_type -> xyz.block.ftl.v1.SecretSetRequest
	17, // 24: xyz.block.ftl.v1.AdminService.SecretUnset:input_type -> xyz.block.ftl.v1.SecretUnsetRequest
	19, // 25: xyz.block.ftl.v1.AdminService.MapConfigsForModule:input_type -> xyz.block.ftl.v1.MapConfigsForModuleRequest
	21, // 26: xyz.block.ftl.v1.AdminService.MapSecretsForModule:input_type -> xyz.block.ftl.v1.MapSecretsForModuleRequest
	28, // 27: xyz.block.ftl.v1.AdminService.Ping:output_type -> xyz.block.ftl.v1.PingResponse
	4,  // 28: xyz.block.ftl.v1.AdminService.ConfigList:output_type -> xyz.block.ftl.v1.ConfigListResponse
	6,  // 29: xyz.block.ftl.v1.AdminService.ConfigGet:output_type -> xyz.block.ftl.v1.ConfigGetResponse
	8,  // 30: xyz.block.ftl.v1.AdminService.ConfigSet:output_type -> xyz.block.ftl.v1.ConfigSetResponse
	10, // 31: xyz.block.ftl.v1.AdminService.ConfigUnset:output_type -> xyz.block.ftl.v1.ConfigUnsetResponse
	12, // 32: xyz.block.ftl.v1.AdminService.SecretsList:output_type -> xyz.block.ftl.v1.SecretsListResponse
	14, // 33: xyz.block.ftl.v1.AdminService.SecretGet:output_type -> xyz.block.ftl.v1.SecretGetResponse
	16, // 34: xyz.block.ftl.v1.AdminService.SecretSet:output_type -> xyz.block.ftl.v1.SecretSetResponse
	18, // 35: xyz.block.ftl.v1.AdminService.SecretUnset:output_type -> xyz.block.ftl.v1.SecretUnsetResponse
	20, // 36: xyz.block.ftl.v1.AdminService.MapConfigsForModule:output_type -> xyz.block.ftl.v1.MapConfigsForModuleResponse
	22, // 37: xyz.block.ftl.v1.AdminService.MapSecretsForModule:output_type -> xyz.block.ftl.v1.MapSecretsForModuleResponse
	27, // [27:38] is the sub-list for method output_type
	16, // [16:27] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_xyz_block_ftl_v1_admin_proto_init() }
func file_xyz_block_ftl_v1_admin_proto_init() {
	if File_xyz_block_ftl_v1_admin_proto != nil {
		return
	}
	file_xyz_block_ftl_v1_ftl_proto_init()
	file_xyz_block_ftl_v1_admin_proto_msgTypes[0].OneofWrappers = []any{}
	file_xyz_block_ftl_v1_admin_proto_msgTypes[1].OneofWrappers = []any{}
	file_xyz_block_ftl_v1_admin_proto_msgTypes[5].OneofWrappers = []any{}
	file_xyz_block_ftl_v1_admin_proto_msgTypes[7].OneofWrappers = []any{}
	file_xyz_block_ftl_v1_admin_proto_msgTypes[9].OneofWrappers = []any{}
	file_xyz_block_ftl_v1_admin_proto_msgTypes[13].OneofWrappers = []any{}
	file_xyz_block_ftl_v1_admin_proto_msgTypes[15].OneofWrappers = []any{}
	file_xyz_block_ftl_v1_admin_proto_msgTypes[21].OneofWrappers = []any{}
	file_xyz_block_ftl_v1_admin_proto_msgTypes[22].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_xyz_block_ftl_v1_admin_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   25,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_xyz_block_ftl_v1_admin_proto_goTypes,
		DependencyIndexes: file_xyz_block_ftl_v1_admin_proto_depIdxs,
		EnumInfos:         file_xyz_block_ftl_v1_admin_proto_enumTypes,
		MessageInfos:      file_xyz_block_ftl_v1_admin_proto_msgTypes,
	}.Build()
	File_xyz_block_ftl_v1_admin_proto = out.File
	file_xyz_block_ftl_v1_admin_proto_rawDesc = nil
	file_xyz_block_ftl_v1_admin_proto_goTypes = nil
	file_xyz_block_ftl_v1_admin_proto_depIdxs = nil
}
