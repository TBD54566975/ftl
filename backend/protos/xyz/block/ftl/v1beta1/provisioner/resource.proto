syntax = "proto3";

package xyz.block.ftl.v1beta1.provisioner;

import "google/protobuf/struct.proto";
import "xyz/block/ftl/v1/controller.proto";
import "xyz/block/ftl/v1/schema/schema.proto";

option go_package = "github.com/TBD54566975/ftl/backend/protos/xyz/block/ftl/v1beta1/provisioner;provisioner";
option java_multiple_files = true;

// Resource is an abstract resource extracted from FTL Schema.
message Resource {
  // id unique within the module
  string resource_id = 1;

  oneof resource {
    PostgresResource postgres = 102;
    MysqlResource mysql = 103;
    ModuleResource module = 104;
    SqlMigrationResource sql_migration = 105;
    TopicResource topic = 106;
    SubscriptionResource subscription = 107;
  }
}

// Resource types
//
// any output created by the provisioner is stored in a field called "output"

message PostgresResource {
  message PostgresResourceOutput {
    string read_dsn = 1;
    string write_dsn = 2;
  }
  PostgresResourceOutput output = 1;
}

message MysqlResource {
  message MysqlResourceOutput {
    string read_dsn = 1;
    string write_dsn = 2;
  }
  MysqlResourceOutput output = 1;
}

message SqlMigrationResource {
  message SqlMigrationResourceOutput {}
  SqlMigrationResourceOutput output = 1;
  string digest = 2;
}

message ModuleResource {
  message ModuleResourceOutput {
    string deployment_key = 1;
  }
  ModuleResourceOutput output = 1;

  v1.schema.Module schema = 2;
  repeated xyz.block.ftl.v1.DeploymentArtefact artefacts = 3;
  // Runner labels required to run this deployment.
  optional google.protobuf.Struct labels = 4;
}

message TopicResource {
  message TopicResourceOutput {
    repeated string kafka_brokers = 1;
    string topic_id = 2;
  }

  TopicResourceOutput output = 1;
}

message SubscriptionResource {
  message SubscriptionResourceOutput {
    repeated string kafka_brokers = 1;
    string topic_id = 2;
    string consumer_group_id = 3;
  }
  SubscriptionResourceOutput output = 1;

  v1.schema.Ref topic = 2;
}
