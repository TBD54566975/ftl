// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        (unknown)
// source: xyz/block/ftl/timeline/v1/timeline.proto

package timelinepb

import (
	v1 "github.com/block/ftl/backend/protos/xyz/block/ftl/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetTimelineRequest_Order int32

const (
	GetTimelineRequest_ORDER_UNSPECIFIED GetTimelineRequest_Order = 0
	GetTimelineRequest_ORDER_ASC         GetTimelineRequest_Order = 1
	GetTimelineRequest_ORDER_DESC        GetTimelineRequest_Order = 2
)

// Enum value maps for GetTimelineRequest_Order.
var (
	GetTimelineRequest_Order_name = map[int32]string{
		0: "ORDER_UNSPECIFIED",
		1: "ORDER_ASC",
		2: "ORDER_DESC",
	}
	GetTimelineRequest_Order_value = map[string]int32{
		"ORDER_UNSPECIFIED": 0,
		"ORDER_ASC":         1,
		"ORDER_DESC":        2,
	}
)

func (x GetTimelineRequest_Order) Enum() *GetTimelineRequest_Order {
	p := new(GetTimelineRequest_Order)
	*p = x
	return p
}

func (x GetTimelineRequest_Order) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetTimelineRequest_Order) Descriptor() protoreflect.EnumDescriptor {
	return file_xyz_block_ftl_timeline_v1_timeline_proto_enumTypes[0].Descriptor()
}

func (GetTimelineRequest_Order) Type() protoreflect.EnumType {
	return &file_xyz_block_ftl_timeline_v1_timeline_proto_enumTypes[0]
}

func (x GetTimelineRequest_Order) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetTimelineRequest_Order.Descriptor instead.
func (GetTimelineRequest_Order) EnumDescriptor() ([]byte, []int) {
	return file_xyz_block_ftl_timeline_v1_timeline_proto_rawDescGZIP(), []int{0, 0}
}

type GetTimelineRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filters []*GetTimelineRequest_Filter `protobuf:"bytes,1,rep,name=filters,proto3" json:"filters,omitempty"`
	Limit   int32                        `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	// Ordering is done by id which matches publication order.
	// This roughly corresponds to the time of the event, but not strictly.
	Order GetTimelineRequest_Order `protobuf:"varint,3,opt,name=order,proto3,enum=xyz.block.ftl.timeline.v1.GetTimelineRequest_Order" json:"order,omitempty"`
}

func (x *GetTimelineRequest) Reset() {
	*x = GetTimelineRequest{}
	mi := &file_xyz_block_ftl_timeline_v1_timeline_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTimelineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTimelineRequest) ProtoMessage() {}

func (x *GetTimelineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_timeline_v1_timeline_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTimelineRequest.ProtoReflect.Descriptor instead.
func (*GetTimelineRequest) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_timeline_v1_timeline_proto_rawDescGZIP(), []int{0}
}

func (x *GetTimelineRequest) GetFilters() []*GetTimelineRequest_Filter {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *GetTimelineRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetTimelineRequest) GetOrder() GetTimelineRequest_Order {
	if x != nil {
		return x.Order
	}
	return GetTimelineRequest_ORDER_UNSPECIFIED
}

type GetTimelineResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Events []*Event `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
	// For pagination, this cursor is where we should start our next query
	Cursor *int64 `protobuf:"varint,2,opt,name=cursor,proto3,oneof" json:"cursor,omitempty"`
}

func (x *GetTimelineResponse) Reset() {
	*x = GetTimelineResponse{}
	mi := &file_xyz_block_ftl_timeline_v1_timeline_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTimelineResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTimelineResponse) ProtoMessage() {}

func (x *GetTimelineResponse) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_timeline_v1_timeline_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTimelineResponse.ProtoReflect.Descriptor instead.
func (*GetTimelineResponse) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_timeline_v1_timeline_proto_rawDescGZIP(), []int{1}
}

func (x *GetTimelineResponse) GetEvents() []*Event {
	if x != nil {
		return x.Events
	}
	return nil
}

func (x *GetTimelineResponse) GetCursor() int64 {
	if x != nil && x.Cursor != nil {
		return *x.Cursor
	}
	return 0
}

type StreamTimelineRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UpdateInterval *durationpb.Duration `protobuf:"bytes,1,opt,name=update_interval,json=updateInterval,proto3,oneof" json:"update_interval,omitempty"`
	Query          *GetTimelineRequest  `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"`
}

func (x *StreamTimelineRequest) Reset() {
	*x = StreamTimelineRequest{}
	mi := &file_xyz_block_ftl_timeline_v1_timeline_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamTimelineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamTimelineRequest) ProtoMessage() {}

func (x *StreamTimelineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_timeline_v1_timeline_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamTimelineRequest.ProtoReflect.Descriptor instead.
func (*StreamTimelineRequest) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_timeline_v1_timeline_proto_rawDescGZIP(), []int{2}
}

func (x *StreamTimelineRequest) GetUpdateInterval() *durationpb.Duration {
	if x != nil {
		return x.UpdateInterval
	}
	return nil
}

func (x *StreamTimelineRequest) GetQuery() *GetTimelineRequest {
	if x != nil {
		return x.Query
	}
	return nil
}

type StreamTimelineResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Events []*Event `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
}

func (x *StreamTimelineResponse) Reset() {
	*x = StreamTimelineResponse{}
	mi := &file_xyz_block_ftl_timeline_v1_timeline_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamTimelineResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamTimelineResponse) ProtoMessage() {}

func (x *StreamTimelineResponse) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_timeline_v1_timeline_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamTimelineResponse.ProtoReflect.Descriptor instead.
func (*StreamTimelineResponse) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_timeline_v1_timeline_proto_rawDescGZIP(), []int{3}
}

func (x *StreamTimelineResponse) GetEvents() []*Event {
	if x != nil {
		return x.Events
	}
	return nil
}

type CreateEventsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entries []*CreateEventsRequest_EventEntry `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
}

func (x *CreateEventsRequest) Reset() {
	*x = CreateEventsRequest{}
	mi := &file_xyz_block_ftl_timeline_v1_timeline_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateEventsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateEventsRequest) ProtoMessage() {}

func (x *CreateEventsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_timeline_v1_timeline_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateEventsRequest.ProtoReflect.Descriptor instead.
func (*CreateEventsRequest) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_timeline_v1_timeline_proto_rawDescGZIP(), []int{4}
}

func (x *CreateEventsRequest) GetEntries() []*CreateEventsRequest_EventEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

type CreateEventsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateEventsResponse) Reset() {
	*x = CreateEventsResponse{}
	mi := &file_xyz_block_ftl_timeline_v1_timeline_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateEventsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateEventsResponse) ProtoMessage() {}

func (x *CreateEventsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_timeline_v1_timeline_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateEventsResponse.ProtoReflect.Descriptor instead.
func (*CreateEventsResponse) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_timeline_v1_timeline_proto_rawDescGZIP(), []int{5}
}

type DeleteOldEventsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventType  EventType `protobuf:"varint,1,opt,name=event_type,json=eventType,proto3,enum=xyz.block.ftl.timeline.v1.EventType" json:"event_type,omitempty"`
	AgeSeconds int64     `protobuf:"varint,2,opt,name=age_seconds,json=ageSeconds,proto3" json:"age_seconds,omitempty"`
}

func (x *DeleteOldEventsRequest) Reset() {
	*x = DeleteOldEventsRequest{}
	mi := &file_xyz_block_ftl_timeline_v1_timeline_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteOldEventsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOldEventsRequest) ProtoMessage() {}

func (x *DeleteOldEventsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_timeline_v1_timeline_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOldEventsRequest.ProtoReflect.Descriptor instead.
func (*DeleteOldEventsRequest) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_timeline_v1_timeline_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteOldEventsRequest) GetEventType() EventType {
	if x != nil {
		return x.EventType
	}
	return EventType_EVENT_TYPE_UNSPECIFIED
}

func (x *DeleteOldEventsRequest) GetAgeSeconds() int64 {
	if x != nil {
		return x.AgeSeconds
	}
	return 0
}

type DeleteOldEventsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeletedCount int64 `protobuf:"varint,1,opt,name=deleted_count,json=deletedCount,proto3" json:"deleted_count,omitempty"`
}

func (x *DeleteOldEventsResponse) Reset() {
	*x = DeleteOldEventsResponse{}
	mi := &file_xyz_block_ftl_timeline_v1_timeline_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteOldEventsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOldEventsResponse) ProtoMessage() {}

func (x *DeleteOldEventsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_timeline_v1_timeline_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOldEventsResponse.ProtoReflect.Descriptor instead.
func (*DeleteOldEventsResponse) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_timeline_v1_timeline_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteOldEventsResponse) GetDeletedCount() int64 {
	if x != nil {
		return x.DeletedCount
	}
	return 0
}

// Filters events by log level.
type GetTimelineRequest_LogLevelFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LogLevel LogLevel `protobuf:"varint,1,opt,name=log_level,json=logLevel,proto3,enum=xyz.block.ftl.timeline.v1.LogLevel" json:"log_level,omitempty"`
}

func (x *GetTimelineRequest_LogLevelFilter) Reset() {
	*x = GetTimelineRequest_LogLevelFilter{}
	mi := &file_xyz_block_ftl_timeline_v1_timeline_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTimelineRequest_LogLevelFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTimelineRequest_LogLevelFilter) ProtoMessage() {}

func (x *GetTimelineRequest_LogLevelFilter) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_timeline_v1_timeline_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTimelineRequest_LogLevelFilter.ProtoReflect.Descriptor instead.
func (*GetTimelineRequest_LogLevelFilter) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_timeline_v1_timeline_proto_rawDescGZIP(), []int{0, 0}
}

func (x *GetTimelineRequest_LogLevelFilter) GetLogLevel() LogLevel {
	if x != nil {
		return x.LogLevel
	}
	return LogLevel_LOG_LEVEL_UNSPECIFIED
}

// Filters events by deployment key.
type GetTimelineRequest_DeploymentFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Deployments []string `protobuf:"bytes,1,rep,name=deployments,proto3" json:"deployments,omitempty"`
}

func (x *GetTimelineRequest_DeploymentFilter) Reset() {
	*x = GetTimelineRequest_DeploymentFilter{}
	mi := &file_xyz_block_ftl_timeline_v1_timeline_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTimelineRequest_DeploymentFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTimelineRequest_DeploymentFilter) ProtoMessage() {}

func (x *GetTimelineRequest_DeploymentFilter) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_timeline_v1_timeline_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTimelineRequest_DeploymentFilter.ProtoReflect.Descriptor instead.
func (*GetTimelineRequest_DeploymentFilter) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_timeline_v1_timeline_proto_rawDescGZIP(), []int{0, 1}
}

func (x *GetTimelineRequest_DeploymentFilter) GetDeployments() []string {
	if x != nil {
		return x.Deployments
	}
	return nil
}

// Filters events by request key.
type GetTimelineRequest_RequestFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Requests []string `protobuf:"bytes,1,rep,name=requests,proto3" json:"requests,omitempty"`
}

func (x *GetTimelineRequest_RequestFilter) Reset() {
	*x = GetTimelineRequest_RequestFilter{}
	mi := &file_xyz_block_ftl_timeline_v1_timeline_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTimelineRequest_RequestFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTimelineRequest_RequestFilter) ProtoMessage() {}

func (x *GetTimelineRequest_RequestFilter) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_timeline_v1_timeline_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTimelineRequest_RequestFilter.ProtoReflect.Descriptor instead.
func (*GetTimelineRequest_RequestFilter) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_timeline_v1_timeline_proto_rawDescGZIP(), []int{0, 2}
}

func (x *GetTimelineRequest_RequestFilter) GetRequests() []string {
	if x != nil {
		return x.Requests
	}
	return nil
}

// Filters events by event type.
type GetTimelineRequest_EventTypeFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventTypes []EventType `protobuf:"varint,1,rep,packed,name=event_types,json=eventTypes,proto3,enum=xyz.block.ftl.timeline.v1.EventType" json:"event_types,omitempty"`
}

func (x *GetTimelineRequest_EventTypeFilter) Reset() {
	*x = GetTimelineRequest_EventTypeFilter{}
	mi := &file_xyz_block_ftl_timeline_v1_timeline_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTimelineRequest_EventTypeFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTimelineRequest_EventTypeFilter) ProtoMessage() {}

func (x *GetTimelineRequest_EventTypeFilter) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_timeline_v1_timeline_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTimelineRequest_EventTypeFilter.ProtoReflect.Descriptor instead.
func (*GetTimelineRequest_EventTypeFilter) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_timeline_v1_timeline_proto_rawDescGZIP(), []int{0, 3}
}

func (x *GetTimelineRequest_EventTypeFilter) GetEventTypes() []EventType {
	if x != nil {
		return x.EventTypes
	}
	return nil
}

// Filters events by time.
//
// Either end of the time range can be omitted to indicate no bound.
type GetTimelineRequest_TimeFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OlderThan *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=older_than,json=olderThan,proto3,oneof" json:"older_than,omitempty"`
	NewerThan *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=newer_than,json=newerThan,proto3,oneof" json:"newer_than,omitempty"`
}

func (x *GetTimelineRequest_TimeFilter) Reset() {
	*x = GetTimelineRequest_TimeFilter{}
	mi := &file_xyz_block_ftl_timeline_v1_timeline_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTimelineRequest_TimeFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTimelineRequest_TimeFilter) ProtoMessage() {}

func (x *GetTimelineRequest_TimeFilter) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_timeline_v1_timeline_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTimelineRequest_TimeFilter.ProtoReflect.Descriptor instead.
func (*GetTimelineRequest_TimeFilter) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_timeline_v1_timeline_proto_rawDescGZIP(), []int{0, 4}
}

func (x *GetTimelineRequest_TimeFilter) GetOlderThan() *timestamppb.Timestamp {
	if x != nil {
		return x.OlderThan
	}
	return nil
}

func (x *GetTimelineRequest_TimeFilter) GetNewerThan() *timestamppb.Timestamp {
	if x != nil {
		return x.NewerThan
	}
	return nil
}

// Filters events by ID.
//
// Either end of the ID range can be omitted to indicate no bound.
type GetTimelineRequest_IDFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LowerThan  *int64 `protobuf:"varint,1,opt,name=lower_than,json=lowerThan,proto3,oneof" json:"lower_than,omitempty"`
	HigherThan *int64 `protobuf:"varint,2,opt,name=higher_than,json=higherThan,proto3,oneof" json:"higher_than,omitempty"`
}

func (x *GetTimelineRequest_IDFilter) Reset() {
	*x = GetTimelineRequest_IDFilter{}
	mi := &file_xyz_block_ftl_timeline_v1_timeline_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTimelineRequest_IDFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTimelineRequest_IDFilter) ProtoMessage() {}

func (x *GetTimelineRequest_IDFilter) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_timeline_v1_timeline_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTimelineRequest_IDFilter.ProtoReflect.Descriptor instead.
func (*GetTimelineRequest_IDFilter) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_timeline_v1_timeline_proto_rawDescGZIP(), []int{0, 5}
}

func (x *GetTimelineRequest_IDFilter) GetLowerThan() int64 {
	if x != nil && x.LowerThan != nil {
		return *x.LowerThan
	}
	return 0
}

func (x *GetTimelineRequest_IDFilter) GetHigherThan() int64 {
	if x != nil && x.HigherThan != nil {
		return *x.HigherThan
	}
	return 0
}

// Filters events by call.
type GetTimelineRequest_CallFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DestModule   string  `protobuf:"bytes,1,opt,name=dest_module,json=destModule,proto3" json:"dest_module,omitempty"`
	DestVerb     *string `protobuf:"bytes,2,opt,name=dest_verb,json=destVerb,proto3,oneof" json:"dest_verb,omitempty"`
	SourceModule *string `protobuf:"bytes,3,opt,name=source_module,json=sourceModule,proto3,oneof" json:"source_module,omitempty"`
}

func (x *GetTimelineRequest_CallFilter) Reset() {
	*x = GetTimelineRequest_CallFilter{}
	mi := &file_xyz_block_ftl_timeline_v1_timeline_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTimelineRequest_CallFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTimelineRequest_CallFilter) ProtoMessage() {}

func (x *GetTimelineRequest_CallFilter) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_timeline_v1_timeline_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTimelineRequest_CallFilter.ProtoReflect.Descriptor instead.
func (*GetTimelineRequest_CallFilter) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_timeline_v1_timeline_proto_rawDescGZIP(), []int{0, 6}
}

func (x *GetTimelineRequest_CallFilter) GetDestModule() string {
	if x != nil {
		return x.DestModule
	}
	return ""
}

func (x *GetTimelineRequest_CallFilter) GetDestVerb() string {
	if x != nil && x.DestVerb != nil {
		return *x.DestVerb
	}
	return ""
}

func (x *GetTimelineRequest_CallFilter) GetSourceModule() string {
	if x != nil && x.SourceModule != nil {
		return *x.SourceModule
	}
	return ""
}

type GetTimelineRequest_ModuleFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Module string  `protobuf:"bytes,1,opt,name=module,proto3" json:"module,omitempty"`
	Verb   *string `protobuf:"bytes,2,opt,name=verb,proto3,oneof" json:"verb,omitempty"`
}

func (x *GetTimelineRequest_ModuleFilter) Reset() {
	*x = GetTimelineRequest_ModuleFilter{}
	mi := &file_xyz_block_ftl_timeline_v1_timeline_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTimelineRequest_ModuleFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTimelineRequest_ModuleFilter) ProtoMessage() {}

func (x *GetTimelineRequest_ModuleFilter) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_timeline_v1_timeline_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTimelineRequest_ModuleFilter.ProtoReflect.Descriptor instead.
func (*GetTimelineRequest_ModuleFilter) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_timeline_v1_timeline_proto_rawDescGZIP(), []int{0, 7}
}

func (x *GetTimelineRequest_ModuleFilter) GetModule() string {
	if x != nil {
		return x.Module
	}
	return ""
}

func (x *GetTimelineRequest_ModuleFilter) GetVerb() string {
	if x != nil && x.Verb != nil {
		return *x.Verb
	}
	return ""
}

type GetTimelineRequest_Filter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// These map 1:1 with filters in backend/timeline/filters.go
	//
	// Types that are assignable to Filter:
	//
	//	*GetTimelineRequest_Filter_LogLevel
	//	*GetTimelineRequest_Filter_Deployments
	//	*GetTimelineRequest_Filter_Requests
	//	*GetTimelineRequest_Filter_EventTypes
	//	*GetTimelineRequest_Filter_Time
	//	*GetTimelineRequest_Filter_Id
	//	*GetTimelineRequest_Filter_Call
	//	*GetTimelineRequest_Filter_Module
	Filter isGetTimelineRequest_Filter_Filter `protobuf_oneof:"filter"`
}

func (x *GetTimelineRequest_Filter) Reset() {
	*x = GetTimelineRequest_Filter{}
	mi := &file_xyz_block_ftl_timeline_v1_timeline_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTimelineRequest_Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTimelineRequest_Filter) ProtoMessage() {}

func (x *GetTimelineRequest_Filter) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_timeline_v1_timeline_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTimelineRequest_Filter.ProtoReflect.Descriptor instead.
func (*GetTimelineRequest_Filter) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_timeline_v1_timeline_proto_rawDescGZIP(), []int{0, 8}
}

func (m *GetTimelineRequest_Filter) GetFilter() isGetTimelineRequest_Filter_Filter {
	if m != nil {
		return m.Filter
	}
	return nil
}

func (x *GetTimelineRequest_Filter) GetLogLevel() *GetTimelineRequest_LogLevelFilter {
	if x, ok := x.GetFilter().(*GetTimelineRequest_Filter_LogLevel); ok {
		return x.LogLevel
	}
	return nil
}

func (x *GetTimelineRequest_Filter) GetDeployments() *GetTimelineRequest_DeploymentFilter {
	if x, ok := x.GetFilter().(*GetTimelineRequest_Filter_Deployments); ok {
		return x.Deployments
	}
	return nil
}

func (x *GetTimelineRequest_Filter) GetRequests() *GetTimelineRequest_RequestFilter {
	if x, ok := x.GetFilter().(*GetTimelineRequest_Filter_Requests); ok {
		return x.Requests
	}
	return nil
}

func (x *GetTimelineRequest_Filter) GetEventTypes() *GetTimelineRequest_EventTypeFilter {
	if x, ok := x.GetFilter().(*GetTimelineRequest_Filter_EventTypes); ok {
		return x.EventTypes
	}
	return nil
}

func (x *GetTimelineRequest_Filter) GetTime() *GetTimelineRequest_TimeFilter {
	if x, ok := x.GetFilter().(*GetTimelineRequest_Filter_Time); ok {
		return x.Time
	}
	return nil
}

func (x *GetTimelineRequest_Filter) GetId() *GetTimelineRequest_IDFilter {
	if x, ok := x.GetFilter().(*GetTimelineRequest_Filter_Id); ok {
		return x.Id
	}
	return nil
}

func (x *GetTimelineRequest_Filter) GetCall() *GetTimelineRequest_CallFilter {
	if x, ok := x.GetFilter().(*GetTimelineRequest_Filter_Call); ok {
		return x.Call
	}
	return nil
}

func (x *GetTimelineRequest_Filter) GetModule() *GetTimelineRequest_ModuleFilter {
	if x, ok := x.GetFilter().(*GetTimelineRequest_Filter_Module); ok {
		return x.Module
	}
	return nil
}

type isGetTimelineRequest_Filter_Filter interface {
	isGetTimelineRequest_Filter_Filter()
}

type GetTimelineRequest_Filter_LogLevel struct {
	LogLevel *GetTimelineRequest_LogLevelFilter `protobuf:"bytes,1,opt,name=log_level,json=logLevel,proto3,oneof"`
}

type GetTimelineRequest_Filter_Deployments struct {
	Deployments *GetTimelineRequest_DeploymentFilter `protobuf:"bytes,2,opt,name=deployments,proto3,oneof"`
}

type GetTimelineRequest_Filter_Requests struct {
	Requests *GetTimelineRequest_RequestFilter `protobuf:"bytes,3,opt,name=requests,proto3,oneof"`
}

type GetTimelineRequest_Filter_EventTypes struct {
	EventTypes *GetTimelineRequest_EventTypeFilter `protobuf:"bytes,4,opt,name=event_types,json=eventTypes,proto3,oneof"`
}

type GetTimelineRequest_Filter_Time struct {
	Time *GetTimelineRequest_TimeFilter `protobuf:"bytes,5,opt,name=time,proto3,oneof"`
}

type GetTimelineRequest_Filter_Id struct {
	Id *GetTimelineRequest_IDFilter `protobuf:"bytes,6,opt,name=id,proto3,oneof"`
}

type GetTimelineRequest_Filter_Call struct {
	Call *GetTimelineRequest_CallFilter `protobuf:"bytes,7,opt,name=call,proto3,oneof"`
}

type GetTimelineRequest_Filter_Module struct {
	Module *GetTimelineRequest_ModuleFilter `protobuf:"bytes,8,opt,name=module,proto3,oneof"`
}

func (*GetTimelineRequest_Filter_LogLevel) isGetTimelineRequest_Filter_Filter() {}

func (*GetTimelineRequest_Filter_Deployments) isGetTimelineRequest_Filter_Filter() {}

func (*GetTimelineRequest_Filter_Requests) isGetTimelineRequest_Filter_Filter() {}

func (*GetTimelineRequest_Filter_EventTypes) isGetTimelineRequest_Filter_Filter() {}

func (*GetTimelineRequest_Filter_Time) isGetTimelineRequest_Filter_Filter() {}

func (*GetTimelineRequest_Filter_Id) isGetTimelineRequest_Filter_Filter() {}

func (*GetTimelineRequest_Filter_Call) isGetTimelineRequest_Filter_Filter() {}

func (*GetTimelineRequest_Filter_Module) isGetTimelineRequest_Filter_Filter() {}

type CreateEventsRequest_EventEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// Types that are assignable to Entry:
	//
	//	*CreateEventsRequest_EventEntry_Log
	//	*CreateEventsRequest_EventEntry_Call
	//	*CreateEventsRequest_EventEntry_DeploymentCreated
	//	*CreateEventsRequest_EventEntry_DeploymentUpdated
	//	*CreateEventsRequest_EventEntry_Ingress
	//	*CreateEventsRequest_EventEntry_CronScheduled
	//	*CreateEventsRequest_EventEntry_AsyncExecute
	//	*CreateEventsRequest_EventEntry_PubsubPublish
	//	*CreateEventsRequest_EventEntry_PubsubConsume
	Entry isCreateEventsRequest_EventEntry_Entry `protobuf_oneof:"entry"`
}

func (x *CreateEventsRequest_EventEntry) Reset() {
	*x = CreateEventsRequest_EventEntry{}
	mi := &file_xyz_block_ftl_timeline_v1_timeline_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateEventsRequest_EventEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateEventsRequest_EventEntry) ProtoMessage() {}

func (x *CreateEventsRequest_EventEntry) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_timeline_v1_timeline_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateEventsRequest_EventEntry.ProtoReflect.Descriptor instead.
func (*CreateEventsRequest_EventEntry) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_timeline_v1_timeline_proto_rawDescGZIP(), []int{4, 0}
}

func (x *CreateEventsRequest_EventEntry) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (m *CreateEventsRequest_EventEntry) GetEntry() isCreateEventsRequest_EventEntry_Entry {
	if m != nil {
		return m.Entry
	}
	return nil
}

func (x *CreateEventsRequest_EventEntry) GetLog() *LogEvent {
	if x, ok := x.GetEntry().(*CreateEventsRequest_EventEntry_Log); ok {
		return x.Log
	}
	return nil
}

func (x *CreateEventsRequest_EventEntry) GetCall() *CallEvent {
	if x, ok := x.GetEntry().(*CreateEventsRequest_EventEntry_Call); ok {
		return x.Call
	}
	return nil
}

func (x *CreateEventsRequest_EventEntry) GetDeploymentCreated() *DeploymentCreatedEvent {
	if x, ok := x.GetEntry().(*CreateEventsRequest_EventEntry_DeploymentCreated); ok {
		return x.DeploymentCreated
	}
	return nil
}

func (x *CreateEventsRequest_EventEntry) GetDeploymentUpdated() *DeploymentUpdatedEvent {
	if x, ok := x.GetEntry().(*CreateEventsRequest_EventEntry_DeploymentUpdated); ok {
		return x.DeploymentUpdated
	}
	return nil
}

func (x *CreateEventsRequest_EventEntry) GetIngress() *IngressEvent {
	if x, ok := x.GetEntry().(*CreateEventsRequest_EventEntry_Ingress); ok {
		return x.Ingress
	}
	return nil
}

func (x *CreateEventsRequest_EventEntry) GetCronScheduled() *CronScheduledEvent {
	if x, ok := x.GetEntry().(*CreateEventsRequest_EventEntry_CronScheduled); ok {
		return x.CronScheduled
	}
	return nil
}

func (x *CreateEventsRequest_EventEntry) GetAsyncExecute() *AsyncExecuteEvent {
	if x, ok := x.GetEntry().(*CreateEventsRequest_EventEntry_AsyncExecute); ok {
		return x.AsyncExecute
	}
	return nil
}

func (x *CreateEventsRequest_EventEntry) GetPubsubPublish() *PubSubPublishEvent {
	if x, ok := x.GetEntry().(*CreateEventsRequest_EventEntry_PubsubPublish); ok {
		return x.PubsubPublish
	}
	return nil
}

func (x *CreateEventsRequest_EventEntry) GetPubsubConsume() *PubSubConsumeEvent {
	if x, ok := x.GetEntry().(*CreateEventsRequest_EventEntry_PubsubConsume); ok {
		return x.PubsubConsume
	}
	return nil
}

type isCreateEventsRequest_EventEntry_Entry interface {
	isCreateEventsRequest_EventEntry_Entry()
}

type CreateEventsRequest_EventEntry_Log struct {
	Log *LogEvent `protobuf:"bytes,2,opt,name=log,proto3,oneof"`
}

type CreateEventsRequest_EventEntry_Call struct {
	Call *CallEvent `protobuf:"bytes,3,opt,name=call,proto3,oneof"`
}

type CreateEventsRequest_EventEntry_DeploymentCreated struct {
	DeploymentCreated *DeploymentCreatedEvent `protobuf:"bytes,4,opt,name=deployment_created,json=deploymentCreated,proto3,oneof"`
}

type CreateEventsRequest_EventEntry_DeploymentUpdated struct {
	DeploymentUpdated *DeploymentUpdatedEvent `protobuf:"bytes,5,opt,name=deployment_updated,json=deploymentUpdated,proto3,oneof"`
}

type CreateEventsRequest_EventEntry_Ingress struct {
	Ingress *IngressEvent `protobuf:"bytes,6,opt,name=ingress,proto3,oneof"`
}

type CreateEventsRequest_EventEntry_CronScheduled struct {
	CronScheduled *CronScheduledEvent `protobuf:"bytes,7,opt,name=cron_scheduled,json=cronScheduled,proto3,oneof"`
}

type CreateEventsRequest_EventEntry_AsyncExecute struct {
	AsyncExecute *AsyncExecuteEvent `protobuf:"bytes,8,opt,name=async_execute,json=asyncExecute,proto3,oneof"`
}

type CreateEventsRequest_EventEntry_PubsubPublish struct {
	PubsubPublish *PubSubPublishEvent `protobuf:"bytes,9,opt,name=pubsub_publish,json=pubsubPublish,proto3,oneof"`
}

type CreateEventsRequest_EventEntry_PubsubConsume struct {
	PubsubConsume *PubSubConsumeEvent `protobuf:"bytes,10,opt,name=pubsub_consume,json=pubsubConsume,proto3,oneof"`
}

func (*CreateEventsRequest_EventEntry_Log) isCreateEventsRequest_EventEntry_Entry() {}

func (*CreateEventsRequest_EventEntry_Call) isCreateEventsRequest_EventEntry_Entry() {}

func (*CreateEventsRequest_EventEntry_DeploymentCreated) isCreateEventsRequest_EventEntry_Entry() {}

func (*CreateEventsRequest_EventEntry_DeploymentUpdated) isCreateEventsRequest_EventEntry_Entry() {}

func (*CreateEventsRequest_EventEntry_Ingress) isCreateEventsRequest_EventEntry_Entry() {}

func (*CreateEventsRequest_EventEntry_CronScheduled) isCreateEventsRequest_EventEntry_Entry() {}

func (*CreateEventsRequest_EventEntry_AsyncExecute) isCreateEventsRequest_EventEntry_Entry() {}

func (*CreateEventsRequest_EventEntry_PubsubPublish) isCreateEventsRequest_EventEntry_Entry() {}

func (*CreateEventsRequest_EventEntry_PubsubConsume) isCreateEventsRequest_EventEntry_Entry() {}

var File_xyz_block_ftl_timeline_v1_timeline_proto protoreflect.FileDescriptor

var file_xyz_block_ftl_timeline_v1_timeline_proto_rawDesc = []byte{
	0x0a, 0x28, 0x78, 0x79, 0x7a, 0x2f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2f, 0x66, 0x74, 0x6c, 0x2f,
	0x74, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x69, 0x6d, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x19, 0x78, 0x79, 0x7a, 0x2e,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x6c, 0x69,
	0x6e, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x25, 0x78, 0x79, 0x7a, 0x2f, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x2f, 0x66, 0x74, 0x6c, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2f, 0x76,
	0x31, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x78,
	0x79, 0x7a, 0x2f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2f, 0x66, 0x74, 0x6c, 0x2f, 0x76, 0x31, 0x2f,
	0x66, 0x74, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf0, 0x0d, 0x0a, 0x12, 0x47, 0x65,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x4e, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x34, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74,
	0x6c, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x49, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x33, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x1a, 0x52, 0x0a, 0x0e, 0x4c, 0x6f, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x12, 0x40, 0x0a, 0x09, 0x6c, 0x6f, 0x67, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x08, 0x6c, 0x6f, 0x67,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x1a, 0x34, 0x0a, 0x10, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0x2b, 0x0a, 0x0d, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x1a, 0x58, 0x0a, 0x0f, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x45, 0x0a, 0x0b, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0e,
	0x32, 0x24, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c,
	0x2e, 0x74, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x73, 0x1a, 0xaa, 0x01, 0x0a, 0x0a, 0x54, 0x69, 0x6d, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x12, 0x3e, 0x0a, 0x0a, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x74, 0x68, 0x61, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x48, 0x00, 0x52, 0x09, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x54, 0x68, 0x61, 0x6e, 0x88, 0x01,
	0x01, 0x12, 0x3e, 0x0a, 0x0a, 0x6e, 0x65, 0x77, 0x65, 0x72, 0x5f, 0x74, 0x68, 0x61, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x48, 0x01, 0x52, 0x09, 0x6e, 0x65, 0x77, 0x65, 0x72, 0x54, 0x68, 0x61, 0x6e, 0x88, 0x01,
	0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x74, 0x68, 0x61, 0x6e,
	0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x6e, 0x65, 0x77, 0x65, 0x72, 0x5f, 0x74, 0x68, 0x61, 0x6e, 0x1a,
	0x73, 0x0a, 0x08, 0x49, 0x44, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0a, 0x6c,
	0x6f, 0x77, 0x65, 0x72, 0x5f, 0x74, 0x68, 0x61, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x48,
	0x00, 0x52, 0x09, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x54, 0x68, 0x61, 0x6e, 0x88, 0x01, 0x01, 0x12,
	0x24, 0x0a, 0x0b, 0x68, 0x69, 0x67, 0x68, 0x65, 0x72, 0x5f, 0x74, 0x68, 0x61, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x48, 0x01, 0x52, 0x0a, 0x68, 0x69, 0x67, 0x68, 0x65, 0x72, 0x54, 0x68,
	0x61, 0x6e, 0x88, 0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x5f,
	0x74, 0x68, 0x61, 0x6e, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x68, 0x69, 0x67, 0x68, 0x65, 0x72, 0x5f,
	0x74, 0x68, 0x61, 0x6e, 0x1a, 0x99, 0x01, 0x0a, 0x0a, 0x43, 0x61, 0x6c, 0x6c, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x73, 0x74, 0x4d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x09, 0x64, 0x65, 0x73, 0x74, 0x5f, 0x76, 0x65, 0x72,
	0x62, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x64, 0x65, 0x73, 0x74, 0x56,
	0x65, 0x72, 0x62, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x5f, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52,
	0x0c, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x88, 0x01, 0x01,
	0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x64, 0x65, 0x73, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x62, 0x42, 0x10,
	0x0a, 0x0e, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x1a, 0x48, 0x0a, 0x0c, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x17, 0x0a, 0x04, 0x76, 0x65, 0x72, 0x62,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x76, 0x65, 0x72, 0x62, 0x88, 0x01,
	0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x76, 0x65, 0x72, 0x62, 0x1a, 0xd0, 0x05, 0x0a, 0x06, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x5b, 0x0a, 0x09, 0x6c, 0x6f, 0x67, 0x5f, 0x6c, 0x65, 0x76,
	0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4c, 0x6f, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x48, 0x00, 0x52, 0x08, 0x6c, 0x6f, 0x67, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x12, 0x62, 0x0a, 0x0b, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x48, 0x00, 0x52, 0x0b, 0x64, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x59, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x48, 0x00, 0x52, 0x08, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x73, 0x12, 0x60, 0x0a, 0x0b, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x48, 0x00, 0x52, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x73, 0x12, 0x4e, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x38, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74,
	0x6c, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x48, 0x00, 0x52, 0x04, 0x74,
	0x69, 0x6d, 0x65, 0x12, 0x48, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x36, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e,
	0x74, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x49,
	0x44, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x48, 0x00, 0x52, 0x02, 0x69, 0x64, 0x12, 0x4e, 0x0a,
	0x04, 0x63, 0x61, 0x6c, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x78, 0x79,
	0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x74, 0x69, 0x6d, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x6c,
	0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x48, 0x00, 0x52, 0x04, 0x63, 0x61, 0x6c, 0x6c, 0x12, 0x54, 0x0a,
	0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e,
	0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x74, 0x69,
	0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x48, 0x00, 0x52, 0x06, 0x6d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0x3d, 0x0a,
	0x05, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x15, 0x0a, 0x11, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0d, 0x0a,
	0x09, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x41, 0x53, 0x43, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a,
	0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x44, 0x45, 0x53, 0x43, 0x10, 0x02, 0x22, 0x77, 0x0a, 0x13,
	0x47, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e,
	0x66, 0x74, 0x6c, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x1b, 0x0a,
	0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52,
	0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x63,
	0x75, 0x72, 0x73, 0x6f, 0x72, 0x22, 0xb9, 0x01, 0x0a, 0x15, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x47, 0x0a, 0x0f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76,
	0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x76, 0x61, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x43, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x42, 0x12, 0x0a,
	0x10, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61,
	0x6c, 0x22, 0x52, 0x0a, 0x16, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x54, 0x69, 0x6d, 0x65, 0x6c,
	0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x06, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x78, 0x79,
	0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x74, 0x69, 0x6d, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x9b, 0x07, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x53, 0x0a,
	0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x39,
	0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x74,
	0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69,
	0x65, 0x73, 0x1a, 0xae, 0x06, 0x0a, 0x0a, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x37, 0x0a, 0x03, 0x6c,
	0x6f, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x67, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52,
	0x03, 0x6c, 0x6f, 0x67, 0x12, 0x3a, 0x0a, 0x04, 0x63, 0x61, 0x6c, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66,
	0x74, 0x6c, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x61, 0x6c, 0x6c, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x04, 0x63, 0x61, 0x6c, 0x6c,
	0x12, 0x62, 0x0a, 0x12, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x78,
	0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x74, 0x69, 0x6d,
	0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48,
	0x00, 0x52, 0x11, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x12, 0x62, 0x0a, 0x12, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x31, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c,
	0x2e, 0x74, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x11, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x43, 0x0a, 0x07, 0x69, 0x6e, 0x67, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x78, 0x79, 0x7a, 0x2e,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x6c, 0x69,
	0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x48, 0x00, 0x52, 0x07, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x56, 0x0a,
	0x0e, 0x63, 0x72, 0x6f, 0x6e, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x72, 0x6f, 0x6e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0d, 0x63, 0x72, 0x6f, 0x6e, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x64, 0x12, 0x53, 0x0a, 0x0d, 0x61, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x65,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x78,
	0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x74, 0x69, 0x6d,
	0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x45, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0c, 0x61, 0x73,
	0x79, 0x6e, 0x63, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x12, 0x56, 0x0a, 0x0e, 0x70, 0x75,
	0x62, 0x73, 0x75, 0x62, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66,
	0x74, 0x6c, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x75, 0x62, 0x53, 0x75, 0x62, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x48, 0x00, 0x52, 0x0d, 0x70, 0x75, 0x62, 0x73, 0x75, 0x62, 0x50, 0x75, 0x62, 0x6c, 0x69,
	0x73, 0x68, 0x12, 0x56, 0x0a, 0x0e, 0x70, 0x75, 0x62, 0x73, 0x75, 0x62, 0x5f, 0x63, 0x6f, 0x6e,
	0x73, 0x75, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x78, 0x79, 0x7a,
	0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x6c,
	0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75, 0x62, 0x53, 0x75, 0x62, 0x43, 0x6f, 0x6e,
	0x73, 0x75, 0x6d, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0d, 0x70, 0x75, 0x62,
	0x73, 0x75, 0x62, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x65, 0x6e,
	0x74, 0x72, 0x79, 0x22, 0x16, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x7e, 0x0a, 0x16, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x6c, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x43, 0x0a, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x78, 0x79, 0x7a, 0x2e,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x6c, 0x69,
	0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x67,
	0x65, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x61, 0x67, 0x65, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x22, 0x3e, 0x0a, 0x17, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x6c, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x32, 0xb8, 0x04, 0x0a, 0x0f,
	0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x4a, 0x0a, 0x04, 0x50, 0x69, 0x6e, 0x67, 0x12, 0x1d, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x03, 0x90, 0x02, 0x01, 0x12, 0x71, 0x0a, 0x0b, 0x47,
	0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x2d, 0x2e, 0x78, 0x79, 0x7a,
	0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x6c,
	0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69,
	0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x78, 0x79, 0x7a, 0x2e,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x6c, 0x69,
	0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x03, 0x90, 0x02, 0x01, 0x12, 0x77,
	0x0a, 0x0e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65,
	0x12, 0x30, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c,
	0x2e, 0x74, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x31, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66,
	0x74, 0x6c, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01, 0x12, 0x71, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x2e, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7a, 0x0a, 0x0f, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x4f, 0x6c, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x31, 0x2e,
	0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x74, 0x69,
	0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x4f, 0x6c, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x32, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c,
	0x2e, 0x74, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x4f, 0x6c, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x52, 0x50, 0x01, 0x5a, 0x4e, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x54, 0x42, 0x44, 0x35, 0x34, 0x35, 0x36, 0x36, 0x39,
	0x37, 0x35, 0x2f, 0x66, 0x74, 0x6c, 0x2f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x78, 0x79, 0x7a, 0x2f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2f,
	0x66, 0x74, 0x6c, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2f, 0x76, 0x31, 0x3b,
	0x74, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_xyz_block_ftl_timeline_v1_timeline_proto_rawDescOnce sync.Once
	file_xyz_block_ftl_timeline_v1_timeline_proto_rawDescData = file_xyz_block_ftl_timeline_v1_timeline_proto_rawDesc
)

func file_xyz_block_ftl_timeline_v1_timeline_proto_rawDescGZIP() []byte {
	file_xyz_block_ftl_timeline_v1_timeline_proto_rawDescOnce.Do(func() {
		file_xyz_block_ftl_timeline_v1_timeline_proto_rawDescData = protoimpl.X.CompressGZIP(file_xyz_block_ftl_timeline_v1_timeline_proto_rawDescData)
	})
	return file_xyz_block_ftl_timeline_v1_timeline_proto_rawDescData
}

var file_xyz_block_ftl_timeline_v1_timeline_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_xyz_block_ftl_timeline_v1_timeline_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_xyz_block_ftl_timeline_v1_timeline_proto_goTypes = []any{
	(GetTimelineRequest_Order)(0),               // 0: xyz.block.ftl.timeline.v1.GetTimelineRequest.Order
	(*GetTimelineRequest)(nil),                  // 1: xyz.block.ftl.timeline.v1.GetTimelineRequest
	(*GetTimelineResponse)(nil),                 // 2: xyz.block.ftl.timeline.v1.GetTimelineResponse
	(*StreamTimelineRequest)(nil),               // 3: xyz.block.ftl.timeline.v1.StreamTimelineRequest
	(*StreamTimelineResponse)(nil),              // 4: xyz.block.ftl.timeline.v1.StreamTimelineResponse
	(*CreateEventsRequest)(nil),                 // 5: xyz.block.ftl.timeline.v1.CreateEventsRequest
	(*CreateEventsResponse)(nil),                // 6: xyz.block.ftl.timeline.v1.CreateEventsResponse
	(*DeleteOldEventsRequest)(nil),              // 7: xyz.block.ftl.timeline.v1.DeleteOldEventsRequest
	(*DeleteOldEventsResponse)(nil),             // 8: xyz.block.ftl.timeline.v1.DeleteOldEventsResponse
	(*GetTimelineRequest_LogLevelFilter)(nil),   // 9: xyz.block.ftl.timeline.v1.GetTimelineRequest.LogLevelFilter
	(*GetTimelineRequest_DeploymentFilter)(nil), // 10: xyz.block.ftl.timeline.v1.GetTimelineRequest.DeploymentFilter
	(*GetTimelineRequest_RequestFilter)(nil),    // 11: xyz.block.ftl.timeline.v1.GetTimelineRequest.RequestFilter
	(*GetTimelineRequest_EventTypeFilter)(nil),  // 12: xyz.block.ftl.timeline.v1.GetTimelineRequest.EventTypeFilter
	(*GetTimelineRequest_TimeFilter)(nil),       // 13: xyz.block.ftl.timeline.v1.GetTimelineRequest.TimeFilter
	(*GetTimelineRequest_IDFilter)(nil),         // 14: xyz.block.ftl.timeline.v1.GetTimelineRequest.IDFilter
	(*GetTimelineRequest_CallFilter)(nil),       // 15: xyz.block.ftl.timeline.v1.GetTimelineRequest.CallFilter
	(*GetTimelineRequest_ModuleFilter)(nil),     // 16: xyz.block.ftl.timeline.v1.GetTimelineRequest.ModuleFilter
	(*GetTimelineRequest_Filter)(nil),           // 17: xyz.block.ftl.timeline.v1.GetTimelineRequest.Filter
	(*CreateEventsRequest_EventEntry)(nil),      // 18: xyz.block.ftl.timeline.v1.CreateEventsRequest.EventEntry
	(*Event)(nil),                               // 19: xyz.block.ftl.timeline.v1.Event
	(*durationpb.Duration)(nil),                 // 20: google.protobuf.Duration
	(EventType)(0),                              // 21: xyz.block.ftl.timeline.v1.EventType
	(LogLevel)(0),                               // 22: xyz.block.ftl.timeline.v1.LogLevel
	(*timestamppb.Timestamp)(nil),               // 23: google.protobuf.Timestamp
	(*LogEvent)(nil),                            // 24: xyz.block.ftl.timeline.v1.LogEvent
	(*CallEvent)(nil),                           // 25: xyz.block.ftl.timeline.v1.CallEvent
	(*DeploymentCreatedEvent)(nil),              // 26: xyz.block.ftl.timeline.v1.DeploymentCreatedEvent
	(*DeploymentUpdatedEvent)(nil),              // 27: xyz.block.ftl.timeline.v1.DeploymentUpdatedEvent
	(*IngressEvent)(nil),                        // 28: xyz.block.ftl.timeline.v1.IngressEvent
	(*CronScheduledEvent)(nil),                  // 29: xyz.block.ftl.timeline.v1.CronScheduledEvent
	(*AsyncExecuteEvent)(nil),                   // 30: xyz.block.ftl.timeline.v1.AsyncExecuteEvent
	(*PubSubPublishEvent)(nil),                  // 31: xyz.block.ftl.timeline.v1.PubSubPublishEvent
	(*PubSubConsumeEvent)(nil),                  // 32: xyz.block.ftl.timeline.v1.PubSubConsumeEvent
	(*v1.PingRequest)(nil),                      // 33: xyz.block.ftl.v1.PingRequest
	(*v1.PingResponse)(nil),                     // 34: xyz.block.ftl.v1.PingResponse
}
var file_xyz_block_ftl_timeline_v1_timeline_proto_depIdxs = []int32{
	17, // 0: xyz.block.ftl.timeline.v1.GetTimelineRequest.filters:type_name -> xyz.block.ftl.timeline.v1.GetTimelineRequest.Filter
	0,  // 1: xyz.block.ftl.timeline.v1.GetTimelineRequest.order:type_name -> xyz.block.ftl.timeline.v1.GetTimelineRequest.Order
	19, // 2: xyz.block.ftl.timeline.v1.GetTimelineResponse.events:type_name -> xyz.block.ftl.timeline.v1.Event
	20, // 3: xyz.block.ftl.timeline.v1.StreamTimelineRequest.update_interval:type_name -> google.protobuf.Duration
	1,  // 4: xyz.block.ftl.timeline.v1.StreamTimelineRequest.query:type_name -> xyz.block.ftl.timeline.v1.GetTimelineRequest
	19, // 5: xyz.block.ftl.timeline.v1.StreamTimelineResponse.events:type_name -> xyz.block.ftl.timeline.v1.Event
	18, // 6: xyz.block.ftl.timeline.v1.CreateEventsRequest.entries:type_name -> xyz.block.ftl.timeline.v1.CreateEventsRequest.EventEntry
	21, // 7: xyz.block.ftl.timeline.v1.DeleteOldEventsRequest.event_type:type_name -> xyz.block.ftl.timeline.v1.EventType
	22, // 8: xyz.block.ftl.timeline.v1.GetTimelineRequest.LogLevelFilter.log_level:type_name -> xyz.block.ftl.timeline.v1.LogLevel
	21, // 9: xyz.block.ftl.timeline.v1.GetTimelineRequest.EventTypeFilter.event_types:type_name -> xyz.block.ftl.timeline.v1.EventType
	23, // 10: xyz.block.ftl.timeline.v1.GetTimelineRequest.TimeFilter.older_than:type_name -> google.protobuf.Timestamp
	23, // 11: xyz.block.ftl.timeline.v1.GetTimelineRequest.TimeFilter.newer_than:type_name -> google.protobuf.Timestamp
	9,  // 12: xyz.block.ftl.timeline.v1.GetTimelineRequest.Filter.log_level:type_name -> xyz.block.ftl.timeline.v1.GetTimelineRequest.LogLevelFilter
	10, // 13: xyz.block.ftl.timeline.v1.GetTimelineRequest.Filter.deployments:type_name -> xyz.block.ftl.timeline.v1.GetTimelineRequest.DeploymentFilter
	11, // 14: xyz.block.ftl.timeline.v1.GetTimelineRequest.Filter.requests:type_name -> xyz.block.ftl.timeline.v1.GetTimelineRequest.RequestFilter
	12, // 15: xyz.block.ftl.timeline.v1.GetTimelineRequest.Filter.event_types:type_name -> xyz.block.ftl.timeline.v1.GetTimelineRequest.EventTypeFilter
	13, // 16: xyz.block.ftl.timeline.v1.GetTimelineRequest.Filter.time:type_name -> xyz.block.ftl.timeline.v1.GetTimelineRequest.TimeFilter
	14, // 17: xyz.block.ftl.timeline.v1.GetTimelineRequest.Filter.id:type_name -> xyz.block.ftl.timeline.v1.GetTimelineRequest.IDFilter
	15, // 18: xyz.block.ftl.timeline.v1.GetTimelineRequest.Filter.call:type_name -> xyz.block.ftl.timeline.v1.GetTimelineRequest.CallFilter
	16, // 19: xyz.block.ftl.timeline.v1.GetTimelineRequest.Filter.module:type_name -> xyz.block.ftl.timeline.v1.GetTimelineRequest.ModuleFilter
	23, // 20: xyz.block.ftl.timeline.v1.CreateEventsRequest.EventEntry.timestamp:type_name -> google.protobuf.Timestamp
	24, // 21: xyz.block.ftl.timeline.v1.CreateEventsRequest.EventEntry.log:type_name -> xyz.block.ftl.timeline.v1.LogEvent
	25, // 22: xyz.block.ftl.timeline.v1.CreateEventsRequest.EventEntry.call:type_name -> xyz.block.ftl.timeline.v1.CallEvent
	26, // 23: xyz.block.ftl.timeline.v1.CreateEventsRequest.EventEntry.deployment_created:type_name -> xyz.block.ftl.timeline.v1.DeploymentCreatedEvent
	27, // 24: xyz.block.ftl.timeline.v1.CreateEventsRequest.EventEntry.deployment_updated:type_name -> xyz.block.ftl.timeline.v1.DeploymentUpdatedEvent
	28, // 25: xyz.block.ftl.timeline.v1.CreateEventsRequest.EventEntry.ingress:type_name -> xyz.block.ftl.timeline.v1.IngressEvent
	29, // 26: xyz.block.ftl.timeline.v1.CreateEventsRequest.EventEntry.cron_scheduled:type_name -> xyz.block.ftl.timeline.v1.CronScheduledEvent
	30, // 27: xyz.block.ftl.timeline.v1.CreateEventsRequest.EventEntry.async_execute:type_name -> xyz.block.ftl.timeline.v1.AsyncExecuteEvent
	31, // 28: xyz.block.ftl.timeline.v1.CreateEventsRequest.EventEntry.pubsub_publish:type_name -> xyz.block.ftl.timeline.v1.PubSubPublishEvent
	32, // 29: xyz.block.ftl.timeline.v1.CreateEventsRequest.EventEntry.pubsub_consume:type_name -> xyz.block.ftl.timeline.v1.PubSubConsumeEvent
	33, // 30: xyz.block.ftl.timeline.v1.TimelineService.Ping:input_type -> xyz.block.ftl.v1.PingRequest
	1,  // 31: xyz.block.ftl.timeline.v1.TimelineService.GetTimeline:input_type -> xyz.block.ftl.timeline.v1.GetTimelineRequest
	3,  // 32: xyz.block.ftl.timeline.v1.TimelineService.StreamTimeline:input_type -> xyz.block.ftl.timeline.v1.StreamTimelineRequest
	5,  // 33: xyz.block.ftl.timeline.v1.TimelineService.CreateEvents:input_type -> xyz.block.ftl.timeline.v1.CreateEventsRequest
	7,  // 34: xyz.block.ftl.timeline.v1.TimelineService.DeleteOldEvents:input_type -> xyz.block.ftl.timeline.v1.DeleteOldEventsRequest
	34, // 35: xyz.block.ftl.timeline.v1.TimelineService.Ping:output_type -> xyz.block.ftl.v1.PingResponse
	2,  // 36: xyz.block.ftl.timeline.v1.TimelineService.GetTimeline:output_type -> xyz.block.ftl.timeline.v1.GetTimelineResponse
	4,  // 37: xyz.block.ftl.timeline.v1.TimelineService.StreamTimeline:output_type -> xyz.block.ftl.timeline.v1.StreamTimelineResponse
	6,  // 38: xyz.block.ftl.timeline.v1.TimelineService.CreateEvents:output_type -> xyz.block.ftl.timeline.v1.CreateEventsResponse
	8,  // 39: xyz.block.ftl.timeline.v1.TimelineService.DeleteOldEvents:output_type -> xyz.block.ftl.timeline.v1.DeleteOldEventsResponse
	35, // [35:40] is the sub-list for method output_type
	30, // [30:35] is the sub-list for method input_type
	30, // [30:30] is the sub-list for extension type_name
	30, // [30:30] is the sub-list for extension extendee
	0,  // [0:30] is the sub-list for field type_name
}

func init() { file_xyz_block_ftl_timeline_v1_timeline_proto_init() }
func file_xyz_block_ftl_timeline_v1_timeline_proto_init() {
	if File_xyz_block_ftl_timeline_v1_timeline_proto != nil {
		return
	}
	file_xyz_block_ftl_timeline_v1_event_proto_init()
	file_xyz_block_ftl_timeline_v1_timeline_proto_msgTypes[1].OneofWrappers = []any{}
	file_xyz_block_ftl_timeline_v1_timeline_proto_msgTypes[2].OneofWrappers = []any{}
	file_xyz_block_ftl_timeline_v1_timeline_proto_msgTypes[12].OneofWrappers = []any{}
	file_xyz_block_ftl_timeline_v1_timeline_proto_msgTypes[13].OneofWrappers = []any{}
	file_xyz_block_ftl_timeline_v1_timeline_proto_msgTypes[14].OneofWrappers = []any{}
	file_xyz_block_ftl_timeline_v1_timeline_proto_msgTypes[15].OneofWrappers = []any{}
	file_xyz_block_ftl_timeline_v1_timeline_proto_msgTypes[16].OneofWrappers = []any{
		(*GetTimelineRequest_Filter_LogLevel)(nil),
		(*GetTimelineRequest_Filter_Deployments)(nil),
		(*GetTimelineRequest_Filter_Requests)(nil),
		(*GetTimelineRequest_Filter_EventTypes)(nil),
		(*GetTimelineRequest_Filter_Time)(nil),
		(*GetTimelineRequest_Filter_Id)(nil),
		(*GetTimelineRequest_Filter_Call)(nil),
		(*GetTimelineRequest_Filter_Module)(nil),
	}
	file_xyz_block_ftl_timeline_v1_timeline_proto_msgTypes[17].OneofWrappers = []any{
		(*CreateEventsRequest_EventEntry_Log)(nil),
		(*CreateEventsRequest_EventEntry_Call)(nil),
		(*CreateEventsRequest_EventEntry_DeploymentCreated)(nil),
		(*CreateEventsRequest_EventEntry_DeploymentUpdated)(nil),
		(*CreateEventsRequest_EventEntry_Ingress)(nil),
		(*CreateEventsRequest_EventEntry_CronScheduled)(nil),
		(*CreateEventsRequest_EventEntry_AsyncExecute)(nil),
		(*CreateEventsRequest_EventEntry_PubsubPublish)(nil),
		(*CreateEventsRequest_EventEntry_PubsubConsume)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_xyz_block_ftl_timeline_v1_timeline_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_xyz_block_ftl_timeline_v1_timeline_proto_goTypes,
		DependencyIndexes: file_xyz_block_ftl_timeline_v1_timeline_proto_depIdxs,
		EnumInfos:         file_xyz_block_ftl_timeline_v1_timeline_proto_enumTypes,
		MessageInfos:      file_xyz_block_ftl_timeline_v1_timeline_proto_msgTypes,
	}.Build()
	File_xyz_block_ftl_timeline_v1_timeline_proto = out.File
	file_xyz_block_ftl_timeline_v1_timeline_proto_rawDesc = nil
	file_xyz_block_ftl_timeline_v1_timeline_proto_goTypes = nil
	file_xyz_block_ftl_timeline_v1_timeline_proto_depIdxs = nil
}
