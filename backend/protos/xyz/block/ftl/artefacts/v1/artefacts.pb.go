// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        (unknown)
// source: xyz/block/ftl/artefacts/v1/artefacts.proto

package artefactspb

import (
	v1 "github.com/TBD54566975/ftl/backend/protos/xyz/block/ftl/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UploadArtefactRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content []byte `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *UploadArtefactRequest) Reset() {
	*x = UploadArtefactRequest{}
	mi := &file_xyz_block_ftl_artefacts_v1_artefacts_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadArtefactRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadArtefactRequest) ProtoMessage() {}

func (x *UploadArtefactRequest) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_artefacts_v1_artefacts_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadArtefactRequest.ProtoReflect.Descriptor instead.
func (*UploadArtefactRequest) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_artefacts_v1_artefacts_proto_rawDescGZIP(), []int{0}
}

func (x *UploadArtefactRequest) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

type UploadArtefactResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Digest []byte `protobuf:"bytes,2,opt,name=digest,proto3" json:"digest,omitempty"`
}

func (x *UploadArtefactResponse) Reset() {
	*x = UploadArtefactResponse{}
	mi := &file_xyz_block_ftl_artefacts_v1_artefacts_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadArtefactResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadArtefactResponse) ProtoMessage() {}

func (x *UploadArtefactResponse) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_artefacts_v1_artefacts_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadArtefactResponse.ProtoReflect.Descriptor instead.
func (*UploadArtefactResponse) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_artefacts_v1_artefacts_proto_rawDescGZIP(), []int{1}
}

func (x *UploadArtefactResponse) GetDigest() []byte {
	if x != nil {
		return x.Digest
	}
	return nil
}

type DeploymentArtefact struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Digest     string `protobuf:"bytes,1,opt,name=digest,proto3" json:"digest,omitempty"`
	Path       string `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	Executable bool   `protobuf:"varint,3,opt,name=executable,proto3" json:"executable,omitempty"`
}

func (x *DeploymentArtefact) Reset() {
	*x = DeploymentArtefact{}
	mi := &file_xyz_block_ftl_artefacts_v1_artefacts_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeploymentArtefact) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeploymentArtefact) ProtoMessage() {}

func (x *DeploymentArtefact) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_artefacts_v1_artefacts_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeploymentArtefact.ProtoReflect.Descriptor instead.
func (*DeploymentArtefact) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_artefacts_v1_artefacts_proto_rawDescGZIP(), []int{2}
}

func (x *DeploymentArtefact) GetDigest() string {
	if x != nil {
		return x.Digest
	}
	return ""
}

func (x *DeploymentArtefact) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *DeploymentArtefact) GetExecutable() bool {
	if x != nil {
		return x.Executable
	}
	return false
}

type GetArtefactDiffsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientDigests []string `protobuf:"bytes,1,rep,name=client_digests,json=clientDigests,proto3" json:"client_digests,omitempty"`
}

func (x *GetArtefactDiffsRequest) Reset() {
	*x = GetArtefactDiffsRequest{}
	mi := &file_xyz_block_ftl_artefacts_v1_artefacts_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetArtefactDiffsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArtefactDiffsRequest) ProtoMessage() {}

func (x *GetArtefactDiffsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_artefacts_v1_artefacts_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArtefactDiffsRequest.ProtoReflect.Descriptor instead.
func (*GetArtefactDiffsRequest) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_artefacts_v1_artefacts_proto_rawDescGZIP(), []int{3}
}

func (x *GetArtefactDiffsRequest) GetClientDigests() []string {
	if x != nil {
		return x.ClientDigests
	}
	return nil
}

type GetArtefactDiffsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MissingDigests []string `protobuf:"bytes,1,rep,name=missing_digests,json=missingDigests,proto3" json:"missing_digests,omitempty"`
	// Artefacts that the client already has, and their path+executable status.
	ClientArtefacts []*DeploymentArtefact `protobuf:"bytes,2,rep,name=client_artefacts,json=clientArtefacts,proto3" json:"client_artefacts,omitempty"`
}

func (x *GetArtefactDiffsResponse) Reset() {
	*x = GetArtefactDiffsResponse{}
	mi := &file_xyz_block_ftl_artefacts_v1_artefacts_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetArtefactDiffsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArtefactDiffsResponse) ProtoMessage() {}

func (x *GetArtefactDiffsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_artefacts_v1_artefacts_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArtefactDiffsResponse.ProtoReflect.Descriptor instead.
func (*GetArtefactDiffsResponse) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_artefacts_v1_artefacts_proto_rawDescGZIP(), []int{4}
}

func (x *GetArtefactDiffsResponse) GetMissingDigests() []string {
	if x != nil {
		return x.MissingDigests
	}
	return nil
}

func (x *GetArtefactDiffsResponse) GetClientArtefacts() []*DeploymentArtefact {
	if x != nil {
		return x.ClientArtefacts
	}
	return nil
}

var File_xyz_block_ftl_artefacts_v1_artefacts_proto protoreflect.FileDescriptor

var file_xyz_block_ftl_artefacts_v1_artefacts_proto_rawDesc = []byte{
	0x0a, 0x2a, 0x78, 0x79, 0x7a, 0x2f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2f, 0x66, 0x74, 0x6c, 0x2f,
	0x61, 0x72, 0x74, 0x65, 0x66, 0x61, 0x63, 0x74, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x72, 0x74,
	0x65, 0x66, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1a, 0x78, 0x79,
	0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x61, 0x72, 0x74, 0x65,
	0x66, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x1a, 0x1a, 0x78, 0x79, 0x7a, 0x2f, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x2f, 0x66, 0x74, 0x6c, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x74, 0x6c, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x31, 0x0a, 0x15, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x72,
	0x74, 0x65, 0x66, 0x61, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x30, 0x0a, 0x16, 0x55, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x41, 0x72, 0x74, 0x65, 0x66, 0x61, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x06, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x22, 0x60, 0x0a, 0x12, 0x44, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x72, 0x74, 0x65, 0x66, 0x61, 0x63, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x1e, 0x0a, 0x0a, 0x65,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0a, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x22, 0x40, 0x0a, 0x17, 0x47,
	0x65, 0x74, 0x41, 0x72, 0x74, 0x65, 0x66, 0x61, 0x63, 0x74, 0x44, 0x69, 0x66, 0x66, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x5f, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x44, 0x69, 0x67, 0x65, 0x73, 0x74, 0x73, 0x22, 0x9e, 0x01,
	0x0a, 0x18, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x65, 0x66, 0x61, 0x63, 0x74, 0x44, 0x69, 0x66,
	0x66, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6e, 0x67, 0x5f, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0e, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x44, 0x69, 0x67, 0x65,
	0x73, 0x74, 0x73, 0x12, 0x59, 0x0a, 0x10, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x72,
	0x74, 0x65, 0x66, 0x61, 0x63, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e,
	0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x61, 0x72,
	0x74, 0x65, 0x66, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x72, 0x74, 0x65, 0x66, 0x61, 0x63, 0x74, 0x52, 0x0f, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x41, 0x72, 0x74, 0x65, 0x66, 0x61, 0x63, 0x74, 0x73, 0x32, 0xd7,
	0x01, 0x0a, 0x10, 0x41, 0x72, 0x74, 0x65, 0x66, 0x61, 0x63, 0x74, 0x73, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x4a, 0x0a, 0x04, 0x50, 0x69, 0x6e, 0x67, 0x12, 0x1d, 0x2e, 0x78, 0x79,
	0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x78, 0x79, 0x7a,
	0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x03, 0x90, 0x02, 0x01, 0x12,
	0x77, 0x0a, 0x0e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x72, 0x74, 0x65, 0x66, 0x61, 0x63,
	0x74, 0x12, 0x31, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74,
	0x6c, 0x2e, 0x61, 0x72, 0x74, 0x65, 0x66, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x72, 0x74, 0x65, 0x66, 0x61, 0x63, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x61, 0x72, 0x74, 0x65, 0x66, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x72, 0x74, 0x65, 0x66, 0x61, 0x63, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x54, 0x50, 0x01, 0x5a, 0x50, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x54, 0x42, 0x44, 0x35, 0x34, 0x35, 0x36,
	0x36, 0x39, 0x37, 0x35, 0x2f, 0x66, 0x74, 0x6c, 0x2f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x78, 0x79, 0x7a, 0x2f, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x2f, 0x66, 0x74, 0x6c, 0x2f, 0x61, 0x72, 0x74, 0x65, 0x66, 0x61, 0x63, 0x74, 0x73, 0x2f,
	0x76, 0x31, 0x3b, 0x61, 0x72, 0x74, 0x65, 0x66, 0x61, 0x63, 0x74, 0x73, 0x70, 0x62, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_xyz_block_ftl_artefacts_v1_artefacts_proto_rawDescOnce sync.Once
	file_xyz_block_ftl_artefacts_v1_artefacts_proto_rawDescData = file_xyz_block_ftl_artefacts_v1_artefacts_proto_rawDesc
)

func file_xyz_block_ftl_artefacts_v1_artefacts_proto_rawDescGZIP() []byte {
	file_xyz_block_ftl_artefacts_v1_artefacts_proto_rawDescOnce.Do(func() {
		file_xyz_block_ftl_artefacts_v1_artefacts_proto_rawDescData = protoimpl.X.CompressGZIP(file_xyz_block_ftl_artefacts_v1_artefacts_proto_rawDescData)
	})
	return file_xyz_block_ftl_artefacts_v1_artefacts_proto_rawDescData
}

var file_xyz_block_ftl_artefacts_v1_artefacts_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_xyz_block_ftl_artefacts_v1_artefacts_proto_goTypes = []any{
	(*UploadArtefactRequest)(nil),    // 0: xyz.block.ftl.artefacts.v1.UploadArtefactRequest
	(*UploadArtefactResponse)(nil),   // 1: xyz.block.ftl.artefacts.v1.UploadArtefactResponse
	(*DeploymentArtefact)(nil),       // 2: xyz.block.ftl.artefacts.v1.DeploymentArtefact
	(*GetArtefactDiffsRequest)(nil),  // 3: xyz.block.ftl.artefacts.v1.GetArtefactDiffsRequest
	(*GetArtefactDiffsResponse)(nil), // 4: xyz.block.ftl.artefacts.v1.GetArtefactDiffsResponse
	(*v1.PingRequest)(nil),           // 5: xyz.block.ftl.v1.PingRequest
	(*v1.PingResponse)(nil),          // 6: xyz.block.ftl.v1.PingResponse
}
var file_xyz_block_ftl_artefacts_v1_artefacts_proto_depIdxs = []int32{
	2, // 0: xyz.block.ftl.artefacts.v1.GetArtefactDiffsResponse.client_artefacts:type_name -> xyz.block.ftl.artefacts.v1.DeploymentArtefact
	5, // 1: xyz.block.ftl.artefacts.v1.ArtefactsService.Ping:input_type -> xyz.block.ftl.v1.PingRequest
	0, // 2: xyz.block.ftl.artefacts.v1.ArtefactsService.UploadArtefact:input_type -> xyz.block.ftl.artefacts.v1.UploadArtefactRequest
	6, // 3: xyz.block.ftl.artefacts.v1.ArtefactsService.Ping:output_type -> xyz.block.ftl.v1.PingResponse
	1, // 4: xyz.block.ftl.artefacts.v1.ArtefactsService.UploadArtefact:output_type -> xyz.block.ftl.artefacts.v1.UploadArtefactResponse
	3, // [3:5] is the sub-list for method output_type
	1, // [1:3] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_xyz_block_ftl_artefacts_v1_artefacts_proto_init() }
func file_xyz_block_ftl_artefacts_v1_artefacts_proto_init() {
	if File_xyz_block_ftl_artefacts_v1_artefacts_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_xyz_block_ftl_artefacts_v1_artefacts_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_xyz_block_ftl_artefacts_v1_artefacts_proto_goTypes,
		DependencyIndexes: file_xyz_block_ftl_artefacts_v1_artefacts_proto_depIdxs,
		MessageInfos:      file_xyz_block_ftl_artefacts_v1_artefacts_proto_msgTypes,
	}.Build()
	File_xyz_block_ftl_artefacts_v1_artefacts_proto = out.File
	file_xyz_block_ftl_artefacts_v1_artefacts_proto_rawDesc = nil
	file_xyz_block_ftl_artefacts_v1_artefacts_proto_goTypes = nil
	file_xyz_block_ftl_artefacts_v1_artefacts_proto_depIdxs = nil
}
