// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        (unknown)
// source: xyz/block/ftl/console/v1/console.proto

package pbconsole

import (
	v1 "github.com/TBD54566975/ftl/backend/protos/xyz/block/ftl/schema/v1"
	v11 "github.com/TBD54566975/ftl/backend/protos/xyz/block/ftl/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetEventsRequest_Order int32

const (
	GetEventsRequest_ORDER_UNSPECIFIED GetEventsRequest_Order = 0
	GetEventsRequest_ORDER_ASC         GetEventsRequest_Order = 1
	GetEventsRequest_ORDER_DESC        GetEventsRequest_Order = 2
)

// Enum value maps for GetEventsRequest_Order.
var (
	GetEventsRequest_Order_name = map[int32]string{
		0: "ORDER_UNSPECIFIED",
		1: "ORDER_ASC",
		2: "ORDER_DESC",
	}
	GetEventsRequest_Order_value = map[string]int32{
		"ORDER_UNSPECIFIED": 0,
		"ORDER_ASC":         1,
		"ORDER_DESC":        2,
	}
)

func (x GetEventsRequest_Order) Enum() *GetEventsRequest_Order {
	p := new(GetEventsRequest_Order)
	*p = x
	return p
}

func (x GetEventsRequest_Order) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetEventsRequest_Order) Descriptor() protoreflect.EnumDescriptor {
	return file_xyz_block_ftl_console_v1_console_proto_enumTypes[0].Descriptor()
}

func (GetEventsRequest_Order) Type() protoreflect.EnumType {
	return &file_xyz_block_ftl_console_v1_console_proto_enumTypes[0]
}

func (x GetEventsRequest_Order) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetEventsRequest_Order.Descriptor instead.
func (GetEventsRequest_Order) EnumDescriptor() ([]byte, []int) {
	return file_xyz_block_ftl_console_v1_console_proto_rawDescGZIP(), []int{15, 0}
}

type Config struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Config     *v1.Config `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
	References []*v1.Ref  `protobuf:"bytes,2,rep,name=references,proto3" json:"references,omitempty"`
}

func (x *Config) Reset() {
	*x = Config{}
	mi := &file_xyz_block_ftl_console_v1_console_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config) ProtoMessage() {}

func (x *Config) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_console_v1_console_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config.ProtoReflect.Descriptor instead.
func (*Config) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_console_v1_console_proto_rawDescGZIP(), []int{0}
}

func (x *Config) GetConfig() *v1.Config {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *Config) GetReferences() []*v1.Ref {
	if x != nil {
		return x.References
	}
	return nil
}

type Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data       *v1.Data  `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Schema     string    `protobuf:"bytes,2,opt,name=schema,proto3" json:"schema,omitempty"`
	References []*v1.Ref `protobuf:"bytes,3,rep,name=references,proto3" json:"references,omitempty"`
}

func (x *Data) Reset() {
	*x = Data{}
	mi := &file_xyz_block_ftl_console_v1_console_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Data) ProtoMessage() {}

func (x *Data) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_console_v1_console_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Data.ProtoReflect.Descriptor instead.
func (*Data) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_console_v1_console_proto_rawDescGZIP(), []int{1}
}

func (x *Data) GetData() *v1.Data {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *Data) GetSchema() string {
	if x != nil {
		return x.Schema
	}
	return ""
}

func (x *Data) GetReferences() []*v1.Ref {
	if x != nil {
		return x.References
	}
	return nil
}

type Database struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Database   *v1.Database `protobuf:"bytes,1,opt,name=database,proto3" json:"database,omitempty"`
	References []*v1.Ref    `protobuf:"bytes,2,rep,name=references,proto3" json:"references,omitempty"`
}

func (x *Database) Reset() {
	*x = Database{}
	mi := &file_xyz_block_ftl_console_v1_console_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Database) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Database) ProtoMessage() {}

func (x *Database) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_console_v1_console_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Database.ProtoReflect.Descriptor instead.
func (*Database) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_console_v1_console_proto_rawDescGZIP(), []int{2}
}

func (x *Database) GetDatabase() *v1.Database {
	if x != nil {
		return x.Database
	}
	return nil
}

func (x *Database) GetReferences() []*v1.Ref {
	if x != nil {
		return x.References
	}
	return nil
}

type Enum struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enum       *v1.Enum  `protobuf:"bytes,1,opt,name=enum,proto3" json:"enum,omitempty"`
	References []*v1.Ref `protobuf:"bytes,2,rep,name=references,proto3" json:"references,omitempty"`
}

func (x *Enum) Reset() {
	*x = Enum{}
	mi := &file_xyz_block_ftl_console_v1_console_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Enum) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Enum) ProtoMessage() {}

func (x *Enum) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_console_v1_console_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Enum.ProtoReflect.Descriptor instead.
func (*Enum) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_console_v1_console_proto_rawDescGZIP(), []int{3}
}

func (x *Enum) GetEnum() *v1.Enum {
	if x != nil {
		return x.Enum
	}
	return nil
}

func (x *Enum) GetReferences() []*v1.Ref {
	if x != nil {
		return x.References
	}
	return nil
}

type Topic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Topic      *v1.Topic `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	References []*v1.Ref `protobuf:"bytes,2,rep,name=references,proto3" json:"references,omitempty"`
}

func (x *Topic) Reset() {
	*x = Topic{}
	mi := &file_xyz_block_ftl_console_v1_console_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Topic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Topic) ProtoMessage() {}

func (x *Topic) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_console_v1_console_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Topic.ProtoReflect.Descriptor instead.
func (*Topic) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_console_v1_console_proto_rawDescGZIP(), []int{4}
}

func (x *Topic) GetTopic() *v1.Topic {
	if x != nil {
		return x.Topic
	}
	return nil
}

func (x *Topic) GetReferences() []*v1.Ref {
	if x != nil {
		return x.References
	}
	return nil
}

type TypeAlias struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Typealias  *v1.TypeAlias `protobuf:"bytes,1,opt,name=typealias,proto3" json:"typealias,omitempty"`
	References []*v1.Ref     `protobuf:"bytes,2,rep,name=references,proto3" json:"references,omitempty"`
}

func (x *TypeAlias) Reset() {
	*x = TypeAlias{}
	mi := &file_xyz_block_ftl_console_v1_console_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TypeAlias) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TypeAlias) ProtoMessage() {}

func (x *TypeAlias) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_console_v1_console_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TypeAlias.ProtoReflect.Descriptor instead.
func (*TypeAlias) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_console_v1_console_proto_rawDescGZIP(), []int{5}
}

func (x *TypeAlias) GetTypealias() *v1.TypeAlias {
	if x != nil {
		return x.Typealias
	}
	return nil
}

func (x *TypeAlias) GetReferences() []*v1.Ref {
	if x != nil {
		return x.References
	}
	return nil
}

type Secret struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Secret     *v1.Secret `protobuf:"bytes,1,opt,name=secret,proto3" json:"secret,omitempty"`
	References []*v1.Ref  `protobuf:"bytes,2,rep,name=references,proto3" json:"references,omitempty"`
}

func (x *Secret) Reset() {
	*x = Secret{}
	mi := &file_xyz_block_ftl_console_v1_console_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Secret) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Secret) ProtoMessage() {}

func (x *Secret) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_console_v1_console_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Secret.ProtoReflect.Descriptor instead.
func (*Secret) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_console_v1_console_proto_rawDescGZIP(), []int{6}
}

func (x *Secret) GetSecret() *v1.Secret {
	if x != nil {
		return x.Secret
	}
	return nil
}

func (x *Secret) GetReferences() []*v1.Ref {
	if x != nil {
		return x.References
	}
	return nil
}

type Verb struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Verb              *v1.Verb  `protobuf:"bytes,1,opt,name=verb,proto3" json:"verb,omitempty"`
	Schema            string    `protobuf:"bytes,2,opt,name=schema,proto3" json:"schema,omitempty"`
	JsonRequestSchema string    `protobuf:"bytes,3,opt,name=json_request_schema,json=jsonRequestSchema,proto3" json:"json_request_schema,omitempty"`
	References        []*v1.Ref `protobuf:"bytes,4,rep,name=references,proto3" json:"references,omitempty"`
}

func (x *Verb) Reset() {
	*x = Verb{}
	mi := &file_xyz_block_ftl_console_v1_console_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Verb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Verb) ProtoMessage() {}

func (x *Verb) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_console_v1_console_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Verb.ProtoReflect.Descriptor instead.
func (*Verb) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_console_v1_console_proto_rawDescGZIP(), []int{7}
}

func (x *Verb) GetVerb() *v1.Verb {
	if x != nil {
		return x.Verb
	}
	return nil
}

func (x *Verb) GetSchema() string {
	if x != nil {
		return x.Schema
	}
	return ""
}

func (x *Verb) GetJsonRequestSchema() string {
	if x != nil {
		return x.JsonRequestSchema
	}
	return ""
}

func (x *Verb) GetReferences() []*v1.Ref {
	if x != nil {
		return x.References
	}
	return nil
}

type Module struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name          string       `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	DeploymentKey string       `protobuf:"bytes,2,opt,name=deployment_key,json=deploymentKey,proto3" json:"deployment_key,omitempty"`
	Language      string       `protobuf:"bytes,3,opt,name=language,proto3" json:"language,omitempty"`
	Schema        string       `protobuf:"bytes,4,opt,name=schema,proto3" json:"schema,omitempty"`
	Verbs         []*Verb      `protobuf:"bytes,5,rep,name=verbs,proto3" json:"verbs,omitempty"`
	Data          []*Data      `protobuf:"bytes,6,rep,name=data,proto3" json:"data,omitempty"`
	Secrets       []*Secret    `protobuf:"bytes,7,rep,name=secrets,proto3" json:"secrets,omitempty"`
	Configs       []*Config    `protobuf:"bytes,8,rep,name=configs,proto3" json:"configs,omitempty"`
	Databases     []*Database  `protobuf:"bytes,9,rep,name=databases,proto3" json:"databases,omitempty"`
	Enums         []*Enum      `protobuf:"bytes,10,rep,name=enums,proto3" json:"enums,omitempty"`
	Topics        []*Topic     `protobuf:"bytes,11,rep,name=topics,proto3" json:"topics,omitempty"`
	Typealiases   []*TypeAlias `protobuf:"bytes,12,rep,name=typealiases,proto3" json:"typealiases,omitempty"`
}

func (x *Module) Reset() {
	*x = Module{}
	mi := &file_xyz_block_ftl_console_v1_console_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Module) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Module) ProtoMessage() {}

func (x *Module) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_console_v1_console_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Module.ProtoReflect.Descriptor instead.
func (*Module) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_console_v1_console_proto_rawDescGZIP(), []int{8}
}

func (x *Module) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Module) GetDeploymentKey() string {
	if x != nil {
		return x.DeploymentKey
	}
	return ""
}

func (x *Module) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *Module) GetSchema() string {
	if x != nil {
		return x.Schema
	}
	return ""
}

func (x *Module) GetVerbs() []*Verb {
	if x != nil {
		return x.Verbs
	}
	return nil
}

func (x *Module) GetData() []*Data {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *Module) GetSecrets() []*Secret {
	if x != nil {
		return x.Secrets
	}
	return nil
}

func (x *Module) GetConfigs() []*Config {
	if x != nil {
		return x.Configs
	}
	return nil
}

func (x *Module) GetDatabases() []*Database {
	if x != nil {
		return x.Databases
	}
	return nil
}

func (x *Module) GetEnums() []*Enum {
	if x != nil {
		return x.Enums
	}
	return nil
}

func (x *Module) GetTopics() []*Topic {
	if x != nil {
		return x.Topics
	}
	return nil
}

func (x *Module) GetTypealiases() []*TypeAlias {
	if x != nil {
		return x.Typealiases
	}
	return nil
}

type TopologyGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Modules []string `protobuf:"bytes,1,rep,name=modules,proto3" json:"modules,omitempty"`
}

func (x *TopologyGroup) Reset() {
	*x = TopologyGroup{}
	mi := &file_xyz_block_ftl_console_v1_console_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TopologyGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopologyGroup) ProtoMessage() {}

func (x *TopologyGroup) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_console_v1_console_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopologyGroup.ProtoReflect.Descriptor instead.
func (*TopologyGroup) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_console_v1_console_proto_rawDescGZIP(), []int{9}
}

func (x *TopologyGroup) GetModules() []string {
	if x != nil {
		return x.Modules
	}
	return nil
}

type Topology struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Levels []*TopologyGroup `protobuf:"bytes,1,rep,name=levels,proto3" json:"levels,omitempty"`
}

func (x *Topology) Reset() {
	*x = Topology{}
	mi := &file_xyz_block_ftl_console_v1_console_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Topology) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Topology) ProtoMessage() {}

func (x *Topology) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_console_v1_console_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Topology.ProtoReflect.Descriptor instead.
func (*Topology) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_console_v1_console_proto_rawDescGZIP(), []int{10}
}

func (x *Topology) GetLevels() []*TopologyGroup {
	if x != nil {
		return x.Levels
	}
	return nil
}

type GetModulesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetModulesRequest) Reset() {
	*x = GetModulesRequest{}
	mi := &file_xyz_block_ftl_console_v1_console_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetModulesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetModulesRequest) ProtoMessage() {}

func (x *GetModulesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_console_v1_console_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetModulesRequest.ProtoReflect.Descriptor instead.
func (*GetModulesRequest) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_console_v1_console_proto_rawDescGZIP(), []int{11}
}

type GetModulesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Modules  []*Module `protobuf:"bytes,1,rep,name=modules,proto3" json:"modules,omitempty"`
	Topology *Topology `protobuf:"bytes,2,opt,name=topology,proto3" json:"topology,omitempty"`
}

func (x *GetModulesResponse) Reset() {
	*x = GetModulesResponse{}
	mi := &file_xyz_block_ftl_console_v1_console_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetModulesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetModulesResponse) ProtoMessage() {}

func (x *GetModulesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_console_v1_console_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetModulesResponse.ProtoReflect.Descriptor instead.
func (*GetModulesResponse) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_console_v1_console_proto_rawDescGZIP(), []int{12}
}

func (x *GetModulesResponse) GetModules() []*Module {
	if x != nil {
		return x.Modules
	}
	return nil
}

func (x *GetModulesResponse) GetTopology() *Topology {
	if x != nil {
		return x.Topology
	}
	return nil
}

type StreamModulesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StreamModulesRequest) Reset() {
	*x = StreamModulesRequest{}
	mi := &file_xyz_block_ftl_console_v1_console_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamModulesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamModulesRequest) ProtoMessage() {}

func (x *StreamModulesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_console_v1_console_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamModulesRequest.ProtoReflect.Descriptor instead.
func (*StreamModulesRequest) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_console_v1_console_proto_rawDescGZIP(), []int{13}
}

type StreamModulesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Modules  []*Module `protobuf:"bytes,1,rep,name=modules,proto3" json:"modules,omitempty"`
	Topology *Topology `protobuf:"bytes,2,opt,name=topology,proto3" json:"topology,omitempty"`
}

func (x *StreamModulesResponse) Reset() {
	*x = StreamModulesResponse{}
	mi := &file_xyz_block_ftl_console_v1_console_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamModulesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamModulesResponse) ProtoMessage() {}

func (x *StreamModulesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_console_v1_console_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamModulesResponse.ProtoReflect.Descriptor instead.
func (*StreamModulesResponse) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_console_v1_console_proto_rawDescGZIP(), []int{14}
}

func (x *StreamModulesResponse) GetModules() []*Module {
	if x != nil {
		return x.Modules
	}
	return nil
}

func (x *StreamModulesResponse) GetTopology() *Topology {
	if x != nil {
		return x.Topology
	}
	return nil
}

// Query for events.
type GetEventsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filters []*GetEventsRequest_Filter `protobuf:"bytes,1,rep,name=filters,proto3" json:"filters,omitempty"`
	Limit   int32                      `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Order   GetEventsRequest_Order     `protobuf:"varint,3,opt,name=order,proto3,enum=xyz.block.ftl.console.v1.GetEventsRequest_Order" json:"order,omitempty"`
}

func (x *GetEventsRequest) Reset() {
	*x = GetEventsRequest{}
	mi := &file_xyz_block_ftl_console_v1_console_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetEventsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEventsRequest) ProtoMessage() {}

func (x *GetEventsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_console_v1_console_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEventsRequest.ProtoReflect.Descriptor instead.
func (*GetEventsRequest) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_console_v1_console_proto_rawDescGZIP(), []int{15}
}

func (x *GetEventsRequest) GetFilters() []*GetEventsRequest_Filter {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *GetEventsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetEventsRequest) GetOrder() GetEventsRequest_Order {
	if x != nil {
		return x.Order
	}
	return GetEventsRequest_ORDER_UNSPECIFIED
}

type GetEventsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Events []*v11.Event `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
	// For pagination, this cursor is where we should start our next query
	Cursor *int64 `protobuf:"varint,2,opt,name=cursor,proto3,oneof" json:"cursor,omitempty"`
}

func (x *GetEventsResponse) Reset() {
	*x = GetEventsResponse{}
	mi := &file_xyz_block_ftl_console_v1_console_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetEventsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEventsResponse) ProtoMessage() {}

func (x *GetEventsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_console_v1_console_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEventsResponse.ProtoReflect.Descriptor instead.
func (*GetEventsResponse) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_console_v1_console_proto_rawDescGZIP(), []int{16}
}

func (x *GetEventsResponse) GetEvents() []*v11.Event {
	if x != nil {
		return x.Events
	}
	return nil
}

func (x *GetEventsResponse) GetCursor() int64 {
	if x != nil && x.Cursor != nil {
		return *x.Cursor
	}
	return 0
}

type GetConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Module *string `protobuf:"bytes,2,opt,name=module,proto3,oneof" json:"module,omitempty"`
}

func (x *GetConfigRequest) Reset() {
	*x = GetConfigRequest{}
	mi := &file_xyz_block_ftl_console_v1_console_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConfigRequest) ProtoMessage() {}

func (x *GetConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_console_v1_console_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConfigRequest.ProtoReflect.Descriptor instead.
func (*GetConfigRequest) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_console_v1_console_proto_rawDescGZIP(), []int{17}
}

func (x *GetConfigRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetConfigRequest) GetModule() string {
	if x != nil && x.Module != nil {
		return *x.Module
	}
	return ""
}

type GetConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []byte `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *GetConfigResponse) Reset() {
	*x = GetConfigResponse{}
	mi := &file_xyz_block_ftl_console_v1_console_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConfigResponse) ProtoMessage() {}

func (x *GetConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_console_v1_console_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConfigResponse.ProtoReflect.Descriptor instead.
func (*GetConfigResponse) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_console_v1_console_proto_rawDescGZIP(), []int{18}
}

func (x *GetConfigResponse) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type SetConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Module *string `protobuf:"bytes,2,opt,name=module,proto3,oneof" json:"module,omitempty"`
	Value  []byte  `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *SetConfigRequest) Reset() {
	*x = SetConfigRequest{}
	mi := &file_xyz_block_ftl_console_v1_console_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetConfigRequest) ProtoMessage() {}

func (x *SetConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_console_v1_console_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetConfigRequest.ProtoReflect.Descriptor instead.
func (*SetConfigRequest) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_console_v1_console_proto_rawDescGZIP(), []int{19}
}

func (x *SetConfigRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SetConfigRequest) GetModule() string {
	if x != nil && x.Module != nil {
		return *x.Module
	}
	return ""
}

func (x *SetConfigRequest) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type SetConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []byte `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *SetConfigResponse) Reset() {
	*x = SetConfigResponse{}
	mi := &file_xyz_block_ftl_console_v1_console_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetConfigResponse) ProtoMessage() {}

func (x *SetConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_console_v1_console_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetConfigResponse.ProtoReflect.Descriptor instead.
func (*SetConfigResponse) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_console_v1_console_proto_rawDescGZIP(), []int{20}
}

func (x *SetConfigResponse) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type GetSecretRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Module *string `protobuf:"bytes,2,opt,name=module,proto3,oneof" json:"module,omitempty"`
}

func (x *GetSecretRequest) Reset() {
	*x = GetSecretRequest{}
	mi := &file_xyz_block_ftl_console_v1_console_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSecretRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSecretRequest) ProtoMessage() {}

func (x *GetSecretRequest) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_console_v1_console_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSecretRequest.ProtoReflect.Descriptor instead.
func (*GetSecretRequest) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_console_v1_console_proto_rawDescGZIP(), []int{21}
}

func (x *GetSecretRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetSecretRequest) GetModule() string {
	if x != nil && x.Module != nil {
		return *x.Module
	}
	return ""
}

type GetSecretResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []byte `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *GetSecretResponse) Reset() {
	*x = GetSecretResponse{}
	mi := &file_xyz_block_ftl_console_v1_console_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSecretResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSecretResponse) ProtoMessage() {}

func (x *GetSecretResponse) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_console_v1_console_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSecretResponse.ProtoReflect.Descriptor instead.
func (*GetSecretResponse) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_console_v1_console_proto_rawDescGZIP(), []int{22}
}

func (x *GetSecretResponse) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type SetSecretRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Module *string `protobuf:"bytes,2,opt,name=module,proto3,oneof" json:"module,omitempty"`
	Value  []byte  `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *SetSecretRequest) Reset() {
	*x = SetSecretRequest{}
	mi := &file_xyz_block_ftl_console_v1_console_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetSecretRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetSecretRequest) ProtoMessage() {}

func (x *SetSecretRequest) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_console_v1_console_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetSecretRequest.ProtoReflect.Descriptor instead.
func (*SetSecretRequest) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_console_v1_console_proto_rawDescGZIP(), []int{23}
}

func (x *SetSecretRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SetSecretRequest) GetModule() string {
	if x != nil && x.Module != nil {
		return *x.Module
	}
	return ""
}

func (x *SetSecretRequest) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type SetSecretResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []byte `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *SetSecretResponse) Reset() {
	*x = SetSecretResponse{}
	mi := &file_xyz_block_ftl_console_v1_console_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetSecretResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetSecretResponse) ProtoMessage() {}

func (x *SetSecretResponse) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_console_v1_console_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetSecretResponse.ProtoReflect.Descriptor instead.
func (*SetSecretResponse) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_console_v1_console_proto_rawDescGZIP(), []int{24}
}

func (x *SetSecretResponse) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type StreamEventsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UpdateInterval *durationpb.Duration `protobuf:"bytes,1,opt,name=update_interval,json=updateInterval,proto3,oneof" json:"update_interval,omitempty"`
	Query          *GetEventsRequest    `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"`
}

func (x *StreamEventsRequest) Reset() {
	*x = StreamEventsRequest{}
	mi := &file_xyz_block_ftl_console_v1_console_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamEventsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamEventsRequest) ProtoMessage() {}

func (x *StreamEventsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_console_v1_console_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamEventsRequest.ProtoReflect.Descriptor instead.
func (*StreamEventsRequest) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_console_v1_console_proto_rawDescGZIP(), []int{25}
}

func (x *StreamEventsRequest) GetUpdateInterval() *durationpb.Duration {
	if x != nil {
		return x.UpdateInterval
	}
	return nil
}

func (x *StreamEventsRequest) GetQuery() *GetEventsRequest {
	if x != nil {
		return x.Query
	}
	return nil
}

type StreamEventsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Events []*v11.Event `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
}

func (x *StreamEventsResponse) Reset() {
	*x = StreamEventsResponse{}
	mi := &file_xyz_block_ftl_console_v1_console_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamEventsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamEventsResponse) ProtoMessage() {}

func (x *StreamEventsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_console_v1_console_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamEventsResponse.ProtoReflect.Descriptor instead.
func (*StreamEventsResponse) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_console_v1_console_proto_rawDescGZIP(), []int{26}
}

func (x *StreamEventsResponse) GetEvents() []*v11.Event {
	if x != nil {
		return x.Events
	}
	return nil
}

// Limit the number of events returned.
type GetEventsRequest_LimitFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit int32 `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *GetEventsRequest_LimitFilter) Reset() {
	*x = GetEventsRequest_LimitFilter{}
	mi := &file_xyz_block_ftl_console_v1_console_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetEventsRequest_LimitFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEventsRequest_LimitFilter) ProtoMessage() {}

func (x *GetEventsRequest_LimitFilter) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_console_v1_console_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEventsRequest_LimitFilter.ProtoReflect.Descriptor instead.
func (*GetEventsRequest_LimitFilter) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_console_v1_console_proto_rawDescGZIP(), []int{15, 0}
}

func (x *GetEventsRequest_LimitFilter) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

// Filters events by log level.
type GetEventsRequest_LogLevelFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LogLevel v11.LogLevel `protobuf:"varint,1,opt,name=log_level,json=logLevel,proto3,enum=xyz.block.ftl.v1.LogLevel" json:"log_level,omitempty"`
}

func (x *GetEventsRequest_LogLevelFilter) Reset() {
	*x = GetEventsRequest_LogLevelFilter{}
	mi := &file_xyz_block_ftl_console_v1_console_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetEventsRequest_LogLevelFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEventsRequest_LogLevelFilter) ProtoMessage() {}

func (x *GetEventsRequest_LogLevelFilter) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_console_v1_console_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEventsRequest_LogLevelFilter.ProtoReflect.Descriptor instead.
func (*GetEventsRequest_LogLevelFilter) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_console_v1_console_proto_rawDescGZIP(), []int{15, 1}
}

func (x *GetEventsRequest_LogLevelFilter) GetLogLevel() v11.LogLevel {
	if x != nil {
		return x.LogLevel
	}
	return v11.LogLevel(0)
}

// Filters events by deployment key.
type GetEventsRequest_DeploymentFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Deployments []string `protobuf:"bytes,1,rep,name=deployments,proto3" json:"deployments,omitempty"`
}

func (x *GetEventsRequest_DeploymentFilter) Reset() {
	*x = GetEventsRequest_DeploymentFilter{}
	mi := &file_xyz_block_ftl_console_v1_console_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetEventsRequest_DeploymentFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEventsRequest_DeploymentFilter) ProtoMessage() {}

func (x *GetEventsRequest_DeploymentFilter) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_console_v1_console_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEventsRequest_DeploymentFilter.ProtoReflect.Descriptor instead.
func (*GetEventsRequest_DeploymentFilter) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_console_v1_console_proto_rawDescGZIP(), []int{15, 2}
}

func (x *GetEventsRequest_DeploymentFilter) GetDeployments() []string {
	if x != nil {
		return x.Deployments
	}
	return nil
}

// Filters events by request key.
type GetEventsRequest_RequestFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Requests []string `protobuf:"bytes,1,rep,name=requests,proto3" json:"requests,omitempty"`
}

func (x *GetEventsRequest_RequestFilter) Reset() {
	*x = GetEventsRequest_RequestFilter{}
	mi := &file_xyz_block_ftl_console_v1_console_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetEventsRequest_RequestFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEventsRequest_RequestFilter) ProtoMessage() {}

func (x *GetEventsRequest_RequestFilter) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_console_v1_console_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEventsRequest_RequestFilter.ProtoReflect.Descriptor instead.
func (*GetEventsRequest_RequestFilter) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_console_v1_console_proto_rawDescGZIP(), []int{15, 3}
}

func (x *GetEventsRequest_RequestFilter) GetRequests() []string {
	if x != nil {
		return x.Requests
	}
	return nil
}

// Filters events by event type.
type GetEventsRequest_EventTypeFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventTypes []v11.EventType `protobuf:"varint,1,rep,packed,name=event_types,json=eventTypes,proto3,enum=xyz.block.ftl.v1.EventType" json:"event_types,omitempty"`
}

func (x *GetEventsRequest_EventTypeFilter) Reset() {
	*x = GetEventsRequest_EventTypeFilter{}
	mi := &file_xyz_block_ftl_console_v1_console_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetEventsRequest_EventTypeFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEventsRequest_EventTypeFilter) ProtoMessage() {}

func (x *GetEventsRequest_EventTypeFilter) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_console_v1_console_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEventsRequest_EventTypeFilter.ProtoReflect.Descriptor instead.
func (*GetEventsRequest_EventTypeFilter) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_console_v1_console_proto_rawDescGZIP(), []int{15, 4}
}

func (x *GetEventsRequest_EventTypeFilter) GetEventTypes() []v11.EventType {
	if x != nil {
		return x.EventTypes
	}
	return nil
}

// Filters events by time.
//
// Either end of the time range can be omitted to indicate no bound.
type GetEventsRequest_TimeFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OlderThan *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=older_than,json=olderThan,proto3,oneof" json:"older_than,omitempty"`
	NewerThan *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=newer_than,json=newerThan,proto3,oneof" json:"newer_than,omitempty"`
}

func (x *GetEventsRequest_TimeFilter) Reset() {
	*x = GetEventsRequest_TimeFilter{}
	mi := &file_xyz_block_ftl_console_v1_console_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetEventsRequest_TimeFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEventsRequest_TimeFilter) ProtoMessage() {}

func (x *GetEventsRequest_TimeFilter) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_console_v1_console_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEventsRequest_TimeFilter.ProtoReflect.Descriptor instead.
func (*GetEventsRequest_TimeFilter) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_console_v1_console_proto_rawDescGZIP(), []int{15, 5}
}

func (x *GetEventsRequest_TimeFilter) GetOlderThan() *timestamppb.Timestamp {
	if x != nil {
		return x.OlderThan
	}
	return nil
}

func (x *GetEventsRequest_TimeFilter) GetNewerThan() *timestamppb.Timestamp {
	if x != nil {
		return x.NewerThan
	}
	return nil
}

// Filters events by ID.
//
// Either end of the ID range can be omitted to indicate no bound.
type GetEventsRequest_IDFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LowerThan  *int64 `protobuf:"varint,1,opt,name=lower_than,json=lowerThan,proto3,oneof" json:"lower_than,omitempty"`
	HigherThan *int64 `protobuf:"varint,2,opt,name=higher_than,json=higherThan,proto3,oneof" json:"higher_than,omitempty"`
}

func (x *GetEventsRequest_IDFilter) Reset() {
	*x = GetEventsRequest_IDFilter{}
	mi := &file_xyz_block_ftl_console_v1_console_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetEventsRequest_IDFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEventsRequest_IDFilter) ProtoMessage() {}

func (x *GetEventsRequest_IDFilter) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_console_v1_console_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEventsRequest_IDFilter.ProtoReflect.Descriptor instead.
func (*GetEventsRequest_IDFilter) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_console_v1_console_proto_rawDescGZIP(), []int{15, 6}
}

func (x *GetEventsRequest_IDFilter) GetLowerThan() int64 {
	if x != nil && x.LowerThan != nil {
		return *x.LowerThan
	}
	return 0
}

func (x *GetEventsRequest_IDFilter) GetHigherThan() int64 {
	if x != nil && x.HigherThan != nil {
		return *x.HigherThan
	}
	return 0
}

// Filters events by call.
type GetEventsRequest_CallFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DestModule   string  `protobuf:"bytes,1,opt,name=dest_module,json=destModule,proto3" json:"dest_module,omitempty"`
	DestVerb     *string `protobuf:"bytes,2,opt,name=dest_verb,json=destVerb,proto3,oneof" json:"dest_verb,omitempty"`
	SourceModule *string `protobuf:"bytes,3,opt,name=source_module,json=sourceModule,proto3,oneof" json:"source_module,omitempty"`
}

func (x *GetEventsRequest_CallFilter) Reset() {
	*x = GetEventsRequest_CallFilter{}
	mi := &file_xyz_block_ftl_console_v1_console_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetEventsRequest_CallFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEventsRequest_CallFilter) ProtoMessage() {}

func (x *GetEventsRequest_CallFilter) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_console_v1_console_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEventsRequest_CallFilter.ProtoReflect.Descriptor instead.
func (*GetEventsRequest_CallFilter) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_console_v1_console_proto_rawDescGZIP(), []int{15, 7}
}

func (x *GetEventsRequest_CallFilter) GetDestModule() string {
	if x != nil {
		return x.DestModule
	}
	return ""
}

func (x *GetEventsRequest_CallFilter) GetDestVerb() string {
	if x != nil && x.DestVerb != nil {
		return *x.DestVerb
	}
	return ""
}

func (x *GetEventsRequest_CallFilter) GetSourceModule() string {
	if x != nil && x.SourceModule != nil {
		return *x.SourceModule
	}
	return ""
}

type GetEventsRequest_ModuleFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Module string  `protobuf:"bytes,1,opt,name=module,proto3" json:"module,omitempty"`
	Verb   *string `protobuf:"bytes,2,opt,name=verb,proto3,oneof" json:"verb,omitempty"`
}

func (x *GetEventsRequest_ModuleFilter) Reset() {
	*x = GetEventsRequest_ModuleFilter{}
	mi := &file_xyz_block_ftl_console_v1_console_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetEventsRequest_ModuleFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEventsRequest_ModuleFilter) ProtoMessage() {}

func (x *GetEventsRequest_ModuleFilter) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_console_v1_console_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEventsRequest_ModuleFilter.ProtoReflect.Descriptor instead.
func (*GetEventsRequest_ModuleFilter) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_console_v1_console_proto_rawDescGZIP(), []int{15, 8}
}

func (x *GetEventsRequest_ModuleFilter) GetModule() string {
	if x != nil {
		return x.Module
	}
	return ""
}

func (x *GetEventsRequest_ModuleFilter) GetVerb() string {
	if x != nil && x.Verb != nil {
		return *x.Verb
	}
	return ""
}

type GetEventsRequest_Filter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// These map 1:1 with filters in backend/controller/internal/dal/events.go
	//
	// Types that are assignable to Filter:
	//
	//	*GetEventsRequest_Filter_Limit
	//	*GetEventsRequest_Filter_LogLevel
	//	*GetEventsRequest_Filter_Deployments
	//	*GetEventsRequest_Filter_Requests
	//	*GetEventsRequest_Filter_EventTypes
	//	*GetEventsRequest_Filter_Time
	//	*GetEventsRequest_Filter_Id
	//	*GetEventsRequest_Filter_Call
	//	*GetEventsRequest_Filter_Module
	Filter isGetEventsRequest_Filter_Filter `protobuf_oneof:"filter"`
}

func (x *GetEventsRequest_Filter) Reset() {
	*x = GetEventsRequest_Filter{}
	mi := &file_xyz_block_ftl_console_v1_console_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetEventsRequest_Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEventsRequest_Filter) ProtoMessage() {}

func (x *GetEventsRequest_Filter) ProtoReflect() protoreflect.Message {
	mi := &file_xyz_block_ftl_console_v1_console_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEventsRequest_Filter.ProtoReflect.Descriptor instead.
func (*GetEventsRequest_Filter) Descriptor() ([]byte, []int) {
	return file_xyz_block_ftl_console_v1_console_proto_rawDescGZIP(), []int{15, 9}
}

func (m *GetEventsRequest_Filter) GetFilter() isGetEventsRequest_Filter_Filter {
	if m != nil {
		return m.Filter
	}
	return nil
}

func (x *GetEventsRequest_Filter) GetLimit() *GetEventsRequest_LimitFilter {
	if x, ok := x.GetFilter().(*GetEventsRequest_Filter_Limit); ok {
		return x.Limit
	}
	return nil
}

func (x *GetEventsRequest_Filter) GetLogLevel() *GetEventsRequest_LogLevelFilter {
	if x, ok := x.GetFilter().(*GetEventsRequest_Filter_LogLevel); ok {
		return x.LogLevel
	}
	return nil
}

func (x *GetEventsRequest_Filter) GetDeployments() *GetEventsRequest_DeploymentFilter {
	if x, ok := x.GetFilter().(*GetEventsRequest_Filter_Deployments); ok {
		return x.Deployments
	}
	return nil
}

func (x *GetEventsRequest_Filter) GetRequests() *GetEventsRequest_RequestFilter {
	if x, ok := x.GetFilter().(*GetEventsRequest_Filter_Requests); ok {
		return x.Requests
	}
	return nil
}

func (x *GetEventsRequest_Filter) GetEventTypes() *GetEventsRequest_EventTypeFilter {
	if x, ok := x.GetFilter().(*GetEventsRequest_Filter_EventTypes); ok {
		return x.EventTypes
	}
	return nil
}

func (x *GetEventsRequest_Filter) GetTime() *GetEventsRequest_TimeFilter {
	if x, ok := x.GetFilter().(*GetEventsRequest_Filter_Time); ok {
		return x.Time
	}
	return nil
}

func (x *GetEventsRequest_Filter) GetId() *GetEventsRequest_IDFilter {
	if x, ok := x.GetFilter().(*GetEventsRequest_Filter_Id); ok {
		return x.Id
	}
	return nil
}

func (x *GetEventsRequest_Filter) GetCall() *GetEventsRequest_CallFilter {
	if x, ok := x.GetFilter().(*GetEventsRequest_Filter_Call); ok {
		return x.Call
	}
	return nil
}

func (x *GetEventsRequest_Filter) GetModule() *GetEventsRequest_ModuleFilter {
	if x, ok := x.GetFilter().(*GetEventsRequest_Filter_Module); ok {
		return x.Module
	}
	return nil
}

type isGetEventsRequest_Filter_Filter interface {
	isGetEventsRequest_Filter_Filter()
}

type GetEventsRequest_Filter_Limit struct {
	Limit *GetEventsRequest_LimitFilter `protobuf:"bytes,1,opt,name=limit,proto3,oneof"`
}

type GetEventsRequest_Filter_LogLevel struct {
	LogLevel *GetEventsRequest_LogLevelFilter `protobuf:"bytes,2,opt,name=log_level,json=logLevel,proto3,oneof"`
}

type GetEventsRequest_Filter_Deployments struct {
	Deployments *GetEventsRequest_DeploymentFilter `protobuf:"bytes,3,opt,name=deployments,proto3,oneof"`
}

type GetEventsRequest_Filter_Requests struct {
	Requests *GetEventsRequest_RequestFilter `protobuf:"bytes,4,opt,name=requests,proto3,oneof"`
}

type GetEventsRequest_Filter_EventTypes struct {
	EventTypes *GetEventsRequest_EventTypeFilter `protobuf:"bytes,5,opt,name=event_types,json=eventTypes,proto3,oneof"`
}

type GetEventsRequest_Filter_Time struct {
	Time *GetEventsRequest_TimeFilter `protobuf:"bytes,6,opt,name=time,proto3,oneof"`
}

type GetEventsRequest_Filter_Id struct {
	Id *GetEventsRequest_IDFilter `protobuf:"bytes,7,opt,name=id,proto3,oneof"`
}

type GetEventsRequest_Filter_Call struct {
	Call *GetEventsRequest_CallFilter `protobuf:"bytes,8,opt,name=call,proto3,oneof"`
}

type GetEventsRequest_Filter_Module struct {
	Module *GetEventsRequest_ModuleFilter `protobuf:"bytes,9,opt,name=module,proto3,oneof"`
}

func (*GetEventsRequest_Filter_Limit) isGetEventsRequest_Filter_Filter() {}

func (*GetEventsRequest_Filter_LogLevel) isGetEventsRequest_Filter_Filter() {}

func (*GetEventsRequest_Filter_Deployments) isGetEventsRequest_Filter_Filter() {}

func (*GetEventsRequest_Filter_Requests) isGetEventsRequest_Filter_Filter() {}

func (*GetEventsRequest_Filter_EventTypes) isGetEventsRequest_Filter_Filter() {}

func (*GetEventsRequest_Filter_Time) isGetEventsRequest_Filter_Filter() {}

func (*GetEventsRequest_Filter_Id) isGetEventsRequest_Filter_Filter() {}

func (*GetEventsRequest_Filter_Call) isGetEventsRequest_Filter_Filter() {}

func (*GetEventsRequest_Filter_Module) isGetEventsRequest_Filter_Filter() {}

var File_xyz_block_ftl_console_v1_console_proto protoreflect.FileDescriptor

var file_xyz_block_ftl_console_v1_console_proto_rawDesc = []byte{
	0x0a, 0x26, 0x78, 0x79, 0x7a, 0x2f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2f, 0x66, 0x74, 0x6c, 0x2f,
	0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6e, 0x73, 0x6f,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x18, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x2e,
	0x76, 0x31, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x24, 0x78, 0x79, 0x7a, 0x2f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2f, 0x66,
	0x74, 0x6c, 0x2f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x78, 0x79, 0x7a, 0x2f, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x2f, 0x66, 0x74, 0x6c, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x78, 0x79, 0x7a, 0x2f, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x2f, 0x66, 0x74, 0x6c, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x74, 0x6c, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x7f, 0x0a, 0x06, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x37, 0x0a,
	0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x73, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x3c, 0x0a, 0x0a, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x78, 0x79, 0x7a,
	0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x66, 0x52, 0x0a, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x73, 0x22, 0x8f, 0x01, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x31, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x78, 0x79,
	0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x73, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x3c, 0x0a, 0x0a, 0x72, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x78,
	0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x73, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x66, 0x52, 0x0a, 0x72, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x22, 0x87, 0x01, 0x0a, 0x08, 0x44, 0x61, 0x74, 0x61, 0x62,
	0x61, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x31, 0x2e,
	0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61,
	0x73, 0x65, 0x12, 0x3c, 0x0a, 0x0a, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x66, 0x52, 0x0a, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73,
	0x22, 0x77, 0x0a, 0x04, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x31, 0x0a, 0x04, 0x65, 0x6e, 0x75, 0x6d,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x31,
	0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x04, 0x65, 0x6e, 0x75, 0x6d, 0x12, 0x3c, 0x0a, 0x0a, 0x72,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e,
	0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x66, 0x52, 0x0a, 0x72,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x22, 0x7b, 0x0a, 0x05, 0x54, 0x6f, 0x70,
	0x69, 0x63, 0x12, 0x34, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74,
	0x6c, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x70, 0x69,
	0x63, 0x52, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x3c, 0x0a, 0x0a, 0x72, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x78,
	0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x73, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x66, 0x52, 0x0a, 0x72, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x22, 0x8b, 0x01, 0x0a, 0x09, 0x54, 0x79, 0x70, 0x65, 0x41,
	0x6c, 0x69, 0x61, 0x73, 0x12, 0x40, 0x0a, 0x09, 0x74, 0x79, 0x70, 0x65, 0x61, 0x6c, 0x69, 0x61,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76,
	0x31, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x52, 0x09, 0x74, 0x79, 0x70,
	0x65, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x3c, 0x0a, 0x0a, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x78, 0x79, 0x7a,
	0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x66, 0x52, 0x0a, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x73, 0x22, 0x7f, 0x0a, 0x06, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x37,
	0x0a, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x73,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52,
	0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x3c, 0x0a, 0x0a, 0x72, 0x65, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x78, 0x79,
	0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x73, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x66, 0x52, 0x0a, 0x72, 0x65, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x73, 0x22, 0xbf, 0x01, 0x0a, 0x04, 0x56, 0x65, 0x72, 0x62, 0x12, 0x31,
	0x0a, 0x04, 0x76, 0x65, 0x72, 0x62, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x78,
	0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x73, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x72, 0x62, 0x52, 0x04, 0x76, 0x65, 0x72,
	0x62, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x2e, 0x0a, 0x13, 0x6a, 0x73, 0x6f,
	0x6e, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x6a, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x3c, 0x0a, 0x0a, 0x72, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x73, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x66, 0x52, 0x0a, 0x72, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x22, 0xd1, 0x04, 0x0a, 0x06, 0x4d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x1a, 0x0a,
	0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x12, 0x34, 0x0a, 0x05, 0x76, 0x65, 0x72, 0x62, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c,
	0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x72, 0x62,
	0x52, 0x05, 0x76, 0x65, 0x72, 0x62, 0x73, 0x12, 0x32, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x3a, 0x0a, 0x07, 0x73,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x78,
	0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x63, 0x6f, 0x6e,
	0x73, 0x6f, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x07,
	0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x12, 0x3a, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x73, 0x12, 0x40, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x73,
	0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x52, 0x09, 0x64, 0x61, 0x74, 0x61,
	0x62, 0x61, 0x73, 0x65, 0x73, 0x12, 0x34, 0x0a, 0x05, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x18, 0x0a,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x45, 0x6e, 0x75, 0x6d, 0x52, 0x05, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x12, 0x37, 0x0a, 0x06, 0x74,
	0x6f, 0x70, 0x69, 0x63, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x78, 0x79,
	0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x63, 0x6f, 0x6e, 0x73,
	0x6f, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x06, 0x74, 0x6f,
	0x70, 0x69, 0x63, 0x73, 0x12, 0x45, 0x0a, 0x0b, 0x74, 0x79, 0x70, 0x65, 0x61, 0x6c, 0x69, 0x61,
	0x73, 0x65, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x78, 0x79, 0x7a, 0x2e,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x6c,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x52, 0x0b,
	0x74, 0x79, 0x70, 0x65, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x65, 0x73, 0x22, 0x29, 0x0a, 0x0d, 0x54,
	0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x22, 0x4b, 0x0a, 0x08, 0x54, 0x6f, 0x70, 0x6f, 0x6c, 0x6f,
	0x67, 0x79, 0x12, 0x3f, 0x0a, 0x06, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x27, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66,
	0x74, 0x6c, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f,
	0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x06, 0x6c, 0x65, 0x76,
	0x65, 0x6c, 0x73, 0x22, 0x13, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x90, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74,
	0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x3a, 0x0a, 0x07, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c,
	0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x52, 0x07, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x3e, 0x0a, 0x08, 0x74,
	0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x63, 0x6f,
	0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67,
	0x79, 0x52, 0x08, 0x74, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x22, 0x16, 0x0a, 0x14, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x93, 0x01, 0x0a, 0x15, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a,
	0x07, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x63,
	0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x52, 0x07, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x3e, 0x0a, 0x08, 0x74, 0x6f, 0x70,
	0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x78, 0x79,
	0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x63, 0x6f, 0x6e, 0x73,
	0x6f, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x52,
	0x08, 0x74, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x22, 0xb3, 0x0e, 0x0a, 0x10, 0x47, 0x65,
	0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4b,
	0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x31, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e,
	0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x12, 0x46, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x30, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c,
	0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x1a, 0x23, 0x0a, 0x0b, 0x4c, 0x69, 0x6d,
	0x69, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x1a, 0x49,
	0x0a, 0x0e, 0x4c, 0x6f, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x12, 0x37, 0x0a, 0x09, 0x6c, 0x6f, 0x67, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e,
	0x66, 0x74, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52,
	0x08, 0x6c, 0x6f, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x1a, 0x34, 0x0a, 0x10, 0x44, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x1a,
	0x2b, 0x0a, 0x0d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x1a, 0x4f, 0x0a, 0x0f,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12,
	0x3c, 0x0a, 0x0b, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x73, 0x1a, 0xaa, 0x01,
	0x0a, 0x0a, 0x54, 0x69, 0x6d, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x3e, 0x0a, 0x0a,
	0x6f, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x74, 0x68, 0x61, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x00, 0x52, 0x09,
	0x6f, 0x6c, 0x64, 0x65, 0x72, 0x54, 0x68, 0x61, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x3e, 0x0a, 0x0a,
	0x6e, 0x65, 0x77, 0x65, 0x72, 0x5f, 0x74, 0x68, 0x61, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x01, 0x52, 0x09,
	0x6e, 0x65, 0x77, 0x65, 0x72, 0x54, 0x68, 0x61, 0x6e, 0x88, 0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b,
	0x5f, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x74, 0x68, 0x61, 0x6e, 0x42, 0x0d, 0x0a, 0x0b, 0x5f,
	0x6e, 0x65, 0x77, 0x65, 0x72, 0x5f, 0x74, 0x68, 0x61, 0x6e, 0x1a, 0x73, 0x0a, 0x08, 0x49, 0x44,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0a, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x5f,
	0x74, 0x68, 0x61, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x09, 0x6c, 0x6f,
	0x77, 0x65, 0x72, 0x54, 0x68, 0x61, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x68, 0x69,
	0x67, 0x68, 0x65, 0x72, 0x5f, 0x74, 0x68, 0x61, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x48,
	0x01, 0x52, 0x0a, 0x68, 0x69, 0x67, 0x68, 0x65, 0x72, 0x54, 0x68, 0x61, 0x6e, 0x88, 0x01, 0x01,
	0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x74, 0x68, 0x61, 0x6e, 0x42,
	0x0e, 0x0a, 0x0c, 0x5f, 0x68, 0x69, 0x67, 0x68, 0x65, 0x72, 0x5f, 0x74, 0x68, 0x61, 0x6e, 0x1a,
	0x99, 0x01, 0x0a, 0x0a, 0x43, 0x61, 0x6c, 0x6c, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x1f,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12,
	0x20, 0x0a, 0x09, 0x64, 0x65, 0x73, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x62, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x64, 0x65, 0x73, 0x74, 0x56, 0x65, 0x72, 0x62, 0x88, 0x01,
	0x01, 0x12, 0x28, 0x0a, 0x0d, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0c, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f,
	0x64, 0x65, 0x73, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x62, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x1a, 0x48, 0x0a, 0x0c, 0x4d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x6d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x12, 0x17, 0x0a, 0x04, 0x76, 0x65, 0x72, 0x62, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x04, 0x76, 0x65, 0x72, 0x62, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05,
	0x5f, 0x76, 0x65, 0x72, 0x62, 0x1a, 0x88, 0x06, 0x0a, 0x06, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x12, 0x4e, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x36, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e,
	0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x48, 0x00, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x12, 0x58, 0x0a, 0x09, 0x6c, 0x6f, 0x67, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e,
	0x66, 0x74, 0x6c, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x4c, 0x6f, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x48, 0x00,
	0x52, 0x08, 0x6c, 0x6f, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x5f, 0x0a, 0x0b, 0x64, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x3b, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e,
	0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x44, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x48, 0x00, 0x52, 0x0b,
	0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x56, 0x0a, 0x08, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e,
	0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x63, 0x6f,
	0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x48, 0x00, 0x52, 0x08, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x73, 0x12, 0x5d, 0x0a, 0x0b, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x48, 0x00, 0x52, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x73, 0x12, 0x4b, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x35, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c,
	0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x48, 0x00, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12,
	0x45, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x78, 0x79,
	0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x63, 0x6f, 0x6e, 0x73,
	0x6f, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x44, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x48, 0x00, 0x52, 0x02, 0x69, 0x64, 0x12, 0x4b, 0x0a, 0x04, 0x63, 0x61, 0x6c, 0x6c, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x48, 0x00, 0x52, 0x04, 0x63,
	0x61, 0x6c, 0x6c, 0x12, 0x51, 0x0a, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e,
	0x66, 0x74, 0x6c, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x48, 0x00, 0x52, 0x06,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x22, 0x3d, 0x0a, 0x05, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x15, 0x0a, 0x11, 0x4f, 0x52, 0x44,
	0x45, 0x52, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00,
	0x12, 0x0d, 0x0a, 0x09, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x41, 0x53, 0x43, 0x10, 0x01, 0x12,
	0x0e, 0x0a, 0x0a, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x44, 0x45, 0x53, 0x43, 0x10, 0x02, 0x22,
	0x6c, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x1b, 0x0a, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x88,
	0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x22, 0x4e, 0x0a,
	0x10, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x88,
	0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x22, 0x29, 0x0a,
	0x11, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x64, 0x0a, 0x10, 0x53, 0x65, 0x74, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1b, 0x0a, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x22, 0x29,
	0x0a, 0x11, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x4e, 0x0a, 0x10, 0x47, 0x65, 0x74,
	0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x1b, 0x0a, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x42, 0x09,
	0x0a, 0x07, 0x5f, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x22, 0x29, 0x0a, 0x11, 0x47, 0x65, 0x74,
	0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x64, 0x0a, 0x10, 0x53, 0x65, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x06,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x42,
	0x09, 0x0a, 0x07, 0x5f, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x22, 0x29, 0x0a, 0x11, 0x53, 0x65,
	0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xb4, 0x01, 0x0a, 0x13, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x47, 0x0a,
	0x0f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x48, 0x00, 0x52, 0x0e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x76, 0x61, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x40, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x22, 0x47, 0x0a, 0x14,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x32, 0xa8, 0x07, 0x0a, 0x0e, 0x43, 0x6f, 0x6e, 0x73, 0x6f, 0x6c,
	0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4a, 0x0a, 0x04, 0x50, 0x69, 0x6e, 0x67,
	0x12, 0x1d, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1e, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x03, 0x90, 0x02, 0x01, 0x12, 0x67, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x73, 0x12, 0x2b, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66,
	0x74, 0x6c, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2c, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e,
	0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x72, 0x0a,
	0x0d, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x2e,
	0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x63,
	0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f,
	0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x63,
	0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30,
	0x01, 0x12, 0x6f, 0x0a, 0x0c, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x12, 0x2d, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74,
	0x6c, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2e, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c,
	0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x30, 0x01, 0x12, 0x64, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12,
	0x2a, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e,
	0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x78, 0x79,
	0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x63, 0x6f, 0x6e, 0x73,
	0x6f, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x64, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x2a, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2b, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74,
	0x6c, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x64,
	0x0a, 0x09, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x2a, 0x2e, 0x78, 0x79,
	0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x63, 0x6f, 0x6e, 0x73,
	0x6f, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x64, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x12, 0x2a, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74,
	0x6c, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e,
	0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x63, 0x6f,
	0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x64, 0x0a, 0x09, 0x53, 0x65,
	0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x2a, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x74, 0x6c, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x78, 0x79, 0x7a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e,
	0x66, 0x74, 0x6c, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x65, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x42, 0x50, 0x50, 0x01, 0x5a, 0x4c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x54, 0x42, 0x44, 0x35, 0x34, 0x35, 0x36, 0x36, 0x39, 0x37, 0x35, 0x2f, 0x66, 0x74, 0x6c,
	0x2f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f,
	0x78, 0x79, 0x7a, 0x2f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2f, 0x66, 0x74, 0x6c, 0x2f, 0x63, 0x6f,
	0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x2f, 0x76, 0x31, 0x3b, 0x70, 0x62, 0x63, 0x6f, 0x6e, 0x73, 0x6f,
	0x6c, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_xyz_block_ftl_console_v1_console_proto_rawDescOnce sync.Once
	file_xyz_block_ftl_console_v1_console_proto_rawDescData = file_xyz_block_ftl_console_v1_console_proto_rawDesc
)

func file_xyz_block_ftl_console_v1_console_proto_rawDescGZIP() []byte {
	file_xyz_block_ftl_console_v1_console_proto_rawDescOnce.Do(func() {
		file_xyz_block_ftl_console_v1_console_proto_rawDescData = protoimpl.X.CompressGZIP(file_xyz_block_ftl_console_v1_console_proto_rawDescData)
	})
	return file_xyz_block_ftl_console_v1_console_proto_rawDescData
}

var file_xyz_block_ftl_console_v1_console_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_xyz_block_ftl_console_v1_console_proto_msgTypes = make([]protoimpl.MessageInfo, 37)
var file_xyz_block_ftl_console_v1_console_proto_goTypes = []any{
	(GetEventsRequest_Order)(0),               // 0: xyz.block.ftl.console.v1.GetEventsRequest.Order
	(*Config)(nil),                            // 1: xyz.block.ftl.console.v1.Config
	(*Data)(nil),                              // 2: xyz.block.ftl.console.v1.Data
	(*Database)(nil),                          // 3: xyz.block.ftl.console.v1.Database
	(*Enum)(nil),                              // 4: xyz.block.ftl.console.v1.Enum
	(*Topic)(nil),                             // 5: xyz.block.ftl.console.v1.Topic
	(*TypeAlias)(nil),                         // 6: xyz.block.ftl.console.v1.TypeAlias
	(*Secret)(nil),                            // 7: xyz.block.ftl.console.v1.Secret
	(*Verb)(nil),                              // 8: xyz.block.ftl.console.v1.Verb
	(*Module)(nil),                            // 9: xyz.block.ftl.console.v1.Module
	(*TopologyGroup)(nil),                     // 10: xyz.block.ftl.console.v1.TopologyGroup
	(*Topology)(nil),                          // 11: xyz.block.ftl.console.v1.Topology
	(*GetModulesRequest)(nil),                 // 12: xyz.block.ftl.console.v1.GetModulesRequest
	(*GetModulesResponse)(nil),                // 13: xyz.block.ftl.console.v1.GetModulesResponse
	(*StreamModulesRequest)(nil),              // 14: xyz.block.ftl.console.v1.StreamModulesRequest
	(*StreamModulesResponse)(nil),             // 15: xyz.block.ftl.console.v1.StreamModulesResponse
	(*GetEventsRequest)(nil),                  // 16: xyz.block.ftl.console.v1.GetEventsRequest
	(*GetEventsResponse)(nil),                 // 17: xyz.block.ftl.console.v1.GetEventsResponse
	(*GetConfigRequest)(nil),                  // 18: xyz.block.ftl.console.v1.GetConfigRequest
	(*GetConfigResponse)(nil),                 // 19: xyz.block.ftl.console.v1.GetConfigResponse
	(*SetConfigRequest)(nil),                  // 20: xyz.block.ftl.console.v1.SetConfigRequest
	(*SetConfigResponse)(nil),                 // 21: xyz.block.ftl.console.v1.SetConfigResponse
	(*GetSecretRequest)(nil),                  // 22: xyz.block.ftl.console.v1.GetSecretRequest
	(*GetSecretResponse)(nil),                 // 23: xyz.block.ftl.console.v1.GetSecretResponse
	(*SetSecretRequest)(nil),                  // 24: xyz.block.ftl.console.v1.SetSecretRequest
	(*SetSecretResponse)(nil),                 // 25: xyz.block.ftl.console.v1.SetSecretResponse
	(*StreamEventsRequest)(nil),               // 26: xyz.block.ftl.console.v1.StreamEventsRequest
	(*StreamEventsResponse)(nil),              // 27: xyz.block.ftl.console.v1.StreamEventsResponse
	(*GetEventsRequest_LimitFilter)(nil),      // 28: xyz.block.ftl.console.v1.GetEventsRequest.LimitFilter
	(*GetEventsRequest_LogLevelFilter)(nil),   // 29: xyz.block.ftl.console.v1.GetEventsRequest.LogLevelFilter
	(*GetEventsRequest_DeploymentFilter)(nil), // 30: xyz.block.ftl.console.v1.GetEventsRequest.DeploymentFilter
	(*GetEventsRequest_RequestFilter)(nil),    // 31: xyz.block.ftl.console.v1.GetEventsRequest.RequestFilter
	(*GetEventsRequest_EventTypeFilter)(nil),  // 32: xyz.block.ftl.console.v1.GetEventsRequest.EventTypeFilter
	(*GetEventsRequest_TimeFilter)(nil),       // 33: xyz.block.ftl.console.v1.GetEventsRequest.TimeFilter
	(*GetEventsRequest_IDFilter)(nil),         // 34: xyz.block.ftl.console.v1.GetEventsRequest.IDFilter
	(*GetEventsRequest_CallFilter)(nil),       // 35: xyz.block.ftl.console.v1.GetEventsRequest.CallFilter
	(*GetEventsRequest_ModuleFilter)(nil),     // 36: xyz.block.ftl.console.v1.GetEventsRequest.ModuleFilter
	(*GetEventsRequest_Filter)(nil),           // 37: xyz.block.ftl.console.v1.GetEventsRequest.Filter
	(*v1.Config)(nil),                         // 38: xyz.block.ftl.schema.v1.Config
	(*v1.Ref)(nil),                            // 39: xyz.block.ftl.schema.v1.Ref
	(*v1.Data)(nil),                           // 40: xyz.block.ftl.schema.v1.Data
	(*v1.Database)(nil),                       // 41: xyz.block.ftl.schema.v1.Database
	(*v1.Enum)(nil),                           // 42: xyz.block.ftl.schema.v1.Enum
	(*v1.Topic)(nil),                          // 43: xyz.block.ftl.schema.v1.Topic
	(*v1.TypeAlias)(nil),                      // 44: xyz.block.ftl.schema.v1.TypeAlias
	(*v1.Secret)(nil),                         // 45: xyz.block.ftl.schema.v1.Secret
	(*v1.Verb)(nil),                           // 46: xyz.block.ftl.schema.v1.Verb
	(*v11.Event)(nil),                         // 47: xyz.block.ftl.v1.Event
	(*durationpb.Duration)(nil),               // 48: google.protobuf.Duration
	(v11.LogLevel)(0),                         // 49: xyz.block.ftl.v1.LogLevel
	(v11.EventType)(0),                        // 50: xyz.block.ftl.v1.EventType
	(*timestamppb.Timestamp)(nil),             // 51: google.protobuf.Timestamp
	(*v11.PingRequest)(nil),                   // 52: xyz.block.ftl.v1.PingRequest
	(*v11.PingResponse)(nil),                  // 53: xyz.block.ftl.v1.PingResponse
}
var file_xyz_block_ftl_console_v1_console_proto_depIdxs = []int32{
	38, // 0: xyz.block.ftl.console.v1.Config.config:type_name -> xyz.block.ftl.schema.v1.Config
	39, // 1: xyz.block.ftl.console.v1.Config.references:type_name -> xyz.block.ftl.schema.v1.Ref
	40, // 2: xyz.block.ftl.console.v1.Data.data:type_name -> xyz.block.ftl.schema.v1.Data
	39, // 3: xyz.block.ftl.console.v1.Data.references:type_name -> xyz.block.ftl.schema.v1.Ref
	41, // 4: xyz.block.ftl.console.v1.Database.database:type_name -> xyz.block.ftl.schema.v1.Database
	39, // 5: xyz.block.ftl.console.v1.Database.references:type_name -> xyz.block.ftl.schema.v1.Ref
	42, // 6: xyz.block.ftl.console.v1.Enum.enum:type_name -> xyz.block.ftl.schema.v1.Enum
	39, // 7: xyz.block.ftl.console.v1.Enum.references:type_name -> xyz.block.ftl.schema.v1.Ref
	43, // 8: xyz.block.ftl.console.v1.Topic.topic:type_name -> xyz.block.ftl.schema.v1.Topic
	39, // 9: xyz.block.ftl.console.v1.Topic.references:type_name -> xyz.block.ftl.schema.v1.Ref
	44, // 10: xyz.block.ftl.console.v1.TypeAlias.typealias:type_name -> xyz.block.ftl.schema.v1.TypeAlias
	39, // 11: xyz.block.ftl.console.v1.TypeAlias.references:type_name -> xyz.block.ftl.schema.v1.Ref
	45, // 12: xyz.block.ftl.console.v1.Secret.secret:type_name -> xyz.block.ftl.schema.v1.Secret
	39, // 13: xyz.block.ftl.console.v1.Secret.references:type_name -> xyz.block.ftl.schema.v1.Ref
	46, // 14: xyz.block.ftl.console.v1.Verb.verb:type_name -> xyz.block.ftl.schema.v1.Verb
	39, // 15: xyz.block.ftl.console.v1.Verb.references:type_name -> xyz.block.ftl.schema.v1.Ref
	8,  // 16: xyz.block.ftl.console.v1.Module.verbs:type_name -> xyz.block.ftl.console.v1.Verb
	2,  // 17: xyz.block.ftl.console.v1.Module.data:type_name -> xyz.block.ftl.console.v1.Data
	7,  // 18: xyz.block.ftl.console.v1.Module.secrets:type_name -> xyz.block.ftl.console.v1.Secret
	1,  // 19: xyz.block.ftl.console.v1.Module.configs:type_name -> xyz.block.ftl.console.v1.Config
	3,  // 20: xyz.block.ftl.console.v1.Module.databases:type_name -> xyz.block.ftl.console.v1.Database
	4,  // 21: xyz.block.ftl.console.v1.Module.enums:type_name -> xyz.block.ftl.console.v1.Enum
	5,  // 22: xyz.block.ftl.console.v1.Module.topics:type_name -> xyz.block.ftl.console.v1.Topic
	6,  // 23: xyz.block.ftl.console.v1.Module.typealiases:type_name -> xyz.block.ftl.console.v1.TypeAlias
	10, // 24: xyz.block.ftl.console.v1.Topology.levels:type_name -> xyz.block.ftl.console.v1.TopologyGroup
	9,  // 25: xyz.block.ftl.console.v1.GetModulesResponse.modules:type_name -> xyz.block.ftl.console.v1.Module
	11, // 26: xyz.block.ftl.console.v1.GetModulesResponse.topology:type_name -> xyz.block.ftl.console.v1.Topology
	9,  // 27: xyz.block.ftl.console.v1.StreamModulesResponse.modules:type_name -> xyz.block.ftl.console.v1.Module
	11, // 28: xyz.block.ftl.console.v1.StreamModulesResponse.topology:type_name -> xyz.block.ftl.console.v1.Topology
	37, // 29: xyz.block.ftl.console.v1.GetEventsRequest.filters:type_name -> xyz.block.ftl.console.v1.GetEventsRequest.Filter
	0,  // 30: xyz.block.ftl.console.v1.GetEventsRequest.order:type_name -> xyz.block.ftl.console.v1.GetEventsRequest.Order
	47, // 31: xyz.block.ftl.console.v1.GetEventsResponse.events:type_name -> xyz.block.ftl.v1.Event
	48, // 32: xyz.block.ftl.console.v1.StreamEventsRequest.update_interval:type_name -> google.protobuf.Duration
	16, // 33: xyz.block.ftl.console.v1.StreamEventsRequest.query:type_name -> xyz.block.ftl.console.v1.GetEventsRequest
	47, // 34: xyz.block.ftl.console.v1.StreamEventsResponse.events:type_name -> xyz.block.ftl.v1.Event
	49, // 35: xyz.block.ftl.console.v1.GetEventsRequest.LogLevelFilter.log_level:type_name -> xyz.block.ftl.v1.LogLevel
	50, // 36: xyz.block.ftl.console.v1.GetEventsRequest.EventTypeFilter.event_types:type_name -> xyz.block.ftl.v1.EventType
	51, // 37: xyz.block.ftl.console.v1.GetEventsRequest.TimeFilter.older_than:type_name -> google.protobuf.Timestamp
	51, // 38: xyz.block.ftl.console.v1.GetEventsRequest.TimeFilter.newer_than:type_name -> google.protobuf.Timestamp
	28, // 39: xyz.block.ftl.console.v1.GetEventsRequest.Filter.limit:type_name -> xyz.block.ftl.console.v1.GetEventsRequest.LimitFilter
	29, // 40: xyz.block.ftl.console.v1.GetEventsRequest.Filter.log_level:type_name -> xyz.block.ftl.console.v1.GetEventsRequest.LogLevelFilter
	30, // 41: xyz.block.ftl.console.v1.GetEventsRequest.Filter.deployments:type_name -> xyz.block.ftl.console.v1.GetEventsRequest.DeploymentFilter
	31, // 42: xyz.block.ftl.console.v1.GetEventsRequest.Filter.requests:type_name -> xyz.block.ftl.console.v1.GetEventsRequest.RequestFilter
	32, // 43: xyz.block.ftl.console.v1.GetEventsRequest.Filter.event_types:type_name -> xyz.block.ftl.console.v1.GetEventsRequest.EventTypeFilter
	33, // 44: xyz.block.ftl.console.v1.GetEventsRequest.Filter.time:type_name -> xyz.block.ftl.console.v1.GetEventsRequest.TimeFilter
	34, // 45: xyz.block.ftl.console.v1.GetEventsRequest.Filter.id:type_name -> xyz.block.ftl.console.v1.GetEventsRequest.IDFilter
	35, // 46: xyz.block.ftl.console.v1.GetEventsRequest.Filter.call:type_name -> xyz.block.ftl.console.v1.GetEventsRequest.CallFilter
	36, // 47: xyz.block.ftl.console.v1.GetEventsRequest.Filter.module:type_name -> xyz.block.ftl.console.v1.GetEventsRequest.ModuleFilter
	52, // 48: xyz.block.ftl.console.v1.ConsoleService.Ping:input_type -> xyz.block.ftl.v1.PingRequest
	12, // 49: xyz.block.ftl.console.v1.ConsoleService.GetModules:input_type -> xyz.block.ftl.console.v1.GetModulesRequest
	14, // 50: xyz.block.ftl.console.v1.ConsoleService.StreamModules:input_type -> xyz.block.ftl.console.v1.StreamModulesRequest
	26, // 51: xyz.block.ftl.console.v1.ConsoleService.StreamEvents:input_type -> xyz.block.ftl.console.v1.StreamEventsRequest
	16, // 52: xyz.block.ftl.console.v1.ConsoleService.GetEvents:input_type -> xyz.block.ftl.console.v1.GetEventsRequest
	18, // 53: xyz.block.ftl.console.v1.ConsoleService.GetConfig:input_type -> xyz.block.ftl.console.v1.GetConfigRequest
	20, // 54: xyz.block.ftl.console.v1.ConsoleService.SetConfig:input_type -> xyz.block.ftl.console.v1.SetConfigRequest
	22, // 55: xyz.block.ftl.console.v1.ConsoleService.GetSecret:input_type -> xyz.block.ftl.console.v1.GetSecretRequest
	24, // 56: xyz.block.ftl.console.v1.ConsoleService.SetSecret:input_type -> xyz.block.ftl.console.v1.SetSecretRequest
	53, // 57: xyz.block.ftl.console.v1.ConsoleService.Ping:output_type -> xyz.block.ftl.v1.PingResponse
	13, // 58: xyz.block.ftl.console.v1.ConsoleService.GetModules:output_type -> xyz.block.ftl.console.v1.GetModulesResponse
	15, // 59: xyz.block.ftl.console.v1.ConsoleService.StreamModules:output_type -> xyz.block.ftl.console.v1.StreamModulesResponse
	27, // 60: xyz.block.ftl.console.v1.ConsoleService.StreamEvents:output_type -> xyz.block.ftl.console.v1.StreamEventsResponse
	17, // 61: xyz.block.ftl.console.v1.ConsoleService.GetEvents:output_type -> xyz.block.ftl.console.v1.GetEventsResponse
	19, // 62: xyz.block.ftl.console.v1.ConsoleService.GetConfig:output_type -> xyz.block.ftl.console.v1.GetConfigResponse
	21, // 63: xyz.block.ftl.console.v1.ConsoleService.SetConfig:output_type -> xyz.block.ftl.console.v1.SetConfigResponse
	23, // 64: xyz.block.ftl.console.v1.ConsoleService.GetSecret:output_type -> xyz.block.ftl.console.v1.GetSecretResponse
	25, // 65: xyz.block.ftl.console.v1.ConsoleService.SetSecret:output_type -> xyz.block.ftl.console.v1.SetSecretResponse
	57, // [57:66] is the sub-list for method output_type
	48, // [48:57] is the sub-list for method input_type
	48, // [48:48] is the sub-list for extension type_name
	48, // [48:48] is the sub-list for extension extendee
	0,  // [0:48] is the sub-list for field type_name
}

func init() { file_xyz_block_ftl_console_v1_console_proto_init() }
func file_xyz_block_ftl_console_v1_console_proto_init() {
	if File_xyz_block_ftl_console_v1_console_proto != nil {
		return
	}
	file_xyz_block_ftl_console_v1_console_proto_msgTypes[16].OneofWrappers = []any{}
	file_xyz_block_ftl_console_v1_console_proto_msgTypes[17].OneofWrappers = []any{}
	file_xyz_block_ftl_console_v1_console_proto_msgTypes[19].OneofWrappers = []any{}
	file_xyz_block_ftl_console_v1_console_proto_msgTypes[21].OneofWrappers = []any{}
	file_xyz_block_ftl_console_v1_console_proto_msgTypes[23].OneofWrappers = []any{}
	file_xyz_block_ftl_console_v1_console_proto_msgTypes[25].OneofWrappers = []any{}
	file_xyz_block_ftl_console_v1_console_proto_msgTypes[32].OneofWrappers = []any{}
	file_xyz_block_ftl_console_v1_console_proto_msgTypes[33].OneofWrappers = []any{}
	file_xyz_block_ftl_console_v1_console_proto_msgTypes[34].OneofWrappers = []any{}
	file_xyz_block_ftl_console_v1_console_proto_msgTypes[35].OneofWrappers = []any{}
	file_xyz_block_ftl_console_v1_console_proto_msgTypes[36].OneofWrappers = []any{
		(*GetEventsRequest_Filter_Limit)(nil),
		(*GetEventsRequest_Filter_LogLevel)(nil),
		(*GetEventsRequest_Filter_Deployments)(nil),
		(*GetEventsRequest_Filter_Requests)(nil),
		(*GetEventsRequest_Filter_EventTypes)(nil),
		(*GetEventsRequest_Filter_Time)(nil),
		(*GetEventsRequest_Filter_Id)(nil),
		(*GetEventsRequest_Filter_Call)(nil),
		(*GetEventsRequest_Filter_Module)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_xyz_block_ftl_console_v1_console_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   37,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_xyz_block_ftl_console_v1_console_proto_goTypes,
		DependencyIndexes: file_xyz_block_ftl_console_v1_console_proto_depIdxs,
		EnumInfos:         file_xyz_block_ftl_console_v1_console_proto_enumTypes,
		MessageInfos:      file_xyz_block_ftl_console_v1_console_proto_msgTypes,
	}.Build()
	File_xyz_block_ftl_console_v1_console_proto = out.File
	file_xyz_block_ftl_console_v1_console_proto_rawDesc = nil
	file_xyz_block_ftl_console_v1_console_proto_goTypes = nil
	file_xyz_block_ftl_console_v1_console_proto_depIdxs = nil
}
