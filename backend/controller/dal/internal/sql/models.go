// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0

package sql

import (
	"database/sql/driver"
	"encoding/json"
	"fmt"
	"time"

	"github.com/TBD54566975/ftl/internal/model"
	"github.com/TBD54566975/ftl/internal/schema"
	"github.com/alecthomas/types/optional"
	"github.com/sqlc-dev/pqtype"
)

type TopicSubscriptionState string

const (
	TopicSubscriptionStateIdle      TopicSubscriptionState = "idle"
	TopicSubscriptionStateExecuting TopicSubscriptionState = "executing"
)

func (e *TopicSubscriptionState) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = TopicSubscriptionState(s)
	case string:
		*e = TopicSubscriptionState(s)
	default:
		return fmt.Errorf("unsupported scan type for TopicSubscriptionState: %T", src)
	}
	return nil
}

type NullTopicSubscriptionState struct {
	TopicSubscriptionState TopicSubscriptionState
	Valid                  bool // Valid is true if TopicSubscriptionState is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullTopicSubscriptionState) Scan(value interface{}) error {
	if value == nil {
		ns.TopicSubscriptionState, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.TopicSubscriptionState.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullTopicSubscriptionState) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.TopicSubscriptionState), nil
}

type Deployment struct {
	ID              int64
	CreatedAt       time.Time
	ModuleID        int64
	Key             model.DeploymentKey
	Schema          *schema.Module
	Labels          json.RawMessage
	MinReplicas     int32
	LastActivatedAt time.Time
}

type Topic struct {
	ID         int64
	Key        model.TopicKey
	CreatedAt  time.Time
	Name       string
	Type       string
	Head       optional.Option[int64]
	ModuleName string
}

type TopicEvent struct {
	ID           int64
	CreatedAt    time.Time
	Key          model.TopicEventKey
	TopicID      int64
	Caller       optional.Option[string]
	RequestKey   optional.Option[string]
	TraceContext pqtype.NullRawMessage
	Payload      json.RawMessage
}

type TopicSubscription struct {
	ID            int64
	Key           model.SubscriptionKey
	CreatedAt     time.Time
	TopicID       int64
	Name          string
	Cursor        optional.Option[int64]
	State         TopicSubscriptionState
	DeploymentKey model.DeploymentKey
	ModuleName    string
}
