// Code generated by Wire protocol buffer compiler, do not edit.
// Source: xyz.block.ftl.v1.RunnerState in xyz/block/ftl/v1/ftl.proto
package xyz.block.ftl.v1

import com.squareup.wire.EnumAdapter
import com.squareup.wire.ProtoAdapter
import com.squareup.wire.Syntax.PROTO_3
import com.squareup.wire.WireEnum
import kotlin.Int
import kotlin.jvm.JvmField
import kotlin.jvm.JvmStatic

public enum class RunnerState(
  public override val `value`: Int,
) : WireEnum {
  /**
   * The Runner is waiting for a deployment.
   */
  RUNNER_IDLE(0),
  /**
   * The Runner and Controller have agreed that the Runner is reserved.
   */
  RUNNER_RESERVED(1),
  /**
   * The Runner is assigned to a deployment.
   */
  RUNNER_ASSIGNED(2),
  /**
   * The Runner is dead.
   */
  RUNNER_DEAD(3),
  ;

  public companion object {
    @JvmField
    public val ADAPTER: ProtoAdapter<RunnerState> = object : EnumAdapter<RunnerState>(
      RunnerState::class, 
      PROTO_3, 
      RunnerState.RUNNER_IDLE
    ) {
      public override fun fromValue(`value`: Int): RunnerState? = RunnerState.fromValue(value)
    }

    @JvmStatic
    public fun fromValue(`value`: Int): RunnerState? = when (value) {
      0 -> RUNNER_IDLE
      1 -> RUNNER_RESERVED
      2 -> RUNNER_ASSIGNED
      3 -> RUNNER_DEAD
      else -> null
    }
  }
}
