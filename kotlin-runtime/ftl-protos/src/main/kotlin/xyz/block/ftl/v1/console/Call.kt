// Code generated by Wire protocol buffer compiler, do not edit.
// Source: xyz.block.ftl.v1.console.Call in xyz/block/ftl/v1/console/console.proto
package xyz.block.ftl.v1.console

import com.squareup.wire.FieldEncoding
import com.squareup.wire.Message
import com.squareup.wire.ProtoAdapter
import com.squareup.wire.ProtoReader
import com.squareup.wire.ProtoWriter
import com.squareup.wire.ReverseProtoWriter
import com.squareup.wire.Syntax.PROTO_3
import com.squareup.wire.WireField
import com.squareup.wire.`internal`.sanitize
import kotlin.Any
import kotlin.AssertionError
import kotlin.Boolean
import kotlin.Deprecated
import kotlin.DeprecationLevel
import kotlin.Int
import kotlin.Long
import kotlin.Nothing
import kotlin.String
import kotlin.Unit
import kotlin.jvm.JvmField
import okio.ByteString

public class Call(
  @field:WireField(
    tag = 1,
    adapter = "com.squareup.wire.ProtoAdapter#INT64",
    label = WireField.Label.OMIT_IDENTITY,
  )
  public val id: Long = 0L,
  @field:WireField(
    tag = 2,
    adapter = "com.squareup.wire.ProtoAdapter#STRING",
    label = WireField.Label.OMIT_IDENTITY,
    jsonName = "runnerKey",
  )
  public val runner_key: String = "",
  @field:WireField(
    tag = 3,
    adapter = "com.squareup.wire.ProtoAdapter#STRING",
    label = WireField.Label.OMIT_IDENTITY,
    jsonName = "requestKey",
  )
  public val request_key: String = "",
  @field:WireField(
    tag = 4,
    adapter = "com.squareup.wire.ProtoAdapter#STRING",
    label = WireField.Label.OMIT_IDENTITY,
    jsonName = "controllerKey",
  )
  public val controller_key: String = "",
  @field:WireField(
    tag = 5,
    adapter = "com.squareup.wire.ProtoAdapter#INT64",
    label = WireField.Label.OMIT_IDENTITY,
    jsonName = "timeStamp",
  )
  public val time_stamp: Long = 0L,
  @field:WireField(
    tag = 6,
    adapter = "com.squareup.wire.ProtoAdapter#STRING",
    label = WireField.Label.OMIT_IDENTITY,
    jsonName = "sourceModule",
  )
  public val source_module: String = "",
  @field:WireField(
    tag = 7,
    adapter = "com.squareup.wire.ProtoAdapter#STRING",
    label = WireField.Label.OMIT_IDENTITY,
    jsonName = "sourceVerb",
  )
  public val source_verb: String = "",
  @field:WireField(
    tag = 8,
    adapter = "com.squareup.wire.ProtoAdapter#STRING",
    label = WireField.Label.OMIT_IDENTITY,
    jsonName = "destModule",
  )
  public val dest_module: String = "",
  @field:WireField(
    tag = 9,
    adapter = "com.squareup.wire.ProtoAdapter#STRING",
    label = WireField.Label.OMIT_IDENTITY,
    jsonName = "destVerb",
  )
  public val dest_verb: String = "",
  @field:WireField(
    tag = 10,
    adapter = "com.squareup.wire.ProtoAdapter#INT64",
    label = WireField.Label.OMIT_IDENTITY,
    jsonName = "durationMs",
  )
  public val duration_ms: Long = 0L,
  @field:WireField(
    tag = 11,
    adapter = "com.squareup.wire.ProtoAdapter#STRING",
    label = WireField.Label.OMIT_IDENTITY,
  )
  public val request: String = "",
  @field:WireField(
    tag = 12,
    adapter = "com.squareup.wire.ProtoAdapter#STRING",
    label = WireField.Label.OMIT_IDENTITY,
  )
  public val response: String = "",
  @field:WireField(
    tag = 13,
    adapter = "com.squareup.wire.ProtoAdapter#STRING",
    label = WireField.Label.OMIT_IDENTITY,
  )
  public val error: String = "",
  unknownFields: ByteString = ByteString.EMPTY,
) : Message<Call, Nothing>(ADAPTER, unknownFields) {
  @Deprecated(
    message = "Shouldn't be used in Kotlin",
    level = DeprecationLevel.HIDDEN,
  )
  public override fun newBuilder(): Nothing = throw
      AssertionError("Builders are deprecated and only available in a javaInterop build; see https://square.github.io/wire/wire_compiler/#kotlin")

  public override fun equals(other: Any?): Boolean {
    if (other === this) return true
    if (other !is Call) return false
    if (unknownFields != other.unknownFields) return false
    if (id != other.id) return false
    if (runner_key != other.runner_key) return false
    if (request_key != other.request_key) return false
    if (controller_key != other.controller_key) return false
    if (time_stamp != other.time_stamp) return false
    if (source_module != other.source_module) return false
    if (source_verb != other.source_verb) return false
    if (dest_module != other.dest_module) return false
    if (dest_verb != other.dest_verb) return false
    if (duration_ms != other.duration_ms) return false
    if (request != other.request) return false
    if (response != other.response) return false
    if (error != other.error) return false
    return true
  }

  public override fun hashCode(): Int {
    var result = super.hashCode
    if (result == 0) {
      result = unknownFields.hashCode()
      result = result * 37 + id.hashCode()
      result = result * 37 + runner_key.hashCode()
      result = result * 37 + request_key.hashCode()
      result = result * 37 + controller_key.hashCode()
      result = result * 37 + time_stamp.hashCode()
      result = result * 37 + source_module.hashCode()
      result = result * 37 + source_verb.hashCode()
      result = result * 37 + dest_module.hashCode()
      result = result * 37 + dest_verb.hashCode()
      result = result * 37 + duration_ms.hashCode()
      result = result * 37 + request.hashCode()
      result = result * 37 + response.hashCode()
      result = result * 37 + error.hashCode()
      super.hashCode = result
    }
    return result
  }

  public override fun toString(): String {
    val result = mutableListOf<String>()
    result += """id=$id"""
    result += """runner_key=${sanitize(runner_key)}"""
    result += """request_key=${sanitize(request_key)}"""
    result += """controller_key=${sanitize(controller_key)}"""
    result += """time_stamp=$time_stamp"""
    result += """source_module=${sanitize(source_module)}"""
    result += """source_verb=${sanitize(source_verb)}"""
    result += """dest_module=${sanitize(dest_module)}"""
    result += """dest_verb=${sanitize(dest_verb)}"""
    result += """duration_ms=$duration_ms"""
    result += """request=${sanitize(request)}"""
    result += """response=${sanitize(response)}"""
    result += """error=${sanitize(error)}"""
    return result.joinToString(prefix = "Call{", separator = ", ", postfix = "}")
  }

  public fun copy(
    id: Long = this.id,
    runner_key: String = this.runner_key,
    request_key: String = this.request_key,
    controller_key: String = this.controller_key,
    time_stamp: Long = this.time_stamp,
    source_module: String = this.source_module,
    source_verb: String = this.source_verb,
    dest_module: String = this.dest_module,
    dest_verb: String = this.dest_verb,
    duration_ms: Long = this.duration_ms,
    request: String = this.request,
    response: String = this.response,
    error: String = this.error,
    unknownFields: ByteString = this.unknownFields,
  ): Call = Call(id, runner_key, request_key, controller_key, time_stamp, source_module,
      source_verb, dest_module, dest_verb, duration_ms, request, response, error, unknownFields)

  public companion object {
    @JvmField
    public val ADAPTER: ProtoAdapter<Call> = object : ProtoAdapter<Call>(
      FieldEncoding.LENGTH_DELIMITED, 
      Call::class, 
      "type.googleapis.com/xyz.block.ftl.v1.console.Call", 
      PROTO_3, 
      null, 
      "xyz/block/ftl/v1/console/console.proto"
    ) {
      public override fun encodedSize(`value`: Call): Int {
        var size = value.unknownFields.size
        if (value.id != 0L) size += ProtoAdapter.INT64.encodedSizeWithTag(1, value.id)
        if (value.runner_key != "") size += ProtoAdapter.STRING.encodedSizeWithTag(2,
            value.runner_key)
        if (value.request_key != "") size += ProtoAdapter.STRING.encodedSizeWithTag(3,
            value.request_key)
        if (value.controller_key != "") size += ProtoAdapter.STRING.encodedSizeWithTag(4,
            value.controller_key)
        if (value.time_stamp != 0L) size += ProtoAdapter.INT64.encodedSizeWithTag(5,
            value.time_stamp)
        if (value.source_module != "") size += ProtoAdapter.STRING.encodedSizeWithTag(6,
            value.source_module)
        if (value.source_verb != "") size += ProtoAdapter.STRING.encodedSizeWithTag(7,
            value.source_verb)
        if (value.dest_module != "") size += ProtoAdapter.STRING.encodedSizeWithTag(8,
            value.dest_module)
        if (value.dest_verb != "") size += ProtoAdapter.STRING.encodedSizeWithTag(9,
            value.dest_verb)
        if (value.duration_ms != 0L) size += ProtoAdapter.INT64.encodedSizeWithTag(10,
            value.duration_ms)
        if (value.request != "") size += ProtoAdapter.STRING.encodedSizeWithTag(11, value.request)
        if (value.response != "") size += ProtoAdapter.STRING.encodedSizeWithTag(12, value.response)
        if (value.error != "") size += ProtoAdapter.STRING.encodedSizeWithTag(13, value.error)
        return size
      }

      public override fun encode(writer: ProtoWriter, `value`: Call): Unit {
        if (value.id != 0L) ProtoAdapter.INT64.encodeWithTag(writer, 1, value.id)
        if (value.runner_key != "") ProtoAdapter.STRING.encodeWithTag(writer, 2, value.runner_key)
        if (value.request_key != "") ProtoAdapter.STRING.encodeWithTag(writer, 3, value.request_key)
        if (value.controller_key != "") ProtoAdapter.STRING.encodeWithTag(writer, 4,
            value.controller_key)
        if (value.time_stamp != 0L) ProtoAdapter.INT64.encodeWithTag(writer, 5, value.time_stamp)
        if (value.source_module != "") ProtoAdapter.STRING.encodeWithTag(writer, 6,
            value.source_module)
        if (value.source_verb != "") ProtoAdapter.STRING.encodeWithTag(writer, 7, value.source_verb)
        if (value.dest_module != "") ProtoAdapter.STRING.encodeWithTag(writer, 8, value.dest_module)
        if (value.dest_verb != "") ProtoAdapter.STRING.encodeWithTag(writer, 9, value.dest_verb)
        if (value.duration_ms != 0L) ProtoAdapter.INT64.encodeWithTag(writer, 10, value.duration_ms)
        if (value.request != "") ProtoAdapter.STRING.encodeWithTag(writer, 11, value.request)
        if (value.response != "") ProtoAdapter.STRING.encodeWithTag(writer, 12, value.response)
        if (value.error != "") ProtoAdapter.STRING.encodeWithTag(writer, 13, value.error)
        writer.writeBytes(value.unknownFields)
      }

      public override fun encode(writer: ReverseProtoWriter, `value`: Call): Unit {
        writer.writeBytes(value.unknownFields)
        if (value.error != "") ProtoAdapter.STRING.encodeWithTag(writer, 13, value.error)
        if (value.response != "") ProtoAdapter.STRING.encodeWithTag(writer, 12, value.response)
        if (value.request != "") ProtoAdapter.STRING.encodeWithTag(writer, 11, value.request)
        if (value.duration_ms != 0L) ProtoAdapter.INT64.encodeWithTag(writer, 10, value.duration_ms)
        if (value.dest_verb != "") ProtoAdapter.STRING.encodeWithTag(writer, 9, value.dest_verb)
        if (value.dest_module != "") ProtoAdapter.STRING.encodeWithTag(writer, 8, value.dest_module)
        if (value.source_verb != "") ProtoAdapter.STRING.encodeWithTag(writer, 7, value.source_verb)
        if (value.source_module != "") ProtoAdapter.STRING.encodeWithTag(writer, 6,
            value.source_module)
        if (value.time_stamp != 0L) ProtoAdapter.INT64.encodeWithTag(writer, 5, value.time_stamp)
        if (value.controller_key != "") ProtoAdapter.STRING.encodeWithTag(writer, 4,
            value.controller_key)
        if (value.request_key != "") ProtoAdapter.STRING.encodeWithTag(writer, 3, value.request_key)
        if (value.runner_key != "") ProtoAdapter.STRING.encodeWithTag(writer, 2, value.runner_key)
        if (value.id != 0L) ProtoAdapter.INT64.encodeWithTag(writer, 1, value.id)
      }

      public override fun decode(reader: ProtoReader): Call {
        var id: Long = 0L
        var runner_key: String = ""
        var request_key: String = ""
        var controller_key: String = ""
        var time_stamp: Long = 0L
        var source_module: String = ""
        var source_verb: String = ""
        var dest_module: String = ""
        var dest_verb: String = ""
        var duration_ms: Long = 0L
        var request: String = ""
        var response: String = ""
        var error: String = ""
        val unknownFields = reader.forEachTag { tag ->
          when (tag) {
            1 -> id = ProtoAdapter.INT64.decode(reader)
            2 -> runner_key = ProtoAdapter.STRING.decode(reader)
            3 -> request_key = ProtoAdapter.STRING.decode(reader)
            4 -> controller_key = ProtoAdapter.STRING.decode(reader)
            5 -> time_stamp = ProtoAdapter.INT64.decode(reader)
            6 -> source_module = ProtoAdapter.STRING.decode(reader)
            7 -> source_verb = ProtoAdapter.STRING.decode(reader)
            8 -> dest_module = ProtoAdapter.STRING.decode(reader)
            9 -> dest_verb = ProtoAdapter.STRING.decode(reader)
            10 -> duration_ms = ProtoAdapter.INT64.decode(reader)
            11 -> request = ProtoAdapter.STRING.decode(reader)
            12 -> response = ProtoAdapter.STRING.decode(reader)
            13 -> error = ProtoAdapter.STRING.decode(reader)
            else -> reader.readUnknownField(tag)
          }
        }
        return Call(
          id = id,
          runner_key = runner_key,
          request_key = request_key,
          controller_key = controller_key,
          time_stamp = time_stamp,
          source_module = source_module,
          source_verb = source_verb,
          dest_module = dest_module,
          dest_verb = dest_verb,
          duration_ms = duration_ms,
          request = request,
          response = response,
          error = error,
          unknownFields = unknownFields
        )
      }

      public override fun redact(`value`: Call): Call = value.copy(
        unknownFields = ByteString.EMPTY
      )
    }

    private const val serialVersionUID: Long = 0L
  }
}
