// Code generated by Wire protocol buffer compiler, do not edit.
// Source: xyz.block.ftl.v1.console.ConsoleService in xyz/block/ftl/v1/console/console.proto
package xyz.block.ftl.v1.console

import com.squareup.wire.GrpcCall
import com.squareup.wire.GrpcClient
import com.squareup.wire.GrpcMethod
import xyz.block.ftl.v1.PingRequest
import xyz.block.ftl.v1.PingResponse

public class GrpcConsoleServiceClient(
  private val client: GrpcClient,
) : ConsoleServiceClient {
  /**
   * Ping service for readiness.
   */
  public override fun Ping(): GrpcCall<PingRequest, PingResponse> = client.newCall(GrpcMethod(
      path = "/xyz.block.ftl.v1.console.ConsoleService/Ping",
      requestAdapter = PingRequest.ADAPTER,
      responseAdapter = PingResponse.ADAPTER
  ))

  public override fun GetModules(): GrpcCall<GetModulesRequest, GetModulesResponse> =
      client.newCall(GrpcMethod(
      path = "/xyz.block.ftl.v1.console.ConsoleService/GetModules",
      requestAdapter = GetModulesRequest.ADAPTER,
      responseAdapter = GetModulesResponse.ADAPTER
  ))

  public override fun GetCalls(): GrpcCall<GetCallsRequest, GetCallsResponse> =
      client.newCall(GrpcMethod(
      path = "/xyz.block.ftl.v1.console.ConsoleService/GetCalls",
      requestAdapter = GetCallsRequest.ADAPTER,
      responseAdapter = GetCallsResponse.ADAPTER
  ))

  public override fun GetRequestCalls(): GrpcCall<GetRequestCallsRequest, GetRequestCallsResponse> =
      client.newCall(GrpcMethod(
      path = "/xyz.block.ftl.v1.console.ConsoleService/GetRequestCalls",
      requestAdapter = GetRequestCallsRequest.ADAPTER,
      responseAdapter = GetRequestCallsResponse.ADAPTER
  ))

  public override fun GetTimeline(): GrpcCall<GetTimelineRequest, GetTimelineResponse> =
      client.newCall(GrpcMethod(
      path = "/xyz.block.ftl.v1.console.ConsoleService/GetTimeline",
      requestAdapter = GetTimelineRequest.ADAPTER,
      responseAdapter = GetTimelineResponse.ADAPTER
  ))
}
