import React from 'react'
import { render } from '@testing-library/react'
import { composeStories } from '@storybook/testing-react'
import * as stories from './{{dashCase name}}.stories'
import { {{pascalCase name}} } from './{{dashCase name}}'

describe('{{pascalCase name}}', () => {
  test('Forwards Ref', async () => {
    const ref = React.createRef<{{ getHTMLElement tag }}>()
    await render(<{{{pascalCase name}}} ref={ref} />)
    expect(ref).not.toBeNull()
  })

  const cases = Object.values(composeStories(stories)).map((Story): [string, typeof Story] => [
  Story.storyName!,
  Story,
  ])

  test.each(cases)('Renders %s story', async (_storyName, Story) => {
    const { container } = await render(
      <Story />
    )
    expect(container.firstChild).toMatchSnapshot()
  })
  test.each(cases)('Renders %s story', async (_storyName, Story) => {
    const { container } = await render(
      <Story />
    )
    //@ts-ignore: is not the wrong type
    await Story?.play({ canvasElement: container })
  })
})