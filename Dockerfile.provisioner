FROM ubuntu:24.04 AS builder
RUN apt-get update
RUN apt-get install -y curl git zip

# Copy Hermit bin stubs and install all packages. This is done
# separately so that Docker will cache the tools correctly.
COPY ./bin /src/bin
ENV PATH="/src/bin:$PATH"
WORKDIR /src

# Seed some of the most common tools - this will be cached
RUN go version
RUN node --version

# Download Go dependencies separately so Docker will cache them
COPY go.mod go.sum ./
RUN go mod download -x

# Download PNPM dependencies separately so Docker will cache them
COPY frontend/console/package.json ./frontend/console/
COPY frontend/vscode/package.json ./frontend/vscode/
COPY pnpm-workspace.yaml pnpm-lock.yaml ./
RUN pnpm install --frozen-lockfile

# Build
COPY . /src/
RUN just errtrace
# Reset timestamps so that the build state is reset
RUN git ls-files -z | xargs -0 touch -r go.mod
RUN just build ftl-provisioner ftl-provisioner-cloudformation

# Finally create the runtime image.
FROM scratch

COPY --from=builder /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/

WORKDIR /plugins/
COPY ftl-provisioner-config.toml .
COPY --from=builder /src/build/release/ftl-provisioner-cloudformation .

WORKDIR /service/
COPY --from=builder /src/build/release/ftl-provisioner .

EXPOSE 8893

ENV PATH="$PATH:/plugins/"
ENV FTL_PROVISIONER_BIND="http://0.0.0.0:8893"
ENV FTL_PROVISIONER_PLUGIN_CONFIG_FILE="/plugins/config.toml"

CMD ["/service/ftl-provisioner"]
