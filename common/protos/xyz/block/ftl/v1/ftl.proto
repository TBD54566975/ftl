syntax = "proto3";

package xyz.block.ftl.v1;

option go_package = "github.com/TBD54566975/ftl/common/gen/xyz/block/ftl/v1;ftlv1";
option java_multiple_files = true;

message PingRequest {}
message PingResponse {}

message FileChangeRequest {
  string path = 1;
}
message FileChangeResponse {}

message CallRequest {
  string verb = 1;
  bytes body = 2;
}
message CallResponse {
  message Error {
    string message = 1;
    // TODO: Richer error type.
  }

  oneof response {
    bytes body = 1;
    Error error = 2;
  }
}

message ListRequest {}
message ListResponse {
  repeated string verbs = 1;
}

message ServeRequest {
  // Path to local module to serve.
  string path = 1;
}
message ServeResponse {}

// AgentService is the local agent that manages monitoring local Drives.
service AgentService {
  // Serve a module as part of the mesh.
  rpc Serve(ServeRequest) returns (ServeResponse);
  // Ping FTL for readiness.
  rpc Ping(PingRequest) returns (PingResponse);
  // Call a Verb.
  rpc Call(CallRequest) returns (CallResponse);
  // List Verbs.
  rpc List(ListRequest) returns (ListResponse);
}

// DriveService is the service that provides language-specific development and
// deployment functionality.
//
// The DriveService is responsible for hot reloading the when code
// changes, and passing Verb calls through.
service DriveService {
  // Ping the Drive for readiness.
  rpc Ping(PingRequest) returns (PingResponse);

  // FileChange is called when a file is changed.
  //
  // The Drive should hot reload the module if a change to the file warrants it.
  rpc FileChange(FileChangeRequest) returns (FileChangeResponse);

  // Call a Verb on the Drive.
  rpc Call(CallRequest) returns (CallResponse);

  // List the Verbs available on the Drive.
  rpc List(ListRequest) returns (ListResponse);
}