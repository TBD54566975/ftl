# yaml-language-server: $schema=./.go-arch-lint-schema.json
version: 3
workdir: .
components:
  controller: { in: backend/controller/** }
  ftl-controller-cmd: { in: cmd/ftl-controller/** }
  common: { in: common/** }
  internal: { in: internal/** }

  protos: { in: backend/protos/** }
  libdal: { in: backend/libdal/** }
  lease-service: { in: backend/lease/** }
  cron-service: { in: backend/cron/** }
  ingress-service: { in: backend/ingress/** }
  timeline-service: { in: backend/timeline/** }
  provisioner-service: { in: backend/provisioner/** }

  schema: { in: internal/schema/** }
  ftl: { in: . }

  go-runtime: { in: go-runtime/** }
  jvm-runtime: { in: jvm-runtime/** }
  python-runtime: { in: python-runtime/** }

  runner: { in: backend/runner/** }

  ftl-cmd: { in: frontend/cli/** }
  frontend: { in: frontend/console/** }

  ftl-runner-cmd: { in: cmd/ftl-runner/** }
  ftl-gen-lsp-cmd: { in: cmd/ftl-gen-lsp/** }
  ftl-initdb-cmd: { in: cmd/ftl-initdb/** }
  ftl-ftl-provisioner-cloudformation-cmd: { in: cmd/ftl-provisioner-cloudformation/** }
  ftl-lease-cmd: { in: cmd/ftl-lease/** }
  ftl-http-ingress-cmd: { in: cmd/ftl-http-ingress/** }
  ftl-cron-cmd: { in: cmd/ftl-cron/** }
  ftl-timeline-cmd: { in: cmd/ftl-timeline/** }
  ftl-provisioner-cmd: { in: cmd/ftl-provisioner/** }
  ftl-proxy-pg-cmd: { in: cmd/ftl-proxy-pg/** }
  devel-provisioner-cmd: { in: cmd/devel-provisioner/** }

  go2proto: { in: cmd/go2proto/** }

  lint-commit-or-rollback-cmd: { in: cmd/lint-commit-or-rollback/** }
  databasetesting: { in: backend/controller/sql/databasetesting/** }
  sql: { in: backend/controller/sql/** }
  # TODO: Nothing outside of the go-runtime package should depend on reflection.
  reflection: { in: go-runtime/ftl/reflection/** }
  # TODO: Nothing outside of the go-runtime package should depend on reflection.
  encoding: { in: go-runtime/encoding/** }
  leases: { in: backend/controller/leases/** }

  smoketest: { in: smoketest/** }


excludeFiles:
  - ".*/testdata/.*"
  - ".*/\\.ftl/.*"
  - "/examples/.*"
  - "/jvm-runtime/.*"

allow:
  depOnAnyVendor: true

commonComponents:
  - common
  - internal
  - protos
  - schema
  - ftl
  - libdal

deps:
  controller:
    mayDependOn:
      - controller
      - frontend
      - timeline-service #TODO: Timeline should have a separate client package.
  runner:
    mayDependOn:
      - runner
  go-runtime:
    mayDependOn:
      - go-runtime
  python-runtime:
    mayDependOn:
      - python-runtime
  ftl-cmd:
    mayDependOn:
      - controller
      - protos
      - schema
      - ftl
      - jvm-runtime # TODO: When we decouple runtimes, this should be removed.
      - go-runtime # TODO: When we decouple runtimes, this should be removed.
      - provisioner-service
      - timeline-service
      - ingress-service
      - cron-service
  ftl-controller-cmd:
    mayDependOn:
      - controller
      - protos
      - schema
      - ftl
      - timeline-service #TODO: Timeline should have a separate client package.
  ftl-runner-cmd:
    mayDependOn:
      - runner
  ftl-initdb-cmd:
    mayDependOn:
      - databasetesting
  ftl-cron-cmd:
    mayDependOn:
      - cron-service
      - timeline-service #TODO: Timeline should have a separate client package.
  ftl-http-ingress-cmd:
    mayDependOn:
      - ingress-service
      - timeline-service #TODO: Timeline should have a separate client package.
  ftl-provisioner-cmd:
    mayDependOn:
      - provisioner-service
  ftl-timeline-cmd:
    mayDependOn:
      - timeline-service
  ftl-lease-cmd:
    mayDependOn:
      - lease-service
  databasetesting:
    mayDependOn:
      - sql
  sql:
    mayDependOn:
      - sql
      - leases
  cron-service:
    mayDependOn:
      - cron-service
      - timeline-service #TODO: Timeline should have a separate client package.
  ingress-service:
    mayDependOn:
      - ingress-service
      - timeline-service #TODO: Timeline should have a separate client package.
  provisioner-service:
    mayDependOn:
      - provisioner-service
  smoketest:
    mayDependOn:
      - go-runtime