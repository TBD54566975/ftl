// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: xyz/block/ftl/schema/v1/schema.proto
// Protobuf Java Version: 4.29.0

package xyz.block.ftl.schema.v1;

public interface MetadataOrBuilder extends
    // @@protoc_insertion_point(interface_extends:xyz.block.ftl.schema.v1.Metadata)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>.xyz.block.ftl.schema.v1.MetadataAlias alias = 5 [json_name = "alias"];</code>
   * @return Whether the alias field is set.
   */
  boolean hasAlias();
  /**
   * <code>.xyz.block.ftl.schema.v1.MetadataAlias alias = 5 [json_name = "alias"];</code>
   * @return The alias.
   */
  xyz.block.ftl.schema.v1.MetadataAlias getAlias();
  /**
   * <code>.xyz.block.ftl.schema.v1.MetadataAlias alias = 5 [json_name = "alias"];</code>
   */
  xyz.block.ftl.schema.v1.MetadataAliasOrBuilder getAliasOrBuilder();

  /**
   * <code>.xyz.block.ftl.schema.v1.MetadataArtefact artefact = 14 [json_name = "artefact"];</code>
   * @return Whether the artefact field is set.
   */
  boolean hasArtefact();
  /**
   * <code>.xyz.block.ftl.schema.v1.MetadataArtefact artefact = 14 [json_name = "artefact"];</code>
   * @return The artefact.
   */
  xyz.block.ftl.schema.v1.MetadataArtefact getArtefact();
  /**
   * <code>.xyz.block.ftl.schema.v1.MetadataArtefact artefact = 14 [json_name = "artefact"];</code>
   */
  xyz.block.ftl.schema.v1.MetadataArtefactOrBuilder getArtefactOrBuilder();

  /**
   * <code>.xyz.block.ftl.schema.v1.MetadataCalls calls = 1 [json_name = "calls"];</code>
   * @return Whether the calls field is set.
   */
  boolean hasCalls();
  /**
   * <code>.xyz.block.ftl.schema.v1.MetadataCalls calls = 1 [json_name = "calls"];</code>
   * @return The calls.
   */
  xyz.block.ftl.schema.v1.MetadataCalls getCalls();
  /**
   * <code>.xyz.block.ftl.schema.v1.MetadataCalls calls = 1 [json_name = "calls"];</code>
   */
  xyz.block.ftl.schema.v1.MetadataCallsOrBuilder getCallsOrBuilder();

  /**
   * <code>.xyz.block.ftl.schema.v1.MetadataConfig config = 10 [json_name = "config"];</code>
   * @return Whether the config field is set.
   */
  boolean hasConfig();
  /**
   * <code>.xyz.block.ftl.schema.v1.MetadataConfig config = 10 [json_name = "config"];</code>
   * @return The config.
   */
  xyz.block.ftl.schema.v1.MetadataConfig getConfig();
  /**
   * <code>.xyz.block.ftl.schema.v1.MetadataConfig config = 10 [json_name = "config"];</code>
   */
  xyz.block.ftl.schema.v1.MetadataConfigOrBuilder getConfigOrBuilder();

  /**
   * <code>.xyz.block.ftl.schema.v1.MetadataCronJob cron_job = 3 [json_name = "cronJob"];</code>
   * @return Whether the cronJob field is set.
   */
  boolean hasCronJob();
  /**
   * <code>.xyz.block.ftl.schema.v1.MetadataCronJob cron_job = 3 [json_name = "cronJob"];</code>
   * @return The cronJob.
   */
  xyz.block.ftl.schema.v1.MetadataCronJob getCronJob();
  /**
   * <code>.xyz.block.ftl.schema.v1.MetadataCronJob cron_job = 3 [json_name = "cronJob"];</code>
   */
  xyz.block.ftl.schema.v1.MetadataCronJobOrBuilder getCronJobOrBuilder();

  /**
   * <code>.xyz.block.ftl.schema.v1.MetadataDatabases databases = 4 [json_name = "databases"];</code>
   * @return Whether the databases field is set.
   */
  boolean hasDatabases();
  /**
   * <code>.xyz.block.ftl.schema.v1.MetadataDatabases databases = 4 [json_name = "databases"];</code>
   * @return The databases.
   */
  xyz.block.ftl.schema.v1.MetadataDatabases getDatabases();
  /**
   * <code>.xyz.block.ftl.schema.v1.MetadataDatabases databases = 4 [json_name = "databases"];</code>
   */
  xyz.block.ftl.schema.v1.MetadataDatabasesOrBuilder getDatabasesOrBuilder();

  /**
   * <code>.xyz.block.ftl.schema.v1.MetadataEncoding encoding = 9 [json_name = "encoding"];</code>
   * @return Whether the encoding field is set.
   */
  boolean hasEncoding();
  /**
   * <code>.xyz.block.ftl.schema.v1.MetadataEncoding encoding = 9 [json_name = "encoding"];</code>
   * @return The encoding.
   */
  xyz.block.ftl.schema.v1.MetadataEncoding getEncoding();
  /**
   * <code>.xyz.block.ftl.schema.v1.MetadataEncoding encoding = 9 [json_name = "encoding"];</code>
   */
  xyz.block.ftl.schema.v1.MetadataEncodingOrBuilder getEncodingOrBuilder();

  /**
   * <code>.xyz.block.ftl.schema.v1.MetadataIngress ingress = 2 [json_name = "ingress"];</code>
   * @return Whether the ingress field is set.
   */
  boolean hasIngress();
  /**
   * <code>.xyz.block.ftl.schema.v1.MetadataIngress ingress = 2 [json_name = "ingress"];</code>
   * @return The ingress.
   */
  xyz.block.ftl.schema.v1.MetadataIngress getIngress();
  /**
   * <code>.xyz.block.ftl.schema.v1.MetadataIngress ingress = 2 [json_name = "ingress"];</code>
   */
  xyz.block.ftl.schema.v1.MetadataIngressOrBuilder getIngressOrBuilder();

  /**
   * <code>.xyz.block.ftl.schema.v1.MetadataPublisher publisher = 12 [json_name = "publisher"];</code>
   * @return Whether the publisher field is set.
   */
  boolean hasPublisher();
  /**
   * <code>.xyz.block.ftl.schema.v1.MetadataPublisher publisher = 12 [json_name = "publisher"];</code>
   * @return The publisher.
   */
  xyz.block.ftl.schema.v1.MetadataPublisher getPublisher();
  /**
   * <code>.xyz.block.ftl.schema.v1.MetadataPublisher publisher = 12 [json_name = "publisher"];</code>
   */
  xyz.block.ftl.schema.v1.MetadataPublisherOrBuilder getPublisherOrBuilder();

  /**
   * <code>.xyz.block.ftl.schema.v1.MetadataRetry retry = 6 [json_name = "retry"];</code>
   * @return Whether the retry field is set.
   */
  boolean hasRetry();
  /**
   * <code>.xyz.block.ftl.schema.v1.MetadataRetry retry = 6 [json_name = "retry"];</code>
   * @return The retry.
   */
  xyz.block.ftl.schema.v1.MetadataRetry getRetry();
  /**
   * <code>.xyz.block.ftl.schema.v1.MetadataRetry retry = 6 [json_name = "retry"];</code>
   */
  xyz.block.ftl.schema.v1.MetadataRetryOrBuilder getRetryOrBuilder();

  /**
   * <code>.xyz.block.ftl.schema.v1.MetadataSQLMigration sql_migration = 13 [json_name = "sqlMigration"];</code>
   * @return Whether the sqlMigration field is set.
   */
  boolean hasSqlMigration();
  /**
   * <code>.xyz.block.ftl.schema.v1.MetadataSQLMigration sql_migration = 13 [json_name = "sqlMigration"];</code>
   * @return The sqlMigration.
   */
  xyz.block.ftl.schema.v1.MetadataSQLMigration getSqlMigration();
  /**
   * <code>.xyz.block.ftl.schema.v1.MetadataSQLMigration sql_migration = 13 [json_name = "sqlMigration"];</code>
   */
  xyz.block.ftl.schema.v1.MetadataSQLMigrationOrBuilder getSqlMigrationOrBuilder();

  /**
   * <code>.xyz.block.ftl.schema.v1.MetadataSecrets secrets = 11 [json_name = "secrets"];</code>
   * @return Whether the secrets field is set.
   */
  boolean hasSecrets();
  /**
   * <code>.xyz.block.ftl.schema.v1.MetadataSecrets secrets = 11 [json_name = "secrets"];</code>
   * @return The secrets.
   */
  xyz.block.ftl.schema.v1.MetadataSecrets getSecrets();
  /**
   * <code>.xyz.block.ftl.schema.v1.MetadataSecrets secrets = 11 [json_name = "secrets"];</code>
   */
  xyz.block.ftl.schema.v1.MetadataSecretsOrBuilder getSecretsOrBuilder();

  /**
   * <code>.xyz.block.ftl.schema.v1.MetadataSubscriber subscriber = 7 [json_name = "subscriber"];</code>
   * @return Whether the subscriber field is set.
   */
  boolean hasSubscriber();
  /**
   * <code>.xyz.block.ftl.schema.v1.MetadataSubscriber subscriber = 7 [json_name = "subscriber"];</code>
   * @return The subscriber.
   */
  xyz.block.ftl.schema.v1.MetadataSubscriber getSubscriber();
  /**
   * <code>.xyz.block.ftl.schema.v1.MetadataSubscriber subscriber = 7 [json_name = "subscriber"];</code>
   */
  xyz.block.ftl.schema.v1.MetadataSubscriberOrBuilder getSubscriberOrBuilder();

  /**
   * <code>.xyz.block.ftl.schema.v1.MetadataTypeMap type_map = 8 [json_name = "typeMap"];</code>
   * @return Whether the typeMap field is set.
   */
  boolean hasTypeMap();
  /**
   * <code>.xyz.block.ftl.schema.v1.MetadataTypeMap type_map = 8 [json_name = "typeMap"];</code>
   * @return The typeMap.
   */
  xyz.block.ftl.schema.v1.MetadataTypeMap getTypeMap();
  /**
   * <code>.xyz.block.ftl.schema.v1.MetadataTypeMap type_map = 8 [json_name = "typeMap"];</code>
   */
  xyz.block.ftl.schema.v1.MetadataTypeMapOrBuilder getTypeMapOrBuilder();

  xyz.block.ftl.schema.v1.Metadata.ValueCase getValueCase();
}
