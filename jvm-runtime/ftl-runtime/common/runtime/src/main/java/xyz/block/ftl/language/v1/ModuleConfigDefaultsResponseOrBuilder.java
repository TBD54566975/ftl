// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: xyz/block/ftl/language/v1/language.proto
// Protobuf Java Version: 4.29.0

package xyz.block.ftl.language.v1;

public interface ModuleConfigDefaultsResponseOrBuilder extends
    // @@protoc_insertion_point(interface_extends:xyz.block.ftl.language.v1.ModuleConfigDefaultsResponse)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Default relative path to the directory containing all build artifacts for deployments
   * </pre>
   *
   * <code>string deploy_dir = 1 [json_name = "deployDir"];</code>
   * @return The deployDir.
   */
  java.lang.String getDeployDir();
  /**
   * <pre>
   * Default relative path to the directory containing all build artifacts for deployments
   * </pre>
   *
   * <code>string deploy_dir = 1 [json_name = "deployDir"];</code>
   * @return The bytes for deployDir.
   */
  com.google.protobuf.ByteString
      getDeployDirBytes();

  /**
   * <pre>
   * Default build command
   * </pre>
   *
   * <code>optional string build = 2 [json_name = "build"];</code>
   * @return Whether the build field is set.
   */
  boolean hasBuild();
  /**
   * <pre>
   * Default build command
   * </pre>
   *
   * <code>optional string build = 2 [json_name = "build"];</code>
   * @return The build.
   */
  java.lang.String getBuild();
  /**
   * <pre>
   * Default build command
   * </pre>
   *
   * <code>optional string build = 2 [json_name = "build"];</code>
   * @return The bytes for build.
   */
  com.google.protobuf.ByteString
      getBuildBytes();

  /**
   * <pre>
   * Dev mode build command, if different from the regular build command
   * </pre>
   *
   * <code>optional string dev_mode_build = 3 [json_name = "devModeBuild"];</code>
   * @return Whether the devModeBuild field is set.
   */
  boolean hasDevModeBuild();
  /**
   * <pre>
   * Dev mode build command, if different from the regular build command
   * </pre>
   *
   * <code>optional string dev_mode_build = 3 [json_name = "devModeBuild"];</code>
   * @return The devModeBuild.
   */
  java.lang.String getDevModeBuild();
  /**
   * <pre>
   * Dev mode build command, if different from the regular build command
   * </pre>
   *
   * <code>optional string dev_mode_build = 3 [json_name = "devModeBuild"];</code>
   * @return The bytes for devModeBuild.
   */
  com.google.protobuf.ByteString
      getDevModeBuildBytes();

  /**
   * <pre>
   * Build lock path to prevent concurrent builds
   * </pre>
   *
   * <code>optional string build_lock = 4 [json_name = "buildLock"];</code>
   * @return Whether the buildLock field is set.
   */
  boolean hasBuildLock();
  /**
   * <pre>
   * Build lock path to prevent concurrent builds
   * </pre>
   *
   * <code>optional string build_lock = 4 [json_name = "buildLock"];</code>
   * @return The buildLock.
   */
  java.lang.String getBuildLock();
  /**
   * <pre>
   * Build lock path to prevent concurrent builds
   * </pre>
   *
   * <code>optional string build_lock = 4 [json_name = "buildLock"];</code>
   * @return The bytes for buildLock.
   */
  com.google.protobuf.ByteString
      getBuildLockBytes();

  /**
   * <pre>
   * Default relative path to the directory containing generated schema files
   * </pre>
   *
   * <code>optional string generated_schema_dir = 5 [json_name = "generatedSchemaDir"];</code>
   * @return Whether the generatedSchemaDir field is set.
   */
  boolean hasGeneratedSchemaDir();
  /**
   * <pre>
   * Default relative path to the directory containing generated schema files
   * </pre>
   *
   * <code>optional string generated_schema_dir = 5 [json_name = "generatedSchemaDir"];</code>
   * @return The generatedSchemaDir.
   */
  java.lang.String getGeneratedSchemaDir();
  /**
   * <pre>
   * Default relative path to the directory containing generated schema files
   * </pre>
   *
   * <code>optional string generated_schema_dir = 5 [json_name = "generatedSchemaDir"];</code>
   * @return The bytes for generatedSchemaDir.
   */
  com.google.protobuf.ByteString
      getGeneratedSchemaDirBytes();

  /**
   * <pre>
   * Default patterns to watch for file changes, relative to the module directory
   * </pre>
   *
   * <code>repeated string watch = 6 [json_name = "watch"];</code>
   * @return A list containing the watch.
   */
  java.util.List<java.lang.String>
      getWatchList();
  /**
   * <pre>
   * Default patterns to watch for file changes, relative to the module directory
   * </pre>
   *
   * <code>repeated string watch = 6 [json_name = "watch"];</code>
   * @return The count of watch.
   */
  int getWatchCount();
  /**
   * <pre>
   * Default patterns to watch for file changes, relative to the module directory
   * </pre>
   *
   * <code>repeated string watch = 6 [json_name = "watch"];</code>
   * @param index The index of the element to return.
   * @return The watch at the given index.
   */
  java.lang.String getWatch(int index);
  /**
   * <pre>
   * Default patterns to watch for file changes, relative to the module directory
   * </pre>
   *
   * <code>repeated string watch = 6 [json_name = "watch"];</code>
   * @param index The index of the value to return.
   * @return The bytes of the watch at the given index.
   */
  com.google.protobuf.ByteString
      getWatchBytes(int index);

  /**
   * <pre>
   * Default language specific configuration.
   * These defaults are filled in by looking at each root key only. If the key is not present, the default is used.
   * </pre>
   *
   * <code>.google.protobuf.Struct language_config = 7 [json_name = "languageConfig"];</code>
   * @return Whether the languageConfig field is set.
   */
  boolean hasLanguageConfig();
  /**
   * <pre>
   * Default language specific configuration.
   * These defaults are filled in by looking at each root key only. If the key is not present, the default is used.
   * </pre>
   *
   * <code>.google.protobuf.Struct language_config = 7 [json_name = "languageConfig"];</code>
   * @return The languageConfig.
   */
  com.google.protobuf.Struct getLanguageConfig();
  /**
   * <pre>
   * Default language specific configuration.
   * These defaults are filled in by looking at each root key only. If the key is not present, the default is used.
   * </pre>
   *
   * <code>.google.protobuf.Struct language_config = 7 [json_name = "languageConfig"];</code>
   */
  com.google.protobuf.StructOrBuilder getLanguageConfigOrBuilder();

  /**
   * <pre>
   * Default directory containing the SQL migration files
   * </pre>
   *
   * <code>string sql_migration_dir = 8 [json_name = "sqlMigrationDir"];</code>
   * @return The sqlMigrationDir.
   */
  java.lang.String getSqlMigrationDir();
  /**
   * <pre>
   * Default directory containing the SQL migration files
   * </pre>
   *
   * <code>string sql_migration_dir = 8 [json_name = "sqlMigrationDir"];</code>
   * @return The bytes for sqlMigrationDir.
   */
  com.google.protobuf.ByteString
      getSqlMigrationDirBytes();
}
