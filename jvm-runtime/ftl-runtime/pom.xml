<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>xyz.block.ftl</groupId>
    <artifactId>ftl-jvm-parent</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>pom</packaging>
    <name>Ftl Java Runtime - Parent</name>
    <description>Towards a ùù∫-calculus for large-scale systems</description>
    <url>https://tbd54566975.github.io/ftl/</url>

    <scm>
        <connection>scm:git:git://github.com/TBD54566975/ftl.git</connection>
        <!-- This has to be HTTPS, not git://, for maven-release-plugin to do AUTH correctly -->
        <developerConnection>scm:git:https://github.com/TBD54566975/ftl.git</developerConnection>
        <url>https://github.com/TBD54566975/ftl</url>
        <tag>HEAD</tag>
    </scm>

    <developers>
        <developer>
            <id>TBD54566975</id>
            <name>Block, Inc.</name>
            <email>releases@tbd.email</email>
        </developer>
    </developers>

    <issueManagement>
        <system>github</system>
        <url>https://github.com/TBD54566975/ftl/issues</url>
    </issueManagement>

    <licenses>
        <license>
            <name>Apache License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <modules>
        <module>common</module>
        <module>java</module>
        <module>kotlin</module>
        <module>test-framework</module>
    </modules>

    <properties>
        <compiler-plugin.version>3.13.0</compiler-plugin.version>
        <failsafe-plugin.version>${surefire-plugin.version}</failsafe-plugin.version>
        <maven.compiler.release>17</maven.compiler.release>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <quarkus.version>3.14.2</quarkus.version>
        <surefire-plugin.version>3.5.0</surefire-plugin.version>
        <rootDir>${basedir}/../../../..</rootDir>
        <grpc.version>1.66.0</grpc.version>
        <javapoet.version>1.13.0</javapoet.version>
        <version.formatter.plugin>2.24.1</version.formatter.plugin>
        <version.impsort.plugin>1.12.0</version.impsort.plugin>
        <kotlinpoet.version>1.18.1</kotlinpoet.version>
        <tomlj.version>1.1.1</tomlj.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>io.quarkus</groupId>
                <artifactId>quarkus-bom</artifactId>
                <version>${quarkus.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>xyz.block.ftl</groupId>
                <artifactId>ftl-jvm-runtime</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>xyz.block.ftl</groupId>
                <artifactId>ftl-java-runtime</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>xyz.block.ftl</groupId>
                <artifactId>ftl-java-runtime-deployment</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>xyz.block.ftl</groupId>
                <artifactId>ftl-kotlin-runtime</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>xyz.block.ftl</groupId>
                <artifactId>ftl-jvm-runtime-deployment</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>xyz.block.ftl</groupId>
                <artifactId>ftl-jvm-test-framework</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>io.grpc</groupId>
                <artifactId>grpc-bom</artifactId>
                <version>${grpc.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.tomlj</groupId>
                <artifactId>tomlj</artifactId>
                <version>${tomlj.version}</version>
            </dependency>

            <dependency>
                <groupId>com.squareup</groupId>
                <artifactId>javapoet</artifactId>
                <version>${javapoet.version}</version>
            </dependency>
            <dependency>
                <groupId>com.squareup</groupId>
                <artifactId>kotlinpoet-jvm</artifactId>
                <version>${kotlinpoet.version}</version>
            </dependency>


            <dependency>
                <groupId>com.squareup.wire</groupId>
                <artifactId>wire-runtime-jvm</artifactId>
                <version>${wire.version}</version>
            </dependency>
            <dependency>
                <groupId>com.squareup.wire</groupId>
                <artifactId>wire-grpc-server</artifactId>
                <version>${wire.version}</version>
            </dependency>
            <dependency>
                <groupId>com.squareup.wire</groupId>
                <artifactId>wire-grpc-client-jvm</artifactId>
                <version>${wire.version}</version>
            </dependency>

            <!-- GRPC dependencies -->
            <dependency>
                <groupId>io.grpc</groupId>
                <artifactId>grpc-netty</artifactId>
                <version>${grpc.version}</version>
            </dependency>
            <dependency>
                <groupId>io.grpc</groupId>
                <artifactId>grpc-protobuf</artifactId>
                <version>${grpc.version}</version>
            </dependency>
            <dependency>
                <groupId>io.grpc</groupId>
                <artifactId>grpc-stub</artifactId>
                <version>${grpc.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>io.quarkus</groupId>
                    <artifactId>quarkus-maven-plugin</artifactId>
                    <version>${quarkus.version}</version>
                </plugin>
                <plugin>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${surefire-plugin.version}</version>
                    <configuration>
                        <systemPropertyVariables>
                            <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
                            <maven.home>${maven.home}</maven.home>
                            <maven.repo>${settings.localRepository}</maven.repo>
                        </systemPropertyVariables>
                    </configuration>
                </plugin>
                <plugin>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>${failsafe-plugin.version}</version>
                    <configuration>
                        <systemPropertyVariables>
                            <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
                            <maven.home>${maven.home}</maven.home>
                            <maven.repo>${settings.localRepository}</maven.repo>
                        </systemPropertyVariables>
                    </configuration>
                </plugin>
                <plugin>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${compiler-plugin.version}</version>
                    <configuration>
                        <compilerArgs>
                            <arg>-parameters</arg>
                        </compilerArgs>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>net.revelc.code.formatter</groupId>
                    <artifactId>formatter-maven-plugin</artifactId>
                    <version>${version.formatter.plugin}</version>
                    <dependencies>
                        <dependency>
                            <artifactId>quarkus-ide-config</artifactId>
                            <groupId>io.quarkus</groupId>
                            <version>${quarkus.version}</version>
                        </dependency>
                    </dependencies>
                    <configuration>
                        <!-- store outside of target to speed up formatting when mvn clean is used -->
                        <cachedir>.cache/formatter-maven-plugin-${version.formatter.plugin}</cachedir>
                        <configFile>eclipse-format.xml</configFile>
                        <lineEnding>LF</lineEnding>
                        <skip>${format.skip}</skip>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>net.revelc.code</groupId>
                    <artifactId>impsort-maven-plugin</artifactId>
                    <version>${version.impsort.plugin}</version>
                    <configuration>
                        <!-- store outside of target to speed up formatting when mvn clean is used -->
                        <cachedir>.cache/impsort-maven-plugin-${version.impsort.plugin}</cachedir>
                        <groups>java.,javax.,jakarta.,org.,com.</groups>
                        <staticGroups>*</staticGroups>
                        <skip>${format.skip}</skip>
                        <removeUnused>true</removeUnused>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>io.quarkus</groupId>
                    <artifactId>quarkus-extension-maven-plugin</artifactId>
                    <version>${quarkus.version}</version>
                </plugin>
                <plugin>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>2.8.2</version>
                    <configuration>
                        <deployAtEnd>true</deployAtEnd>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>3.3.0</version>
                    <executions>
                        <execution>
                            <id>attach-sources</id>
                            <goals>
                                <goal>jar</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.simplify4u.plugins</groupId>
                    <artifactId>sign-maven-plugin</artifactId>
                    <version>1.1.0</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>sign</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <!-- generates a JAR file containing the source code of the project -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
            </plugin>
            <!-- handles the deployment of the project's artifacts to a remote repository -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
            </plugin>
        </plugins>
    </build>


    <profiles>
        <profile>
            <id>format</id>
            <activation>
                <activeByDefault>true</activeByDefault>
                <property>
                    <name>!no-format</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>net.revelc.code.formatter</groupId>
                        <artifactId>formatter-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <phase>process-sources</phase>
                                <goals>
                                    <goal>format</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>net.revelc.code</groupId>
                        <artifactId>impsort-maven-plugin</artifactId>
                        <configuration>
                            <removeUnused>true</removeUnused>
                        </configuration>
                        <executions>
                            <execution>
                                <id>sort-imports</id>
                                <goals>
                                    <goal>sort</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>validate</id>
            <activation>
                <activeByDefault>true</activeByDefault>
                <property>
                    <name>no-format</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>net.revelc.code.formatter</groupId>
                        <artifactId>formatter-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <phase>process-sources</phase>
                                <goals>
                                    <goal>validate</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>net.revelc.code</groupId>
                        <artifactId>impsort-maven-plugin</artifactId>
                        <configuration>
                            <removeUnused>true</removeUnused>
                        </configuration>
                        <executions>
                            <execution>
                                <id>check-imports</id>
                                <goals>
                                    <goal>check</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <!-- used to sign artifacts during the build process. It activates the sign-maven-plugin, 
             which automatically signs the project's artifacts. This is typically required when 
             deploying to Maven Central or other repositories that mandate signed artifacts for 
             security and authenticity verification. Activate this profile when you need to create 
             signed releases, usually in conjunction with the deployment to public repositories. -->
        <profile>
            <id>sign-artifacts</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.simplify4u.plugins</groupId>
                        <artifactId>sign-maven-plugin</artifactId>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <!-- used to deploy artifacts to Maven Central via OSSRH (OSS Repository Hosting).
             It configures the nexus-staging-maven-plugin for automated deployment and release,
             and sets up the distribution management for both snapshot and release repositories.
             Activate this profile when deploying open-source projects to Maven Central. -->
        <profile>
            <!-- https://central.sonatype.org/publish/publish-maven/#deployment -->
            <id>ossrh</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.sonatype.plugins</groupId>
                        <artifactId>nexus-staging-maven-plugin</artifactId>
                        <version>1.6.13</version>
                        <extensions>true</extensions>
                        <configuration>
                            <serverId>ossrh-releases</serverId>
                            <nexusUrl>https://s01.oss.sonatype.org/</nexusUrl>
                            <autoReleaseAfterClose>true</autoReleaseAfterClose>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
            <!-- specifies where the project artifacts should be distributed or deployed. -->
            <!-- tells Maven where to deploy your project's artifacts when you run mvn deploy -->
            <distributionManagement>
                <snapshotRepository>
                    <id>ossrh-snapshots</id>
                    <url>https://s01.oss.sonatype.org/content/repositories/snapshots</url>
                </snapshotRepository>
                <!-- Sonatype's OSSRH - replicates to Maven Central within 30min of publish -->
                <repository>
                    <id>ossrh-releases</id>
                    <url>https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/</url>
                </repository>
            </distributionManagement>
        </profile>
    </profiles>

    <!-- specifies where the project artifacts should be distributed or deployed.
         tells Maven where to deploy your project's artifacts when you run mvn deploy -->
    <distributionManagement>
        <!-- primary release repository. not being used yet -->
        <repository>
            <uniqueVersion>false</uniqueVersion>
            <id>tbd-oss-releases</id>
            <name>TBD OSS Releases Repository</name>
            <url>https://blockxyz.jfrog.io/artifactory/tbd-oss-releases-maven2</url>
            <layout>default</layout>
        </repository>
        <!-- primary snapshot repository for all "*-SNAPSHOT" artifacts. not yet being used -->
        <snapshotRepository>
            <uniqueVersion>false</uniqueVersion>
            <id>tbd-oss-snapshots</id>
            <name>TBD OSS Snapshots Repository</name>
            <url>https://blockxyz.jfrog.io/artifactory/tbd-oss-snapshots-maven2</url>
            <layout>default</layout>
        </snapshotRepository>
    </distributionManagement>

    <!-- additional repositories that we can pull dependencies from -->
    <repositories>
        <!-- mirror for all third-party dependencies. acts as a redundancy that we can failover to if third-party deps become
             unavailable -->
        <repository>
            <id>tbd-oss-thirdparty</id>
            <name>tbd-oss-thirdparty</name>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
            <url>https://blockxyz.jfrog.io/artifactory/tbd-oss-thirdparty-maven2/</url>
        </repository>
        <!-- snapshot repository. -->
        <repository>
            <id>tbd-oss-snapshots</id>
            <name>tbd-oss-snapshots</name>
            <releases>
                <enabled>false</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
            <url>https://blockxyz.jfrog.io/artifactory/tbd-oss-snapshots-maven2/</url>
        </repository>
    </repositories>

    <!-- additional repositories that we can pull plugins from -->
    <pluginRepositories>
        <pluginRepository>
        <id>tbd-oss-thirdparty</id>
        <name>tbd-oss-thirdparty</name>
        <releases>
            <enabled>true</enabled>
        </releases>
        <snapshots>
            <enabled>false</enabled>
        </snapshots>
        <url>https://blockxyz.jfrog.io/artifactory/tbd-oss-thirdparty-maven2/</url>
        </pluginRepository>
    </pluginRepositories>
</project>
