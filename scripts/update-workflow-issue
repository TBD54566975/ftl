#!/bin/bash

map_to_markdown() {
  echo 'map("- #\(.number) \(.labels | map(select(.name != "run-all")) | map("https://github.com/TBD54566975/ftl/labels/\(.name | gsub(" ";"%20"))") | join(" "))")[]'
}

list_issues() {
  gh issue list "$@" --json number,labels --jq "$(map_to_markdown)" | sort -n
}

list_prs() {
  gh pr list "$@" --json number,labels --jq "$(map_to_markdown)" | sort -n
}

list_issues_and_prs() {
  user="$1"
  shift
  (gh pr list -A "$user" "$@" --json number,labels,mergedAt | jq '[.[] | .["closedAt"] = .mergedAt | del(.mergedAt)]'; gh issue list -a "$user" "$@" --json number,labels,closedAt) | jq '.[]' | jq -rs 'sort_by(.closedAt) | reverse' | jq -r "$(map_to_markdown)"
}

list_prioritized_issues() {
  gh issue list "$@" --json number,labels | jq '.[]' | jq -s '
    map(
      . as $issue |
      ($issue.labels | map(select(.name == "P0")) | length > 0) as $p0 |
      ($issue.labels | map(select(.name == "P1")) | length > 0) as $p1 |
      ($issue.labels | map(select(.name == "P2")) | length > 0) as $p2 |
      ($issue.labels | map(select(.name == "P3")) | length > 0) as $p3 |
      $issue + {priority: (if $p0 then 0 elif $p1 then 1 elif $p2 then 2 elif $p3 then 3 else 4 end)}
    ) |
    sort_by(.priority) |
    map(del(.priority))
  ' | jq -r "$(map_to_markdown)"
}

update() {
  if test -z "$NOOP"; then
    gh issue edit -F - 728
  else
    cat
  fi
}

update <<EOF
<!-- This file is generated by scripts/update-workflow-issue. Do not edit manually. -->

$(
  issues="$(list_issues --label P0)"
  test -z "$issues" && exit 0

  echo "### https://github.com/TBD54566975/ftl/labels/P0"
  echo
  echo "> [!WARNING]"
  echo "> These issues are P0 and need immediate attention."
  echo "$issues"
)

### Active and recent issues

$(

if [ "$(uname -o)" = "GNU/Linux" ] || date --help | grep -q "GNU"; then
  date="$(date -d "- 5 days" +%Y-%m-%d)"
else
  date="$(date -v "-5d" +%Y-%m-%d)"
fi

gh api -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" /orgs/TBD54566975/teams/ftl-team/members | jq -r '.[].login' | grep -v dhanji | sort | while read -r member; do
  echo "@$member [ðŸ”Ž](https://github.com/TBD54566975/ftl/issues/assigned/$member)"
  echo
  list_issues_and_prs "$member"
  list_issues_and_prs "$member" -s closed -S "closed:>$date"
  echo
done
)

$(
  issues="$(list_issues --label triage)"
  test -z "$issues" && exit 0

  echo "### https://github.com/TBD54566975/ftl/labels/triage"
  echo
  echo "$issues"
)

### https://github.com/TBD54566975/ftl/labels/next

$(
  issues="$(list_prioritized_issues --label next)"
  if test -z "$issues"; then
    echo "> [!WARNING]"
    echo "> There are no issues labelled for upcoming work."
    exit 0
  fi
  echo "$issues"
)

$(
  issues="$(list_issues --label epic)"
  test -z "$issues" && exit 0

  echo "### https://github.com/TBD54566975/ftl/labels/epic"
  echo "$issues"
)

EOF