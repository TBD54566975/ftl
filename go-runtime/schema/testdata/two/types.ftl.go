// Code generated by FTL. DO NOT EDIT.
package two

import (
    "context"

     "github.com/TBD54566975/ftl/go-runtime/ftl"
    "github.com/TBD54566975/ftl/go-runtime/ftl/reflection"
    "github.com/TBD54566975/ftl/go-runtime/server"
    "github.com/jpillora/backoff"
    lib "github.com/TBD54566975/ftl/go-runtime/schema/testdata"

    ftlbuiltin "ftl/builtin"
)

type CallsTwoClient func(context.Context, Payload[string]) (Payload[string], error)

type TwoClient func(context.Context, Payload[string]) (Payload[string], error)

type CallsTwoAndThreeClient func(context.Context, Payload[string]) (Payload[string], error)

type ThreeClient func(context.Context, Payload[string]) (Payload[string], error)

type IngressClient func(context.Context, ftlbuiltin.HttpRequest[PostRequest, ftl.Unit, ftl.Unit]) (ftlbuiltin.HttpResponse[PostResponse, string], error)

type ReturnsUserClient func(context.Context) (UserResponse, error)

func init() {
	reflection.Register(
		reflection.SumType[TypeEnum](
			*new(Exported),
			*new(List),
			*new(Scalar),
			*new(WithoutDirective),
		),
		reflection.ExternalType(*new(backoff.Backoff)),
		reflection.ExternalType(*new(lib.NonFTLType)),
		reflection.ProvideResourcesForVerb(
            CallsTwo,
            server.VerbClient[TwoClient, Payload[string], Payload[string]](),
		),
		reflection.ProvideResourcesForVerb(
            Two,
		),
		reflection.ProvideResourcesForVerb(
            CallsTwoAndThree,
            server.VerbClient[ThreeClient, Payload[string], Payload[string]](),
            server.VerbClient[TwoClient, Payload[string], Payload[string]](),
		),
		reflection.ProvideResourcesForVerb(
            Three,
		),
		reflection.ProvideResourcesForVerb(
            Ingress,
		),
		reflection.ProvideResourcesForVerb(
            ReturnsUser,
		),
	)
}