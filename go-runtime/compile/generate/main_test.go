package generate

import (
	"strings"
	"testing"

	"github.com/alecthomas/assert/v2"

	"github.com/TBD54566975/ftl/backend/schema"
)

func TestGenerateMain(t *testing.T) {
	w := &strings.Builder{}
	err := Main(w, &schema.Module{
		Name: "echo",
		Decls: []schema.Decl{
			&schema.Verb{Name: "echo", Metadata: []schema.Metadata{
				&schema.MetadataCalls{Calls: []*schema.VerbRef{&schema.VerbRef{Module: "time", Name: "time"}}},
			}},
			&schema.Verb{Name: "anotherEcho"},
		},
	})
	assert.NoError(t, err)
	expected := `// Code generated by FTL. DO NOT EDIT.
package main

import (
	"context"

	"github.com/TBD54566975/ftl/backend/common/plugin"
	"github.com/TBD54566975/ftl/examples/echo"
	"github.com/TBD54566975/ftl/go-runtime/server"
	"github.com/TBD54566975/ftl/protos/xyz/block/ftl/v1/ftlv1connect"
)

func main() {
  verbConstructor := server.NewUserVerbServer("echo",
    server.Handle(echo.Echo),
    server.Handle(echo.AnotherEcho),
  )
  plugin.Start(context.Background(), "echo", verbConstructor, ftlv1connect.VerbServiceName, ftlv1connect.NewVerbServiceHandler)
}
`
	assert.Equal(t, expected, w.String())
}
