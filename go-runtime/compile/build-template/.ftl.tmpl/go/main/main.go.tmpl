// Code generated by FTL. DO NOT EDIT.
package main

import (
	"context"

{{- range .ExternalGoTypes }}

	{{.Import}}
{{- end}}

	"github.com/TBD54566975/ftl/backend/protos/xyz/block/ftl/v1/ftlv1connect"
	"github.com/TBD54566975/ftl/common/plugin"
{{- if or .SumTypes .ExternalGoTypes }}
	"github.com/TBD54566975/ftl/go-runtime/ftl/reflection"
{{- end }}
	"github.com/TBD54566975/ftl/go-runtime/server"
{{ range mainImports . }}
	"ftl/{{.}}"
{{- end}}
)
{{- if or .SumTypes .ExternalGoTypes }}

func init() {
	reflection.Register(
{{- range .SumTypes}}
		reflection.SumType[{{.Discriminator}}](
			{{- range .Variants}}
			*new({{.Name}}),
			{{- end}}
		),
{{- end}}
{{- range .ExternalGoTypes}}
        {{- range .Types}}
		reflection.ExternalType(*new({{.}})),
		{{- end}}
{{- end}}
	)
}
{{- end}}

func main() {
	verbConstructor := server.NewUserVerbServer("{{.Name}}",
{{- range .Verbs}}
	{{- if and .HasRequest .HasResponse}}
		server.HandleCall({{.Package}}.{{.Name}}),
	{{- else if .HasRequest}}
		server.HandleSink({{.Package}}.{{.Name}}),
	{{- else if .HasResponse}}
		server.HandleSource({{.Package}}.{{.Name}}),
	{{- else}}
		server.HandleEmpty({{.Package}}.{{.Name}}),
	{{- end}}
{{- end}}
	)
	plugin.Start(context.Background(), "{{.Name}}", verbConstructor, ftlv1connect.VerbServiceName, ftlv1connect.NewVerbServiceHandler)
}
