// Code generated by FTL. DO NOT EDIT.

package {{.Name}}

import (
  "context"
{{- range $import, $alias := (.|imports)}}
  {{if $alias}}{{$alias}} {{end}}"{{$import}}"
{{- end}}
)

var _ = context.Background

{{- range .Decls }}
{{if valueEnum .}}
{{$enumName := .Name -}}
//ftl:enum
type {{.Name|title}} {{enumType $ .}}
const (
  {{- range .Variants }}
  {{.Name|title}} {{$enumName}} = {{.Value|value}}
  {{- end}}
)
{{- else if is "Data" . }}
type {{.Name|title}}
{{- if .TypeParameters}}[
{{- range $i, $tp := .TypeParameters}}
{{- if $i}}, {{end}}{{$tp}} any
{{- end -}}
]{{- end}} struct {
  {{- range .Fields}}
  {{.Name|title}} {{type $ .Type}} `json:"{{.Name}}"`
  {{- end}}
}
{{- else if is "Verb" . -}}
{{.Comments|comment }}
{{if .Comments}}//
{{end -}}
//ftl:verb
{{- if and (eq (type $ .Request) "ftl.Unit") (eq (type $ .Response) "ftl.Unit")}}
func {{.Name|title}}(context.Context) error {
  panic("Verb stubs should not be called directly, instead use github.com/TBD54566975/ftl/runtime-go/ftl.CallEmpty()")
}
{{- else if eq (type $ .Request) "ftl.Unit"}}
func {{.Name|title}}(context.Context) ({{type $ .Response}}, error) {
  panic("Verb stubs should not be called directly, instead use github.com/TBD54566975/ftl/runtime-go/ftl.CallSource()")
}
{{- else if eq (type $ .Response) "ftl.Unit"}}
func {{.Name|title}}(context.Context, {{type $ .Request}}) error {
  panic("Verb stubs should not be called directly, instead use github.com/TBD54566975/ftl/runtime-go/ftl.CallSink()")
}
{{- else}}
func {{.Name|title}}(context.Context, {{type $ .Request}}) ({{type $ .Response}}, error) {
  panic("Verb stubs should not be called directly, instead use github.com/TBD54566975/ftl/runtime-go/ftl.Call()")
}
{{- end}}
{{- end}}
{{- end}}
