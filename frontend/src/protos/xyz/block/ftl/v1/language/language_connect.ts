// @generated by protoc-gen-connect-es v1.4.0 with parameter "target=ts"
// @generated from file xyz/block/ftl/v1/language/language.proto (package xyz.block.ftl.v1.language, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { PingRequest, PingResponse } from "../ftl_pb.js";
import { MethodIdempotency, MethodKind } from "@bufbuild/protobuf";
import { BuildEvent, BuildRequest, CreateModuleRequest, CreateModuleResponse, DependenciesRequest, DependenciesResponse, MetadataUpdatedRequest, MetadataUpdatedResponse, SchemaUpdatedRequest, SchemaUpdatedResponse } from "./language_pb.js";

/**
 * LanguageService allows a plugin to add support for a programming language.
 *
 * @generated from service xyz.block.ftl.v1.language.LanguageService
 */
export const LanguageService = {
  typeName: "xyz.block.ftl.v1.language.LanguageService",
  methods: {
    /**
     * Ping service for readiness.
     *
     * @generated from rpc xyz.block.ftl.v1.language.LanguageService.Ping
     */
    ping: {
      name: "Ping",
      I: PingRequest,
      O: PingResponse,
      kind: MethodKind.Unary,
      idempotency: MethodIdempotency.NoSideEffects,
    },
    /**
     * Generates files for a new empty module with the requested name
     *
     * @generated from rpc xyz.block.ftl.v1.language.LanguageService.CreateModule
     */
    createModule: {
      name: "CreateModule",
      I: CreateModuleRequest,
      O: CreateModuleResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Extract dependencies for a module
     *
     * @generated from rpc xyz.block.ftl.v1.language.LanguageService.GetDependencies
     */
    getDependencies: {
      name: "GetDependencies",
      I: DependenciesRequest,
      O: DependenciesResponse,
      kind: MethodKind.Unary,
    },
    /**
     * MetadataUpdated is called whenever the metadata for a module is updated.
     *
     * @generated from rpc xyz.block.ftl.v1.language.LanguageService.MetadataUpdated
     */
    metadataUpdated: {
      name: "MetadataUpdated",
      I: MetadataUpdatedRequest,
      O: MetadataUpdatedResponse,
      kind: MethodKind.Unary,
    },
    /**
     * SchemaUpdated is called whenever the relevant part of a schema is updated.
     *
     * The schema is not the full schema, rather it only modules in this module's dependency graph.
     * It does not contain the schema for this plugin's module.
     *
     * Language plugins should hold on to the latest schema they have seen.
     * SchemaUpdated is called:
     * - after ExtractDependencies and before Build (if there are any dependencies)
     * - when a dependant module is updated
     * - when the module's dependancies change
     *
     * @generated from rpc xyz.block.ftl.v1.language.LanguageService.SchemaUpdated
     */
    schemaUpdated: {
      name: "SchemaUpdated",
      I: SchemaUpdatedRequest,
      O: SchemaUpdatedResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Build the module
     * The request can also indicate whether the plugin should watch for changes to the module and automatically rebuild
     * The response stream can send LogMessages and BuildResults, and ends with a BuildResponse
     *
     * @generated from rpc xyz.block.ftl.v1.language.LanguageService.Build
     */
    build: {
      name: "Build",
      I: BuildRequest,
      O: BuildEvent,
      kind: MethodKind.ServerStreaming,
    },
  }
} as const;

