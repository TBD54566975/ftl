// @generated by protoc-gen-connect-es v1.6.1 with parameter "target=ts"
// @generated from file xyz/block/ftl/lease/v1/lease.proto (package xyz.block.ftl.lease.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { PingRequest, PingResponse } from "../../v1/ftl_pb.js";
import { MethodIdempotency, MethodKind } from "@bufbuild/protobuf";
import { AcquireLeaseRequest, AcquireLeaseResponse } from "./lease_pb.js";

/**
 * ModuleService is the service that modules use to interact with the Controller.
 *
 * @generated from service xyz.block.ftl.lease.v1.LeaseService
 */
export const LeaseService = {
  typeName: "xyz.block.ftl.lease.v1.LeaseService",
  methods: {
    /**
     * Ping service for readiness.
     *
     * @generated from rpc xyz.block.ftl.lease.v1.LeaseService.Ping
     */
    ping: {
      name: "Ping",
      I: PingRequest,
      O: PingResponse,
      kind: MethodKind.Unary,
      idempotency: MethodIdempotency.NoSideEffects,
    },
    /**
     * Acquire (and renew) a lease for a deployment.
     *
     * Returns ResourceExhausted if the lease is held.
     *
     * @generated from rpc xyz.block.ftl.lease.v1.LeaseService.AcquireLease
     */
    acquireLease: {
      name: "AcquireLease",
      I: AcquireLeaseRequest,
      O: AcquireLeaseResponse,
      kind: MethodKind.BiDiStreaming,
    },
  }
} as const;

