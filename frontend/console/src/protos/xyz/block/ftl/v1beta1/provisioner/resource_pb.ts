// @generated by protoc-gen-es v1.10.0 with parameter "target=ts"
// @generated from file xyz/block/ftl/v1beta1/provisioner/resource.proto (package xyz.block.ftl.v1beta1.provisioner, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, Struct } from "@bufbuild/protobuf";
import { Module } from "../../v1/schema/schema_pb.js";
import { DeploymentArtefact } from "../../v1/ftl_pb.js";

/**
 * Resource is an abstract resource extracted from FTL Schema.
 *
 * @generated from message xyz.block.ftl.v1beta1.provisioner.Resource
 */
export class Resource extends Message<Resource> {
  /**
   * id unique within the module
   *
   * @generated from field: string resource_id = 1;
   */
  resourceId = "";

  /**
   * @generated from oneof xyz.block.ftl.v1beta1.provisioner.Resource.resource
   */
  resource: {
    /**
     * @generated from field: xyz.block.ftl.v1beta1.provisioner.PostgresResource postgres = 102;
     */
    value: PostgresResource;
    case: "postgres";
  } | {
    /**
     * @generated from field: xyz.block.ftl.v1beta1.provisioner.MysqlResource mysql = 103;
     */
    value: MysqlResource;
    case: "mysql";
  } | {
    /**
     * @generated from field: xyz.block.ftl.v1beta1.provisioner.ModuleResource module = 104;
     */
    value: ModuleResource;
    case: "module";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<Resource>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "xyz.block.ftl.v1beta1.provisioner.Resource";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "resource_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 102, name: "postgres", kind: "message", T: PostgresResource, oneof: "resource" },
    { no: 103, name: "mysql", kind: "message", T: MysqlResource, oneof: "resource" },
    { no: 104, name: "module", kind: "message", T: ModuleResource, oneof: "resource" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Resource {
    return new Resource().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Resource {
    return new Resource().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Resource {
    return new Resource().fromJsonString(jsonString, options);
  }

  static equals(a: Resource | PlainMessage<Resource> | undefined, b: Resource | PlainMessage<Resource> | undefined): boolean {
    return proto3.util.equals(Resource, a, b);
  }
}

/**
 * @generated from message xyz.block.ftl.v1beta1.provisioner.PostgresResource
 */
export class PostgresResource extends Message<PostgresResource> {
  /**
   * @generated from field: xyz.block.ftl.v1beta1.provisioner.PostgresResource.PostgresResourceOutput output = 1;
   */
  output?: PostgresResource_PostgresResourceOutput;

  constructor(data?: PartialMessage<PostgresResource>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "xyz.block.ftl.v1beta1.provisioner.PostgresResource";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "output", kind: "message", T: PostgresResource_PostgresResourceOutput },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PostgresResource {
    return new PostgresResource().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PostgresResource {
    return new PostgresResource().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PostgresResource {
    return new PostgresResource().fromJsonString(jsonString, options);
  }

  static equals(a: PostgresResource | PlainMessage<PostgresResource> | undefined, b: PostgresResource | PlainMessage<PostgresResource> | undefined): boolean {
    return proto3.util.equals(PostgresResource, a, b);
  }
}

/**
 * @generated from message xyz.block.ftl.v1beta1.provisioner.PostgresResource.PostgresResourceOutput
 */
export class PostgresResource_PostgresResourceOutput extends Message<PostgresResource_PostgresResourceOutput> {
  /**
   * @generated from field: string read_dsn = 1;
   */
  readDsn = "";

  /**
   * @generated from field: string write_dsn = 2;
   */
  writeDsn = "";

  constructor(data?: PartialMessage<PostgresResource_PostgresResourceOutput>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "xyz.block.ftl.v1beta1.provisioner.PostgresResource.PostgresResourceOutput";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "read_dsn", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "write_dsn", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PostgresResource_PostgresResourceOutput {
    return new PostgresResource_PostgresResourceOutput().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PostgresResource_PostgresResourceOutput {
    return new PostgresResource_PostgresResourceOutput().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PostgresResource_PostgresResourceOutput {
    return new PostgresResource_PostgresResourceOutput().fromJsonString(jsonString, options);
  }

  static equals(a: PostgresResource_PostgresResourceOutput | PlainMessage<PostgresResource_PostgresResourceOutput> | undefined, b: PostgresResource_PostgresResourceOutput | PlainMessage<PostgresResource_PostgresResourceOutput> | undefined): boolean {
    return proto3.util.equals(PostgresResource_PostgresResourceOutput, a, b);
  }
}

/**
 * @generated from message xyz.block.ftl.v1beta1.provisioner.MysqlResource
 */
export class MysqlResource extends Message<MysqlResource> {
  /**
   * @generated from field: xyz.block.ftl.v1beta1.provisioner.MysqlResource.MysqlResourceOutput output = 1;
   */
  output?: MysqlResource_MysqlResourceOutput;

  constructor(data?: PartialMessage<MysqlResource>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "xyz.block.ftl.v1beta1.provisioner.MysqlResource";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "output", kind: "message", T: MysqlResource_MysqlResourceOutput },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MysqlResource {
    return new MysqlResource().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MysqlResource {
    return new MysqlResource().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MysqlResource {
    return new MysqlResource().fromJsonString(jsonString, options);
  }

  static equals(a: MysqlResource | PlainMessage<MysqlResource> | undefined, b: MysqlResource | PlainMessage<MysqlResource> | undefined): boolean {
    return proto3.util.equals(MysqlResource, a, b);
  }
}

/**
 * @generated from message xyz.block.ftl.v1beta1.provisioner.MysqlResource.MysqlResourceOutput
 */
export class MysqlResource_MysqlResourceOutput extends Message<MysqlResource_MysqlResourceOutput> {
  /**
   * @generated from field: string read_dsn = 1;
   */
  readDsn = "";

  /**
   * @generated from field: string write_dsn = 2;
   */
  writeDsn = "";

  constructor(data?: PartialMessage<MysqlResource_MysqlResourceOutput>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "xyz.block.ftl.v1beta1.provisioner.MysqlResource.MysqlResourceOutput";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "read_dsn", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "write_dsn", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MysqlResource_MysqlResourceOutput {
    return new MysqlResource_MysqlResourceOutput().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MysqlResource_MysqlResourceOutput {
    return new MysqlResource_MysqlResourceOutput().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MysqlResource_MysqlResourceOutput {
    return new MysqlResource_MysqlResourceOutput().fromJsonString(jsonString, options);
  }

  static equals(a: MysqlResource_MysqlResourceOutput | PlainMessage<MysqlResource_MysqlResourceOutput> | undefined, b: MysqlResource_MysqlResourceOutput | PlainMessage<MysqlResource_MysqlResourceOutput> | undefined): boolean {
    return proto3.util.equals(MysqlResource_MysqlResourceOutput, a, b);
  }
}

/**
 * @generated from message xyz.block.ftl.v1beta1.provisioner.ModuleResource
 */
export class ModuleResource extends Message<ModuleResource> {
  /**
   * @generated from field: xyz.block.ftl.v1beta1.provisioner.ModuleResource.ModuleResourceOutput output = 1;
   */
  output?: ModuleResource_ModuleResourceOutput;

  /**
   * @generated from field: xyz.block.ftl.v1.schema.Module schema = 2;
   */
  schema?: Module;

  /**
   * @generated from field: repeated xyz.block.ftl.v1.DeploymentArtefact artefacts = 3;
   */
  artefacts: DeploymentArtefact[] = [];

  /**
   * Runner labels required to run this deployment.
   *
   * @generated from field: optional google.protobuf.Struct labels = 4;
   */
  labels?: Struct;

  constructor(data?: PartialMessage<ModuleResource>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "xyz.block.ftl.v1beta1.provisioner.ModuleResource";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "output", kind: "message", T: ModuleResource_ModuleResourceOutput },
    { no: 2, name: "schema", kind: "message", T: Module },
    { no: 3, name: "artefacts", kind: "message", T: DeploymentArtefact, repeated: true },
    { no: 4, name: "labels", kind: "message", T: Struct, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ModuleResource {
    return new ModuleResource().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ModuleResource {
    return new ModuleResource().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ModuleResource {
    return new ModuleResource().fromJsonString(jsonString, options);
  }

  static equals(a: ModuleResource | PlainMessage<ModuleResource> | undefined, b: ModuleResource | PlainMessage<ModuleResource> | undefined): boolean {
    return proto3.util.equals(ModuleResource, a, b);
  }
}

/**
 * @generated from message xyz.block.ftl.v1beta1.provisioner.ModuleResource.ModuleResourceOutput
 */
export class ModuleResource_ModuleResourceOutput extends Message<ModuleResource_ModuleResourceOutput> {
  /**
   * @generated from field: string deployment_key = 1;
   */
  deploymentKey = "";

  constructor(data?: PartialMessage<ModuleResource_ModuleResourceOutput>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "xyz.block.ftl.v1beta1.provisioner.ModuleResource.ModuleResourceOutput";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "deployment_key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ModuleResource_ModuleResourceOutput {
    return new ModuleResource_ModuleResourceOutput().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ModuleResource_ModuleResourceOutput {
    return new ModuleResource_ModuleResourceOutput().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ModuleResource_ModuleResourceOutput {
    return new ModuleResource_ModuleResourceOutput().fromJsonString(jsonString, options);
  }

  static equals(a: ModuleResource_ModuleResourceOutput | PlainMessage<ModuleResource_ModuleResourceOutput> | undefined, b: ModuleResource_ModuleResourceOutput | PlainMessage<ModuleResource_ModuleResourceOutput> | undefined): boolean {
    return proto3.util.equals(ModuleResource_ModuleResourceOutput, a, b);
  }
}

